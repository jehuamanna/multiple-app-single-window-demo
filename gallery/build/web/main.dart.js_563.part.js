// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.0-167.0.dev.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_563", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    OutlinedButton$(autofocus, child, clipBehavior, focusNode, iconAlignment, key, onLongPress, onPressed, statesController, style) {
      return new A.OutlinedButton(onPressed, onLongPress, null, null, style, clipBehavior, focusNode, false, statesController, true, child, key);
    },
    OutlinedButton_styleFrom(alignment, animationDuration, backgroundColor, disabledBackgroundColor, disabledForegroundColor, disabledMouseCursor, elevation, enableFeedback, enabledMouseCursor, foregroundColor, maximumSize, minimumSize, padding, shadowColor, shape, side, splashFactory, tapTargetSize, textStyle, visualDensity) {
      var t1, _1_5_isSet, _1_5, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, _null = null;
      $label0$0: {
        t1 = new A._OutlinedButtonDefaultColor(foregroundColor, disabledForegroundColor);
        break $label0$0;
      }
      $label1$1: {
        _1_5_isSet = backgroundColor == null;
        if (_1_5_isSet) {
          _1_5 = disabledBackgroundColor == null;
          t2 = _1_5;
        } else {
          _1_5 = _null;
          t2 = false;
        }
        if (t2) {
          t2 = _null;
          break $label1$1;
        }
        if (B.boolConversionCheck(_1_5_isSet ? _1_5 : disabledBackgroundColor == null)) {
          t2 = new B.WidgetStatePropertyAll(backgroundColor, type$.WidgetStatePropertyAll_nullable_Color);
          break $label1$1;
        }
        t2 = new A._OutlinedButtonDefaultColor(backgroundColor, disabledBackgroundColor);
        break $label1$1;
      }
      $label2$2: {
        break $label2$2;
      }
      $label3$3: {
        t3 = new A._OutlinedButtonDefaultOverlay(foregroundColor);
        break $label3$3;
      }
      t4 = textStyle == null ? _null : new B.WidgetStatePropertyAll(textStyle, type$.WidgetStatePropertyAll_TextStyle);
      t5 = shadowColor == null ? _null : new B.WidgetStatePropertyAll(shadowColor, type$.WidgetStatePropertyAll_Color);
      t6 = elevation == null ? _null : new B.WidgetStatePropertyAll(elevation, type$.WidgetStatePropertyAll_double);
      t7 = new B.WidgetStatePropertyAll(padding, type$.WidgetStatePropertyAll_EdgeInsetsGeometry);
      t8 = minimumSize == null ? _null : new B.WidgetStatePropertyAll(minimumSize, type$.WidgetStatePropertyAll_Size);
      t9 = maximumSize == null ? _null : new B.WidgetStatePropertyAll(maximumSize, type$.WidgetStatePropertyAll_Size);
      t10 = new B.WidgetStatePropertyAll(side, type$.WidgetStatePropertyAll_BorderSide);
      t11 = new B.WidgetStatePropertyAll(shape, type$.WidgetStatePropertyAll_OutlinedBorder);
      return B.ButtonStyle$(alignment, animationDuration, _null, t2, t6, enableFeedback, _null, _null, t1, _null, _null, t9, t8, new A._OutlinedButtonDefaultMouseCursor(enabledMouseCursor, disabledMouseCursor), t3, t7, t5, t11, t10, splashFactory, _null, tapTargetSize, t4, visualDensity);
    },
    _scaledPadding(context) {
      var theme = B.Theme_of(context),
        t1 = theme.textTheme.labelLarge,
        defaultFontSize = t1 == null ? null : t1.fontSize;
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = B.MediaQuery__maybeOf(context, C._MediaQueryAspect_4);
      t1 = t1 == null ? null : t1.get$textScaler();
      return B.ButtonStyleButton_scaledPadding(new B.EdgeInsets(24, 0, 24, 0), new B.EdgeInsets(12, 0, 12, 0), new B.EdgeInsets(6, 0, 6, 0), (t1 == null ? C._LinearTextScaler_1 : t1).scale$1(0, defaultFontSize) / 14);
    },
    OutlinedButton: function OutlinedButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.onPressed = t0;
      _.onLongPress = t1;
      _.onHover = t2;
      _.onFocusChange = t3;
      _.style = t4;
      _.clipBehavior = t5;
      _.focusNode = t6;
      _.autofocus = t7;
      _.statesController = t8;
      _.isSemanticButton = t9;
      _.child = t10;
      _.key = t11;
    },
    _OutlinedButtonDefaultColor: function _OutlinedButtonDefaultColor(t0, t1) {
      this.color = t0;
      this.disabled = t1;
    },
    _OutlinedButtonDefaultOverlay: function _OutlinedButtonDefaultOverlay(t0) {
      this.foreground = t0;
    },
    _OutlinedButtonDefaultMouseCursor: function _OutlinedButtonDefaultMouseCursor(t0, t1) {
      this.enabledCursor = t0;
      this.disabledCursor = t1;
    },
    _OutlinedButtonDefaultsM3: function _OutlinedButtonDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.context = t0;
      _.___OutlinedButtonDefaultsM3__colors_FI = $;
      _.textStyle = t1;
      _.backgroundColor = t2;
      _.foregroundColor = t3;
      _.overlayColor = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.elevation = t7;
      _.padding = t8;
      _.minimumSize = t9;
      _.fixedSize = t10;
      _.maximumSize = t11;
      _.iconColor = t12;
      _.iconSize = t13;
      _.side = t14;
      _.shape = t15;
      _.mouseCursor = t16;
      _.visualDensity = t17;
      _.tapTargetSize = t18;
      _.animationDuration = t19;
      _.enableFeedback = t20;
      _.alignment = t21;
      _.splashFactory = t22;
      _.backgroundBuilder = t23;
      _.foregroundBuilder = t24;
    },
    _OutlinedButtonDefaultsM3_foregroundColor_closure: function _OutlinedButtonDefaultsM3_foregroundColor_closure(t0) {
      this.$this = t0;
    },
    _OutlinedButtonDefaultsM3_overlayColor_closure: function _OutlinedButtonDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    _OutlinedButtonDefaultsM3_side_closure: function _OutlinedButtonDefaultsM3_side_closure(t0) {
      this.$this = t0;
    },
    _OutlinedButtonDefaultsM3_mouseCursor_closure: function _OutlinedButtonDefaultsM3_mouseCursor_closure() {
    },
    __OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable: function __OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable() {
    },
    __OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable: function __OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable() {
    },
    __OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable: function __OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable() {
    }
  },
  D;
  B = holdersList[0];
  C = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[98], A);
  D = holdersList[119];
  A.OutlinedButton.prototype = {
    defaultStyleOf$1(context) {
      var _null = null;
      B.Theme_of(context);
      B.Theme_of(context);
      return new A._OutlinedButtonDefaultsM3(context, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, C.Duration_200000, true, C.Alignment_0_0, _null, _null, _null);
    },
    themeStyleOf$1(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.OutlinedButtonTheme);
      t1 = B.Theme_of(context);
      return t1.outlinedButtonTheme.style;
    }
  };
  A._OutlinedButtonDefaultColor.prototype = {
    resolve$1(states) {
      if (type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6))
        return this.disabled;
      return this.color;
    }
  };
  A._OutlinedButtonDefaultOverlay.prototype = {
    resolve$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, C.WidgetState_2)) {
        t1 = this.foreground;
        return B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      if (states.contains$1(0, C.WidgetState_0)) {
        t1 = this.foreground;
        return B.Color$fromARGB(20, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      if (states.contains$1(0, C.WidgetState_1)) {
        t1 = this.foreground;
        return B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      return null;
    }
  };
  A._OutlinedButtonDefaultMouseCursor.prototype = {
    resolve$1(states) {
      if (type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6))
        return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  A._OutlinedButtonDefaultsM3.prototype = {
    get$_outlined_button$_colors() {
      var t1, _this = this,
        value = _this.___OutlinedButtonDefaultsM3__colors_FI;
      if (value === $) {
        t1 = B.Theme_of(_this.context);
        _this.___OutlinedButtonDefaultsM3__colors_FI !== $ && B.throwLateFieldADI("_colors");
        value = _this.___OutlinedButtonDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$textStyle() {
      return new B.WidgetStatePropertyAll(B.Theme_of(this.context).textTheme.labelLarge, type$.WidgetStatePropertyAll_nullable_TextStyle);
    },
    get$backgroundColor(_) {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$foregroundColor() {
      return new B._WidgetStatePropertyWith(new A._OutlinedButtonDefaultsM3_foregroundColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    get$overlayColor() {
      return new B._WidgetStatePropertyWith(new A._OutlinedButtonDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    get$shadowColor(_) {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$surfaceTintColor() {
      return C.WidgetStatePropertyAll_Color_0;
    },
    get$elevation(_) {
      return C.WidgetStatePropertyAll_0;
    },
    get$padding(_) {
      return new B.WidgetStatePropertyAll(A._scaledPadding(this.context), type$.WidgetStatePropertyAll_EdgeInsetsGeometry);
    },
    get$minimumSize() {
      return C.WidgetStatePropertyAll_Size_64_40;
    },
    get$maximumSize() {
      return C.WidgetStatePropertyAll_Bzp;
    },
    get$side() {
      return new B._WidgetStatePropertyWith(new A._OutlinedButtonDefaultsM3_side_closure(this), type$._WidgetStatePropertyWith_BorderSide);
    },
    get$shape(_) {
      return C.WidgetStatePropertyAll_8UW;
    },
    get$mouseCursor() {
      return new B._WidgetStatePropertyWith(new A._OutlinedButtonDefaultsM3_mouseCursor_closure(), type$._WidgetStatePropertyWith_nullable_MouseCursor);
    },
    get$visualDensity() {
      return B.Theme_of(this.context).visualDensity;
    },
    get$tapTargetSize() {
      return B.Theme_of(this.context).materialTapTargetSize;
    },
    get$splashFactory() {
      return B.Theme_of(this.context).splashFactory;
    }
  };
  A.__OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable.prototype = {};
  A.__OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable.prototype = {};
  A.__OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable.prototype = {};
  var typesOffset = hunkHelpers.updateTypes([]);
  A._OutlinedButtonDefaultsM3_foregroundColor_closure.prototype = {
    call$1(states) {
      var t1;
      if (type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6)) {
        t1 = this.$this.get$_outlined_button$_colors().onSurface.value;
        return B.Color$fromARGB(97, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255);
      }
      return this.$this.get$_outlined_button$_colors().primary;
    },
    $signature: 7
  };
  A._OutlinedButtonDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, C.WidgetState_2)) {
        t1 = this.$this.get$_outlined_button$_colors().primary;
        return B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      if (states.contains$1(0, C.WidgetState_0)) {
        t1 = this.$this.get$_outlined_button$_colors().primary;
        return B.Color$fromARGB(20, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      if (states.contains$1(0, C.WidgetState_1)) {
        t1 = this.$this.get$_outlined_button$_colors().primary;
        return B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      return null;
    },
    $signature: 15
  };
  A._OutlinedButtonDefaultsM3_side_closure.prototype = {
    call$1(states) {
      var t1, t2;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, C.WidgetState_6)) {
        t1 = this.$this.get$_outlined_button$_colors().onSurface.value;
        return new B.BorderSide(B.Color$fromARGB(31, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 1, C.BorderStyle_1, -1);
      }
      if (states.contains$1(0, C.WidgetState_1))
        return new B.BorderSide(this.$this.get$_outlined_button$_colors().primary, 1, C.BorderStyle_1, -1);
      t1 = this.$this.get$_outlined_button$_colors();
      t2 = t1._outline;
      if (t2 == null) {
        t2 = t1._onBackground;
        t1 = t2 == null ? t1.onSurface : t2;
      } else
        t1 = t2;
      return new B.BorderSide(t1, 1, C.BorderStyle_1, -1);
    },
    $signature: 115
  };
  A._OutlinedButtonDefaultsM3_mouseCursor_closure.prototype = {
    call$1(states) {
      if (type$.Set_WidgetState._as(states).contains$1(0, C.WidgetState_6))
        return C.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    $signature: 47
  };
  (function aliases() {
    var _ = A.OutlinedButton.prototype;
    _.super$OutlinedButton$defaultStyleOf = _.defaultStyleOf$1;
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.OutlinedButton, B.ButtonStyleButton);
    _inheritMany(B.WidgetStateProperty, [A.__OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable, A.__OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable, A.__OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable]);
    _inherit(A._OutlinedButtonDefaultColor, A.__OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable);
    _inherit(A._OutlinedButtonDefaultOverlay, A.__OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable);
    _inherit(A._OutlinedButtonDefaultMouseCursor, A.__OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable);
    _inherit(A._OutlinedButtonDefaultsM3, B.ButtonStyle);
    _inheritMany(B.Closure, [A._OutlinedButtonDefaultsM3_foregroundColor_closure, A._OutlinedButtonDefaultsM3_overlayColor_closure, A._OutlinedButtonDefaultsM3_side_closure, A._OutlinedButtonDefaultsM3_mouseCursor_closure]);
    _mixin(A.__OutlinedButtonDefaultColor_MaterialStateProperty_Diagnosticable, B.Diagnosticable);
    _mixin(A.__OutlinedButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable, B.Diagnosticable);
    _mixin(A.__OutlinedButtonDefaultOverlay_MaterialStateProperty_Diagnosticable, B.Diagnosticable);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"OutlinedButton":{"ButtonStyleButton":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OutlinedButtonDefaultColor":{"WidgetStateProperty":["Color?"]},"_OutlinedButtonDefaultOverlay":{"WidgetStateProperty":["Color?"]},"_OutlinedButtonDefaultMouseCursor":{"WidgetStateProperty":["MouseCursor?"]},"_OutlinedButtonDefaultsM3":{"ButtonStyle":[]},"OutlinedButtonTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      OutlinedButtonTheme: findType("OutlinedButtonTheme"),
      Set_WidgetState: findType("Set<WidgetState>"),
      WidgetStatePropertyAll_BorderSide: findType("WidgetStatePropertyAll<BorderSide>"),
      WidgetStatePropertyAll_Color: findType("WidgetStatePropertyAll<Color>"),
      WidgetStatePropertyAll_EdgeInsetsGeometry: findType("WidgetStatePropertyAll<EdgeInsetsGeometry>"),
      WidgetStatePropertyAll_OutlinedBorder: findType("WidgetStatePropertyAll<OutlinedBorder>"),
      WidgetStatePropertyAll_Size: findType("WidgetStatePropertyAll<Size>"),
      WidgetStatePropertyAll_TextStyle: findType("WidgetStatePropertyAll<TextStyle>"),
      WidgetStatePropertyAll_double: findType("WidgetStatePropertyAll<double>"),
      WidgetStatePropertyAll_nullable_Color: findType("WidgetStatePropertyAll<Color?>"),
      WidgetStatePropertyAll_nullable_TextStyle: findType("WidgetStatePropertyAll<TextStyle?>"),
      _WidgetStatePropertyWith_BorderSide: findType("_WidgetStatePropertyWith<BorderSide>"),
      _WidgetStatePropertyWith_nullable_Color: findType("_WidgetStatePropertyWith<Color?>"),
      _WidgetStatePropertyWith_nullable_MouseCursor: findType("_WidgetStatePropertyWith<MouseCursor?>")
    };
  })();
  (function constants() {
    D.EdgeInsetsDirectional_12_0_0_0 = new B.EdgeInsetsDirectional(12, 0, 0, 0);
    D.EdgeInsets_16_16_16_0 = new B.EdgeInsets(16, 16, 16, 0);
    D.IconData_57695_MaterialIcons_null_true = new B.IconData(57695, "MaterialIcons", null, true);
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_563", e: "endPart", h: h});
})($__dart_deferred_initializers__, "qlzqP65z0QamO17vRKSvdxnoJGA=");
;