// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.0-167.0.dev.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_572", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, A, C,
  B = {WillPopScope: function WillPopScope(t0, t1, t2) {
      this.child = t0;
      this.onWillPop = t1;
      this.key = t2;
    }, _WillPopScopeState: function _WillPopScopeState(t0) {
      var _ = this;
      _._widget = _._will_pop_scope$_route = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    }},
  D;
  J = holdersList[1];
  A = holdersList[0];
  C = holdersList[2];
  B = hunkHelpers.updateHolder(holdersList[100], B);
  D = holdersList[124];
  B.WillPopScope.prototype = {
    createState$0() {
      return new B._WillPopScopeState(C._StateLifecycle_0);
    }
  };
  B._WillPopScopeState.prototype = {
    didChangeDependencies$0() {
      var t1, t2, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._widget.onWillPop;
      if (t1 != null) {
        t2 = _this._will_pop_scope$_route;
        if (t2 != null) {
          type$.Future_bool_Function._as(t1);
          C.JSArray_methods.remove$1(t2._willPopCallbacks, t1);
        }
      }
      t1 = _this._framework$_element;
      t1.toString;
      t1 = _this._will_pop_scope$_route = A.ModalRoute_of(t1, type$.nullable_Object);
      t2 = _this._widget.onWillPop;
      if (t2 != null)
        if (t1 != null) {
          type$.Future_bool_Function._as(t2);
          C.JSArray_methods.add$1(t1._willPopCallbacks, t2);
        }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.WillPopScope._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.onWillPop;
      if (!J.$eq$(_this._widget.onWillPop, t1) && _this._will_pop_scope$_route != null) {
        if (t1 != null) {
          t2 = _this._will_pop_scope$_route;
          t2.toString;
          C.JSArray_methods.remove$1(t2._willPopCallbacks, type$.Future_bool_Function._as(t1));
        }
        t1 = _this._widget.onWillPop;
        if (t1 != null) {
          t2 = _this._will_pop_scope$_route;
          t2.toString;
          C.JSArray_methods.add$1(t2._willPopCallbacks, type$.Future_bool_Function._as(t1));
        }
      }
    },
    dispose$0() {
      var t2,
        t1 = this._widget.onWillPop;
      if (t1 != null) {
        t2 = this._will_pop_scope$_route;
        if (t2 != null) {
          type$.Future_bool_Function._as(t1);
          C.JSArray_methods.remove$1(t2._willPopCallbacks, t1);
        }
      }
      this.super$State$dispose();
    },
    build$1(context) {
      return this._widget.child;
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.WillPopScope, A.StatefulWidget);
    _inherit(B._WillPopScopeState, A.State);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"WillPopScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WillPopScopeState":{"State":["WillPopScope"],"State.T":"WillPopScope"}}'));
  var type$ = {
    Future_bool_Function: A.findType("Future<bool>()"),
    WillPopScope: A.findType("WillPopScope"),
    nullable_Object: A.findType("Object?")
  };
  (function constants() {
    D.SizedBox_null_80_null_null = new A.SizedBox(null, 80, null, null);
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_572", e: "endPart", h: h});
})($__dart_deferred_initializers__, "JUHxreNE+x6Dy2O9MN6w2mu7YPA=");
;