// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.0-167.0.dev.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_500", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    GalleryLocalizationsLt$() {
      return new B.GalleryLocalizationsLt(A.canonicalizedLocale("lt"));
    },
    GalleryLocalizationsLt: function GalleryLocalizationsLt(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[111];
  B = hunkHelpers.updateHolder(holdersList[48], B);
  B.GalleryLocalizationsLt.prototype = {
    githubRepo$1(repoName) {
      return "\u201e" + repoName + "\u201c: \u201eGitHub\u201c saugykla";
    },
    aboutDialogDescription$1(repoLink) {
      return "Nor\u0117dami per\u017ei\u016br\u0117ti \u0161ios programos \u0161altinio kod\u0105 apsilankykite adresu " + repoLink + ".";
    },
    get$deselect() {
      return "Panaikinti pasirinkim\u0105";
    },
    get$notSelected() {
      return "Nepasirinkta";
    },
    get$select(_) {
      return "Pasirinkti";
    },
    get$selectable() {
      return "Pasirenkama (ilgai paspaudus)";
    },
    get$selected(_) {
      return "Pasirinkta";
    },
    get$signIn() {
      return "PRISIJUNGTI";
    },
    get$bannerDemoText() {
      return "J\u016bs\u0173 slapta\u017eodis buvo atnaujintas kitame \u012frenginyje. Prisijunkite dar kart\u0105.";
    },
    get$bannerDemoResetText() {
      return "I\u0161 naujo nustatyti reklamjuost\u0119";
    },
    get$bannerDemoMultipleText() {
      return "Keli veiksmai";
    },
    get$bannerDemoLeadingText() {
      return "Pradin\u0117 piktograma";
    },
    get$dismiss() {
      return "ATSISAKYTI";
    },
    get$backToGallery() {
      return "Atgal \u012f galerij\u0105";
    },
    get$cardsDemoExplore() {
      return "Nar\u0161yti";
    },
    cardsDemoExploreSemantics$1(destinationName) {
      return "Nar\u0161yti: " + destinationName;
    },
    cardsDemoShareSemantics$1(destinationName) {
      return "Bendrinti: " + destinationName;
    },
    get$cardsDemoTappable() {
      return "Lie\u010diamasis";
    },
    get$cardsDemoTravelDestinationTitle1() {
      return "10 populiariausi\u0173 lankytin\u0173 miest\u0173 Tamilnade";
    },
    get$cardsDemoTravelDestinationDescription1() {
      return "Skai\u010dius 10";
    },
    get$cardsDemoTravelDestinationCity1() {
      return "Tand\u017eav\u016bras";
    },
    get$cardsDemoTravelDestinationLocation1() {
      return "Tand\u017eav\u016bras, Tamilnadas";
    },
    get$cardsDemoTravelDestinationTitle2() {
      return "Piet\u0173 Indijos amatininkai";
    },
    get$cardsDemoTravelDestinationDescription2() {
      return "\u0160ilko verp\u0117jai";
    },
    get$cardsDemoTravelDestinationCity2() {
      return "\u010cetinadas";
    },
    get$cardsDemoTravelDestinationLocation2() {
      return "Sivaganga, Tamilnadas";
    },
    get$cardsDemoTravelDestinationTitle3() {
      return "Brihadisvaros \u0161ventykla";
    },
    get$cardsDemoTravelDestinationDescription3() {
      return "\u0160ventyklos";
    },
    get$homeHeaderGallery() {
      return "Galerija";
    },
    get$homeHeaderCategories() {
      return "Kategorijos";
    },
    get$shrineDescription() {
      return "Mading\u0173 ma\u017emenini\u0173 preki\u0173 programa";
    },
    get$fortnightlyDescription() {
      return "\u012e turin\u012f orientuota naujien\u0173 programa";
    },
    get$rallyDescription() {
      return "Asmenini\u0173 finans\u0173 programa";
    },
    get$replyDescription() {
      return "Veiksminga, kryptinga el.\xa0pa\u0161to programa";
    },
    get$rallyAccountDataChecking() {
      return "Tikrinama";
    },
    get$rallyAccountDataHomeSavings() {
      return "Nam\u0173 \u016bkio santaupos";
    },
    get$rallyAccountDataCarSavings() {
      return "Santaupos automobiliui";
    },
    get$rallyAccountDataVacation() {
      return "Atostogos";
    },
    get$rallyAccountDetailDataAnnualPercentageYield() {
      return "Metinis pelningumas procentais";
    },
    get$rallyAccountDetailDataInterestRate() {
      return "Pal\u016bkan\u0173 norma";
    },
    get$rallyAccountDetailDataInterestYtd() {
      return "Pal\u016bkanos nuo met\u0173 prad\u017eios iki dabar";
    },
    get$rallyAccountDetailDataInterestPaidLastYear() {
      return "Pra\u0117jusiais metais i\u0161mok\u0117tos pal\u016bkanos";
    },
    get$rallyAccountDetailDataNextStatement() {
      return "Kita ataskaita";
    },
    get$rallyAccountDetailDataAccountOwner() {
      return "Paskyros savininkas";
    },
    get$rallyBillDetailTotalAmount() {
      return "Visa suma";
    },
    get$rallyBillDetailAmountPaid() {
      return "Sumok\u0117ta suma";
    },
    get$rallyBillDetailAmountDue() {
      return "Mok\u0117tina suma";
    },
    get$rallyBudgetCategoryCoffeeShops() {
      return "Kavin\u0117s";
    },
    get$rallyBudgetCategoryGroceries() {
      return "Pirkiniai";
    },
    get$rallyBudgetCategoryRestaurants() {
      return "Restoranai";
    },
    get$rallyBudgetCategoryClothing() {
      return "Apranga";
    },
    get$rallyBudgetDetailTotalCap() {
      return "Did\u017eiausia bendra suma";
    },
    get$rallyBudgetDetailAmountUsed() {
      return "I\u0161naudota suma";
    },
    get$rallyBudgetDetailAmountLeft() {
      return "Likusi suma";
    },
    get$rallySettingsManageAccounts() {
      return "Tvarkyti paskyras";
    },
    get$rallySettingsTaxDocuments() {
      return "Mokes\u010di\u0173 dokumentai";
    },
    get$rallySettingsPasscodeAndTouchId() {
      return "Slapta\u017eodis ir \u201eTouch ID\u201c";
    },
    get$rallySettingsNotifications() {
      return "Prane\u0161imai";
    },
    get$rallySettingsPersonalInformation() {
      return "Asmens informacija";
    },
    get$rallySettingsPaperlessSettings() {
      return "Elektronini\u0173 ataskait\u0173 nustatymas";
    },
    get$rallySettingsFindAtms() {
      return "Rasti bankomatus";
    },
    get$rallySettingsHelp() {
      return "Pagalba";
    },
    get$rallySettingsSignOut() {
      return "Atsijungti";
    },
    get$rallyAccountTotal() {
      return "I\u0161 viso";
    },
    get$rallyBillsDue() {
      return "Terminas";
    },
    get$rallyBudgetLeft() {
      return "Likutis";
    },
    get$rallyAccounts() {
      return "Paskyros";
    },
    get$rallyBills() {
      return "S\u0105skaitos";
    },
    get$rallyBudgets() {
      return "Biud\u017eetai";
    },
    get$rallyAlerts() {
      return "\u012esp\u0117jimai";
    },
    get$rallySeeAll() {
      return "\u017dI\u016aR\u0116TI VISK\u0104";
    },
    get$rallyFinanceLeft() {
      return "LIKUTIS";
    },
    get$rallyTitleOverview() {
      return "AP\u017dVALGA";
    },
    get$rallyTitleAccounts() {
      return "PASKYROS";
    },
    get$rallyTitleBills() {
      return "S\u0104SKAITOS";
    },
    get$rallyTitleBudgets() {
      return "BIUD\u017dETAI";
    },
    get$rallyTitleSettings() {
      return "NUSTATYMAI";
    },
    get$rallyLoginLoginToRally() {
      return "Prisijungimas prie \u201eRally\u201c";
    },
    get$rallyLoginNoAccount() {
      return "Neturite paskyros?";
    },
    get$rallyLoginSignUp() {
      return "PRISIREGISTRUOTI";
    },
    get$rallyLoginUsername() {
      return "Naudotojo vardas";
    },
    get$rallyLoginPassword() {
      return "Slapta\u017eodis";
    },
    get$rallyLoginLabelLogin() {
      return "Prisijungti";
    },
    get$rallyLoginRememberMe() {
      return "Atsiminti mane";
    },
    get$rallyLoginButtonLogin() {
      return "PRISIJUNGTI";
    },
    rallyAlertsMessageHeadsUpShopping$1(percent) {
      return "D\u0117mesio, \u0161\u012f m\u0117nes\u012f i\u0161naudojote " + percent + " apsipirkimo biud\u017eeto.";
    },
    rallyAlertsMessageSpentOnRestaurants$1(amount) {
      return "\u0160i\u0105 savait\u0119 i\u0161leidote " + amount + " restoranuose.";
    },
    rallyAlertsMessageATMFees$1(amount) {
      return "\u0160\u012f m\u0117nes\u012f i\u0161leidote " + amount + " bankomato mokes\u010diams";
    },
    rallyAlertsMessageCheckingAccount$1(percent) {
      return "Puiku! Einamoji s\u0105skaita " + percent + " didesn\u0117 nei pastar\u0105j\u012f m\u0117nes\u012f.";
    },
    rallyAlertsMessageUnassignedTransactions$1(count) {
      var t1 = "Gaukite didesn\u0119 mokes\u010di\u0173 lengvat\u0105! Priskirkite kategorijas " + count;
      return A.Intl_pluralLogic(count, t1 + " nepriskirtoms operacijoms.", this.localeName, t1 + " nepriskirtos operacijos.", "Gaukite didesn\u0119 mokes\u010di\u0173 lengvat\u0105! Priskirkite kategorijas 1 nepriskirtai operacijai.", t1 + " nepriskirt\u0173 operacij\u0173.", null, null, type$.String);
    },
    get$rallySeeAllAccounts() {
      return "Per\u017ei\u016br\u0117ti visas paskyras";
    },
    get$rallySeeAllBills() {
      return "Per\u017ei\u016br\u0117ti visas s\u0105skaitas";
    },
    get$rallySeeAllBudgets() {
      return "Per\u017ei\u016br\u0117ti visus biud\u017eetus";
    },
    rallyAccountAmount$3(accountName, accountNumber, amount) {
      return accountName + " s\u0105skaita (" + accountNumber + "), kurioje yra " + amount + ".";
    },
    rallyBillAmount$3(billName, date, amount) {
      return "S\u0105skait\u0105 \u201e" + billName + "\u201c, kurios suma " + amount + ", reikia apmok\u0117ti iki " + date + ".";
    },
    rallyBudgetAmount$4(budgetName, amountUsed, amountTotal, amountLeft) {
      return "Biud\u017eetas \u201e" + budgetName + "\u201c, kurio i\u0161naudota suma: " + A.S(amountUsed) + " i\u0161 " + amountTotal + "; likusi suma: " + amountLeft;
    },
    get$craneDescription() {
      return "Suasmeninta kelioni\u0173 programa";
    },
    get$homeCategoryReference() {
      return "STILIAI IR KITA";
    },
    get$demoInvalidURL() {
      return "Nepavyko pateikti URL:";
    },
    get$demoOptionsTooltip() {
      return "Parinktys";
    },
    get$demoInfoTooltip() {
      return "Informacija";
    },
    get$demoCodeTooltip() {
      return "Demonstracin\u0117s versijos kodas";
    },
    get$demoDocumentationTooltip() {
      return "API dokumentacija";
    },
    get$demoFullscreenTooltip() {
      return "Visas ekranas";
    },
    get$demoCodeViewerCopyAll() {
      return "KOPIJUOTI VISK\u0104";
    },
    get$demoCodeViewerCopiedToClipboardMessage() {
      return "Nukopijuota \u012f i\u0161karpin\u0119.";
    },
    demoCodeViewerFailedToCopyToClipboardMessage$1(error) {
      return "Nepavyko nukopijuoti \u012f i\u0161karpin\u0119: " + A.S(error);
    },
    get$demoOptionsFeatureTitle() {
      return "\u017dr. parinktis";
    },
    get$demoOptionsFeatureDescription() {
      return "Palieskite \u010dia, kad per\u017ei\u016br\u0117tum\u0117te pasiekiamas \u0161ios demonstracin\u0117s versijos parinktis.";
    },
    get$settingsTitle() {
      return "Nustatymai";
    },
    get$settingsButtonLabel() {
      return "Nustatymai";
    },
    get$settingsButtonCloseLabel() {
      return "U\u017edaryti nustatymus";
    },
    get$settingsSystemDefault() {
      return "Sistema";
    },
    get$settingsTextScaling() {
      return "Teksto mastelio keitimas";
    },
    get$settingsTextScalingSmall() {
      return "Ma\u017eas";
    },
    get$settingsTextScalingNormal() {
      return "\u012eprastas";
    },
    get$settingsTextScalingLarge() {
      return "Didelis";
    },
    get$settingsTextScalingHuge() {
      return "Did\u017eiulis";
    },
    get$settingsTextDirection() {
      return "Teksto kryptis";
    },
    get$settingsTextDirectionLocaleBased() {
      return "Pagal lokal\u0119";
    },
    get$settingsTextDirectionLTR() {
      return "I\u0161 kair\u0117s \u012f de\u0161in\u0119";
    },
    get$settingsTextDirectionRTL() {
      return "I\u0161 de\u0161in\u0117s \u012f kair\u0119";
    },
    get$settingsLocale() {
      return "Lokal\u0117";
    },
    get$settingsPlatformMechanics() {
      return "Platformos mechanika";
    },
    get$settingsTheme() {
      return "Tema";
    },
    get$settingsDarkTheme() {
      return "Tamsioji tema";
    },
    get$settingsLightTheme() {
      return "\u0160viesioji tema";
    },
    get$settingsSlowMotion() {
      return "Sul\u0117tintas";
    },
    get$settingsAbout() {
      return "Apie \u201eFlutter\u201c galerij\u0105";
    },
    get$settingsFeedback() {
      return "Si\u0173sti atsiliepim\u0105";
    },
    get$settingsAttribution() {
      return "Suk\u016br\u0117 TOASTER, Londonas";
    },
    get$demoAppBarTitle() {
      return "Programos juosta";
    },
    get$demoAppBarSubtitle() {
      return "Rodoma informacija ir veiksmai, susij\u0119 su esamu ekranu";
    },
    get$demoAppBarDescription() {
      return "Programos juostoje pateikiamas turinys ir veiksmai, susij\u0119 su esamu ekranu. Ji skirta prek\u0117s \u017eenklui, ekrano pavadinimams, nar\u0161ymo ir kitiems veiksmams";
    },
    get$demoBottomAppBarTitle() {
      return "Apatin\u0117 program\u0173 juosta";
    },
    get$demoBottomAppBarSubtitle() {
      return "Pateikiami nar\u0161ymo elementai ir veiksmai apa\u010dioje";
    },
    get$demoBottomAppBarDescription() {
      return "Apatin\u0117se program\u0173 juostose galima pasiekti apatin\u012f nar\u0161ymo skydel\u012f ir iki keturi\u0173 veiksm\u0173, \u012fskaitant slank\u0173j\u012f veiksmo mygtuk\u0105.";
    },
    get$bottomAppBarNotch() {
      return "\u012eranta";
    },
    get$bottomAppBarPosition() {
      return "Slankiojo veiksmo mygtuko pozicija";
    },
    get$bottomAppBarPositionDockedEnd() {
      return "Prijungta prie doko \u2013 pabaigoje";
    },
    get$bottomAppBarPositionDockedCenter() {
      return "Prijungta prie doko \u2013 per vidur\u012f";
    },
    get$bottomAppBarPositionFloatingEnd() {
      return "Slankusis \u2013 pabaigoje";
    },
    get$bottomAppBarPositionFloatingCenter() {
      return "Slankusis \u2013 per vidur\u012f";
    },
    get$demoBannerTitle() {
      return "Reklamjuost\u0117";
    },
    get$demoBannerSubtitle() {
      return "Pateikiama reklamjuost\u0117 s\u0105ra\u0161e";
    },
    get$demoBannerDescription() {
      return "Reklamjuost\u0117je pateikiamas svarbus, trumpas prane\u0161imas ir pateikiami veiksmai, kuriuos tur\u0117t\u0173 atlikti naudotojai (arba atsisakyti reklamjuost\u0117s). Nor\u0117damas atsisakyti reklamjuost\u0117s naudotojas turi atlikti veiksm\u0105.";
    },
    get$demoBottomNavigationTitle() {
      return "Apatin\u0117 nar\u0161ymo juosta";
    },
    get$demoBottomNavigationSubtitle() {
      return "Apatin\u0117 nar\u0161ymo juosta su blunkan\u010diais rodiniais";
    },
    get$demoBottomNavigationPersistentLabels() {
      return "Nuolatin\u0117s etiket\u0117s";
    },
    get$demoBottomNavigationSelectedLabel() {
      return "Pasirinkta etiket\u0117";
    },
    get$demoBottomNavigationDescription() {
      return "Apatin\u0117se nar\u0161ymo juostose ekrano apa\u010dioje pateikiama nuo trij\u0173 iki penki\u0173 paskirties viet\u0173. Kiekvien\u0105 paskirties viet\u0105 nurodo piktograma ir pasirenkama teksto etiket\u0117. Paliet\u0119s apatin\u0117s nar\u0161ymo juostos piktogram\u0105, naudotojas patenka \u012f pagrindin\u0119 su piktograma susiet\u0105 nar\u0161ymo paskirties viet\u0105.";
    },
    get$demoButtonTitle() {
      return "Mygtukai";
    },
    get$demoButtonSubtitle() {
      return "Tekstiniai, i\u0161kilieji, kont\u016briniai ir kt.";
    },
    get$demoTextButtonTitle() {
      return "Tekstinis mygtukas";
    },
    get$demoTextButtonDescription() {
      return "Paspaudus tekstin\u012f mygtuk\u0105 pateikiama ra\u0161alo d\u0117m\u0117, bet ji nei\u0161nyksta. Naudokite tekstinius mygtukus \u012franki\u0173 juostose, dialog\u0173 languose ir \u012fterptus su u\u017epildymu";
    },
    get$demoElevatedButtonTitle() {
      return "I\u0161kilusis mygtukas";
    },
    get$demoElevatedButtonDescription() {
      return "I\u0161kilieji mygtukai padidina daugum\u0105 plok\u0161\u010di\u0173j\u0173 i\u0161d\u0117stym\u0173. Jie pary\u0161kina funkcijas u\u017eimtose ar pla\u010diose erdv\u0117se.";
    },
    get$demoOutlinedButtonTitle() {
      return "Kont\u016briniai mygtukai";
    },
    get$demoOutlinedButtonDescription() {
      return "Paspaudus kont\u016brinius mygtukus jie tampa neskaidr\u016bs ir pakyla. Jie da\u017enai teikiami su i\u0161kiliaisiais mygtukais norint nurodyti alternatyv\u0173, antrin\u012f veiksm\u0105.";
    },
    get$demoToggleButtonTitle() {
      return "Perjungimo mygtukai";
    },
    get$demoToggleButtonDescription() {
      return "Perjungimo mygtukais galima grupuoti susijusias parinktis. Norint pa\u017eym\u0117ti susijusi\u0173 perjungimo mygtuk\u0173 grupes, tur\u0117t\u0173 b\u016bti bendrinamas bendras grup\u0117s sud\u0117tinis rodinys";
    },
    get$demoFloatingButtonTitle() {
      return "Slankusis veiksmo mygtukas";
    },
    get$demoFloatingButtonDescription() {
      return "Slankusis veiksmo mygtukas \u2013 tai apskritas piktogramos mygtukas, pateikiamas vir\u0161 turinio, raginant atlikti pagrindin\u012f veiksm\u0105 programoje.";
    },
    get$demoCardTitle() {
      return "Kortel\u0117s";
    },
    get$demoCardSubtitle() {
      return "Pagrindin\u0117s kortel\u0117s u\u017eapvalintais kampais";
    },
    get$demoChipTitle() {
      return "Fragmentai";
    },
    get$demoCardDescription() {
      return "Kortel\u0117 \u2013 tai trima\u010di\u0173 objekt\u0173 dizaino lapas, kuriame pateikiama tam tikra susijusi informacija, pvz., albumas, geografine informacija apibr\u0117\u017eta vietov\u0117, patiekalas, i\u0161sami kontaktin\u0117 informacija ir pan.";
    },
    get$demoChipSubtitle() {
      return "Kompakti\u0161ki elementai, kuriuose yra \u012fvestis, atributas ar veiksmas";
    },
    get$demoActionChipTitle() {
      return "Veiksmo fragmentas";
    },
    get$demoActionChipDescription() {
      return "Veiksmo fragmentai \u2013 tai parink\u010di\u0173 rinkiniai, suaktyvinantys su pradiniu turiniu susijus\u012f veiksm\u0105. Veiksmo fragmentai NS tur\u0117t\u0173 b\u016bti rodomi dinami\u0161kai ir pagal kontekst\u0105.";
    },
    get$demoChoiceChipTitle() {
      return "Pasirinkimo fragmentas";
    },
    get$demoChoiceChipDescription() {
      return "Pasirinkimo fragmentai nurodo vien\u0105 pasirinkim\u0105 i\u0161 rinkinio. Pasirinkimo fragmentuose \u012ftraukiamas susij\u0119s apra\u0161omasis tekstas ar kategorijos.";
    },
    get$demoFilterChipTitle() {
      return "Filtro fragmentas";
    },
    get$demoFilterChipDescription() {
      return "Turiniui filtruoti filtro fragmentai naudoja \u017eymas ar apra\u0161omuosius \u017eod\u017eius.";
    },
    get$demoInputChipTitle() {
      return "\u012evesties fragmentas";
    },
    get$demoInputChipDescription() {
      return "\u012evesties fragmentai glaustai pateikia sud\u0117tin\u0119 informacij\u0105, pvz., subjekto (asmens, vietos ar daikto) informacij\u0105 ar pokalbi\u0173 tekst\u0105.";
    },
    get$demoDataTableTitle() {
      return "Duomen\u0173 lentel\u0117s";
    },
    get$demoDataTableSubtitle() {
      return "Informacijos eilut\u0117s ir stulpeliai";
    },
    get$demoDataTableDescription() {
      return "Duomen\u0173 lentel\u0117se informacija pateikiama \u012f tinklel\u012f pana\u0161iu eilu\u010di\u0173 ir stulpeli\u0173 formatu. Jose informacija sisteminama, kad b\u016bt\u0173 paprasta nuskaityti ir naudotojai gal\u0117t\u0173 ie\u0161koti \u0161ablon\u0173 bei \u012f\u017evalg\u0173.";
    },
    get$dataTableHeader() {
      return "Mityba";
    },
    get$dataTableColumnDessert() {
      return "Desertas (1 porcija)";
    },
    get$dataTableColumnCalories() {
      return "Kalorijos";
    },
    get$dataTableColumnFat() {
      return "Riebalai (g)";
    },
    get$dataTableColumnCarbs() {
      return "Angliavandeniai (g)";
    },
    get$dataTableColumnProtein() {
      return "Baltymai (g)";
    },
    get$dataTableColumnSodium() {
      return "Natris (mg)";
    },
    get$dataTableColumnCalcium() {
      return "Kalcis (%)";
    },
    get$dataTableColumnIron() {
      return "Gele\u017eis (%)";
    },
    get$dataTableRowFrozenYogurt() {
      return "Frozen Yogurt";
    },
    get$dataTableRowIceCreamSandwich() {
      return "Ice Cream Sandwich";
    },
    get$dataTableRowEclair() {
      return "Eclair";
    },
    get$dataTableRowCupcake() {
      return "Cupcake";
    },
    get$dataTableRowGingerbread() {
      return "Gingerbread";
    },
    get$dataTableRowJellyBean() {
      return "Jelly Bean";
    },
    get$dataTableRowLollipop() {
      return "Lollipop";
    },
    get$dataTableRowHoneycomb() {
      return "Honeycomb";
    },
    get$dataTableRowDonut() {
      return "Donut";
    },
    get$dataTableRowApplePie() {
      return "Apple Pie";
    },
    dataTableRowWithSugar$1(value) {
      return value + " su cukrumi";
    },
    dataTableRowWithHoney$1(value) {
      return value + " su medumi";
    },
    get$demoDialogTitle() {
      return "Dialog\u0173 langai";
    },
    get$demoDialogSubtitle() {
      return "Paprasti, \u012fsp\u0117jimo ir viso ekrano";
    },
    get$demoAlertDialogTitle() {
      return "\u012esp\u0117jimas";
    },
    get$demoAlertDialogDescription() {
      return "\u012esp\u0117jimo dialogo lange naudotojas informuojamas apie situacijas, kurias reikia patvirtinti. Nurodomi \u012fsp\u0117jimo dialogo lango pasirenkamas pavadinimas ir pasirenkamas veiksm\u0173 s\u0105ra\u0161as.";
    },
    get$demoAlertTitleDialogTitle() {
      return "\u012esp\u0117jimas su pavadinimu";
    },
    get$demoSimpleDialogTitle() {
      return "Paprastas";
    },
    get$demoSimpleDialogDescription() {
      return "Rodant paprast\u0105 dialogo lang\u0105 naudotojui galima rinktis i\u0161 keli\u0173 parink\u010di\u0173. Nurodomas pasirenkamas paprasto dialogo lango pavadinimas, kuris pateikiamas vir\u0161 pasirinkimo variant\u0173.";
    },
    get$demoDividerTitle() {
      return "Daliklis";
    },
    get$demoDividerSubtitle() {
      return "Daliklis \u2013 tai plona linija, atskirianti turinio grupes s\u0105ra\u0161uose ir i\u0161d\u0117stymuose.";
    },
    get$demoDividerDescription() {
      return "Dalikliai gali b\u016bti naudojami s\u0105ra\u0161uose, skydeliuose ir kitur, siekiant atskirti turin\u012f.";
    },
    get$demoVerticalDividerTitle() {
      return "Vertikalusis daliklis";
    },
    get$demoGridListsTitle() {
      return "Tinklelio s\u0105ra\u0161ai";
    },
    get$demoGridListsSubtitle() {
      return "Eilu\u010di\u0173 ir stulpeli\u0173 i\u0161d\u0117stymas";
    },
    get$demoGridListsDescription() {
      return "Tinklelio s\u0105ra\u0161ai tinkamiausi norint rodyti vienos r\u016b\u0161ies duomenis, \u012fprastai vaizdus. Kiekvienas tinklelio s\u0105ra\u0161o elementas vadinamas i\u0161klotin\u0117s elementu.";
    },
    get$demoGridListsImageOnlyTitle() {
      return "Tik vaizdas";
    },
    get$demoGridListsHeaderTitle() {
      return "Su antra\u0161te";
    },
    get$demoGridListsFooterTitle() {
      return "Su pora\u0161te";
    },
    get$demoSlidersTitle() {
      return "\u0160liau\u017eikliai";
    },
    get$demoSlidersSubtitle() {
      return "Vert\u0117s pasirinkimo perbraukiant valdikliai";
    },
    get$demoSlidersDescription() {
      return "\u0160liau\u017eikliai atspindi juostos ver\u010di\u0173 diapazon\u0105, i\u0161 kurio naudotojai gali pasirinkti vien\u0105 vert\u0119. Jais galima lengvai koreguoti nustatymus, pvz., garsum\u0105, \u0161viesum\u0105, arba taikyti vaizd\u0173 filtrus.";
    },
    get$demoRangeSlidersTitle() {
      return "Diapazono \u0161liau\u017eikliai";
    },
    get$demoRangeSlidersDescription() {
      return "\u0160liau\u017eikliai atspindi juostos ver\u010di\u0173 diapazon\u0105. Jie gali b\u016bti su piktogramomis abiejose ver\u010di\u0173 diapazon\u0105 atspindin\u010dios juostos pus\u0117se. Jais galima lengvai koreguoti nustatymus, pvz., garsum\u0105, \u0161viesum\u0105, arba taikyti vaizd\u0173 filtrus.";
    },
    get$demoCustomSlidersTitle() {
      return "Tinkinti \u0161liau\u017eikliai";
    },
    get$demoCustomSlidersDescription() {
      return "\u0160liau\u017eikliai atspindi juostos ver\u010di\u0173 diapazon\u0105, i\u0161 kurio naudotojai gali pasirinkti vien\u0105 vert\u0119 arba ver\u010di\u0173 diapazon\u0105. Galima nustatyti \u0161liau\u017eikli\u0173 temas arba juos tinkinti.";
    },
    get$demoSlidersContinuousWithEditableNumericalValue() {
      return "Tolydusis su redaguojama skaitine verte";
    },
    get$demoSlidersDiscrete() {
      return "Diskretusis";
    },
    get$demoSlidersDiscreteSliderWithCustomTheme() {
      return "Tinkintos temos diskretusis \u0161liau\u017eiklis";
    },
    get$demoSlidersContinuousRangeSliderWithCustomTheme() {
      return "Tinkintos temos tolydusis diapazono \u0161liau\u017eiklis";
    },
    get$demoSlidersContinuous() {
      return "Tolydusis";
    },
    get$demoSlidersEditableNumericalValue() {
      return "Redaguojama skaitin\u0117 vert\u0117";
    },
    get$demoMenuTitle() {
      return "Meniu";
    },
    get$demoContextMenuTitle() {
      return "Kontekstinis meniu";
    },
    get$demoSectionedMenuTitle() {
      return "\u012e skiltis suskirstytas meniu";
    },
    get$demoSimpleMenuTitle() {
      return "Paprastas meniu";
    },
    get$demoChecklistMenuTitle() {
      return "Kontrolinio s\u0105ra\u0161o meniu";
    },
    get$demoMenuSubtitle() {
      return "Meniu mygtukai ir paprasti meniu";
    },
    get$demoMenuDescription() {
      return "Meniu pateikiamas laikinai rodom\u0173 pasirinkim\u0173 s\u0105ra\u0161as. Jie rodomi naudotojams naudojant mygtuk\u0105, atliekant veiksm\u0105 ar naudojant kit\u0105 valdikl\u012f.";
    },
    get$demoMenuItemValueOne() {
      return "Pirmas meniu elementas";
    },
    get$demoMenuItemValueTwo() {
      return "Antras meniu elementas";
    },
    get$demoMenuItemValueThree() {
      return "Tre\u010dias meniu elementas";
    },
    get$demoMenuOne() {
      return "Vienas";
    },
    get$demoMenuTwo() {
      return "Du";
    },
    get$demoMenuThree() {
      return "Trys";
    },
    get$demoMenuFour() {
      return "Keturi";
    },
    get$demoMenuAnItemWithAContextMenuButton() {
      return "Kontekstinio meniu elementas";
    },
    get$demoMenuContextMenuItemOne() {
      return "Pirmas kontekstinio meniu elementas";
    },
    get$demoMenuADisabledMenuItem() {
      return "I\u0161jungtas meniu elementas";
    },
    get$demoMenuContextMenuItemThree() {
      return "Tre\u010dias kontekstinio meniu elementas";
    },
    get$demoMenuAnItemWithASectionedMenu() {
      return "\u012e skiltis suskirstyto meniu elementas";
    },
    get$demoMenuPreview() {
      return "Per\u017ei\u016br\u0117ti";
    },
    get$demoMenuShare() {
      return "Bendrinti";
    },
    get$demoMenuGetLink() {
      return "Gauti nuorod\u0105";
    },
    get$demoMenuRemove() {
      return "Pa\u0161alinti";
    },
    demoMenuSelected$1(value) {
      return "Pasirinkta: " + value;
    },
    demoMenuChecked$1(value) {
      return "Pa\u017eym\u0117ta: " + value.toString$0(0);
    },
    get$demoNavigationDrawerTitle() {
      return "Nar\u0161ymo skydelis";
    },
    get$demoNavigationDrawerSubtitle() {
      return "Rodomas skydelis program\u0173 juostoje";
    },
    get$demoNavigationDrawerDescription() {
      return "Trima\u010di\u0173 objekt\u0173 dizaino skydelis, pateikiamas horizontaliai nuo ekrano kra\u0161to. Jame rodomos nar\u0161ymo nuorodos programoje.";
    },
    get$demoNavigationDrawerUserName() {
      return "Naudotojo vardas";
    },
    get$demoNavigationDrawerUserEmail() {
      return "user.name@example.com";
    },
    get$demoNavigationDrawerToPageOne() {
      return "Pirmas elementas";
    },
    get$demoNavigationDrawerToPageTwo() {
      return "Antras elementas";
    },
    get$demoNavigationDrawerText() {
      return "Perbraukite nuo kra\u0161to arba palieskite vir\u0161uje kair\u0117je esan\u010di\u0105 piktogram\u0105, kad b\u016bt\u0173 parodytas skydelis";
    },
    get$demoNavigationRailTitle() {
      return "Nar\u0161ymo juosta";
    },
    get$demoNavigationRailSubtitle() {
      return "Programoje rodoma nar\u0161ymo juosta";
    },
    get$demoNavigationRailDescription() {
      return "Trima\u010di\u0173 objekt\u0173 dizaino valdiklis, rodomas programos kair\u0117je ar de\u0161in\u0117je, skirtas nar\u0161yti tarp keli\u0173 rodini\u0173, paprastai nuo trij\u0173 iki penki\u0173.";
    },
    get$demoNavigationRailFirst() {
      return "Pirma";
    },
    get$demoNavigationRailSecond() {
      return "Antra";
    },
    get$demoNavigationRailThird() {
      return "Tre\u010dia";
    },
    get$demoMenuAnItemWithASimpleMenu() {
      return "Paprasto meniu elementas";
    },
    get$demoMenuAnItemWithAChecklistMenu() {
      return "Kontrolinio s\u0105ra\u0161o meniu elementas";
    },
    get$demoFullscreenDialogTitle() {
      return "Visas ekranas";
    },
    get$demoFullscreenDialogDescription() {
      return "Viso ekrano dialogo lango nuosavyb\u0117 nurodo, ar gaunamas puslapis yra viso ekrano modalinis dialogo langas";
    },
    get$demoCupertinoActivityIndicatorTitle() {
      return "Veiklos indikatorius";
    },
    get$demoCupertinoActivityIndicatorSubtitle() {
      return "\u201eiOS\u201c stiliaus veiklos indikatoriai";
    },
    get$demoCupertinoActivityIndicatorDescription() {
      return "Pagal laikrod\u017eio rodykl\u0119 besisukantis \u201eiOS\u201c stiliaus veiklos indikatorius.";
    },
    get$demoCupertinoButtonsTitle() {
      return "Mygtukai";
    },
    get$demoCupertinoButtonsSubtitle() {
      return "\u201eiOS\u201c stiliaus mygtukai";
    },
    get$demoCupertinoButtonsDescription() {
      return "\u201eiOS\u201c stiliaus mygtukas. Jis rodomas tekste ir (arba) kaip piktograma, kuri i\u0161nyksta ir atsiranda palietus. Galima pasirinkti fon\u0105.";
    },
    get$demoCupertinoContextMenuTitle() {
      return "Kontekstinis meniu";
    },
    get$demoCupertinoContextMenuSubtitle() {
      return "\u201eiOS\u201c stiliaus kontekstinis meniu";
    },
    get$demoCupertinoContextMenuDescription() {
      return "\u201eiOS\u201c stiliaus kontekstinis meniu per vis\u0105 ekran\u0105 rodomas ilgai paspaudus element\u0105.";
    },
    get$demoCupertinoContextMenuActionOne() {
      return "Pirmas veiksmas";
    },
    get$demoCupertinoContextMenuActionTwo() {
      return "Antras veiksmas";
    },
    get$demoCupertinoContextMenuActionText() {
      return "Palieskite ir palaikykite \u201eFlutter\u201c logotip\u0105, kad pamatytum\u0117te kontekstin\u012f meniu.";
    },
    get$demoCupertinoAlertsTitle() {
      return "\u012esp\u0117jimai";
    },
    get$demoCupertinoAlertsSubtitle() {
      return "\u201eiOS\u201c stiliaus \u012fsp\u0117jimo dialog\u0173 langai";
    },
    get$demoCupertinoAlertTitle() {
      return "\u012esp\u0117jimas";
    },
    get$demoCupertinoAlertDescription() {
      return "\u012esp\u0117jimo dialogo lange naudotojas informuojamas apie situacijas, kurias reikia patvirtinti. Nurodomi \u012fsp\u0117jimo dialogo lango pasirenkamas pavadinimas, pasirenkamas turinys ir pasirenkamas veiksm\u0173 s\u0105ra\u0161as. Pavadinimas pateikiamas vir\u0161 turinio, o veiksmai \u2013 po juo.";
    },
    get$demoCupertinoAlertWithTitleTitle() {
      return "\u012esp\u0117jimas su pavadinimu";
    },
    get$demoCupertinoAlertButtonsTitle() {
      return "\u012esp\u0117jimas su mygtukais";
    },
    get$demoCupertinoAlertButtonsOnlyTitle() {
      return "Tik \u012fsp\u0117jimo mygtukai";
    },
    get$demoCupertinoActionSheetTitle() {
      return "Veiksm\u0173 lapas";
    },
    get$demoCupertinoActionSheetDescription() {
      return "Veiksm\u0173 lapas \u2013 tai konkretaus stiliaus \u012fsp\u0117jimas, kai naudotojui rodomas dviej\u0173 ar daugiau pasirinkimo variant\u0173, susijusi\u0173 su dabartiniu kontekstu, rinkinys. Galima nurodyti veiksm\u0173 lapo pavadinim\u0105, papildom\u0105 prane\u0161im\u0105 ir veiksm\u0173 s\u0105ra\u0161\u0105.";
    },
    get$demoCupertinoNavigationBarTitle() {
      return "Nar\u0161ymo juosta";
    },
    get$demoCupertinoNavigationBarSubtitle() {
      return "\u201eiOS\u201c stiliaus nar\u0161ymo juosta";
    },
    get$demoCupertinoNavigationBarDescription() {
      return "\u201eiOS\u201c stiliaus nar\u0161ymo juosta. Nar\u0161ymo juosta \u2013 tai \u012franki\u0173 juosta, kuri\u0105 sudaro bent puslapio pavadinimas, pateiktas \u012franki\u0173 juostos centre.";
    },
    get$demoCupertinoPickerTitle() {
      return "Rinkikliai";
    },
    get$demoCupertinoPickerSubtitle() {
      return "\u201eiOS\u201c stiliaus rinkikliai";
    },
    get$demoCupertinoPickerDescription() {
      return "\u201eiOS\u201c stiliaus rinkiklio valdiklis, kur\u012f galima naudoti norint pasirinkti eilutes, datas, laik\u0105 arba ir dat\u0105, ir laik\u0105.";
    },
    get$demoCupertinoPickerTimer() {
      return "Laikmatis";
    },
    get$demoCupertinoPicker() {
      return "Rinkiklis";
    },
    get$demoCupertinoPickerDate() {
      return "Data";
    },
    get$demoCupertinoPickerTime() {
      return "Laikas";
    },
    get$demoCupertinoPickerDateTime() {
      return "Data ir laikas";
    },
    get$demoCupertinoSegmentedControlTitle() {
      return "Segmentuotas valdiklis";
    },
    get$demoCupertinoSegmentedControlSubtitle() {
      return "\u201eiOS\u201c stiliaus segmentuotas valdiklis";
    },
    get$demoCupertinoSegmentedControlDescription() {
      return "Naudojama renkantis i\u0161 \u012fvairi\u0173 bendrai i\u0161skiriam\u0173 parink\u010di\u0173. Pasirinkus vien\u0105 segmentuoto valdiklio parinkt\u012f, kitos jo parinktys nebepasirenkamos.";
    },
    get$demoCupertinoSliderTitle() {
      return "\u0160liau\u017eiklis";
    },
    get$demoCupertinoSliderSubtitle() {
      return "\u201eiOS\u201c stiliaus \u0161liau\u017eiklis";
    },
    get$demoCupertinoSliderDescription() {
      return "\u0160liau\u017eikliu galima pasirinkti t\u0119stini\u0173 arba konkre\u010di\u0173 ver\u010di\u0173 rinkinius.";
    },
    demoCupertinoSliderContinuous$1(value) {
      return "T\u0119stin\u0117s: " + value;
    },
    demoCupertinoSliderDiscrete$1(value) {
      return "Konkre\u010dios: " + value;
    },
    get$demoCupertinoSwitchSubtitle() {
      return "\u201eiOS\u201c stiliaus jungiklis";
    },
    get$demoCupertinoSwitchDescription() {
      return "Jungikliu galima \u012fjungti ir i\u0161jungti konkretaus nustatymo b\u016bsen\u0105.";
    },
    get$demoCupertinoTabBarTitle() {
      return "Skirtuk\u0173 juosta";
    },
    get$demoCupertinoTabBarSubtitle() {
      return "\u201eiOS\u201c stiliaus apatin\u0117 skirtuk\u0173 juosta";
    },
    get$demoCupertinoTabBarDescription() {
      return "\u201eiOS\u201c stiliaus apatin\u0117 nar\u0161ymo skirtuk\u0173 juosta. Teikiami keli skirtukai, i\u0161 kuri\u0173 vienas (pagal numatytuosius nustatymus \u2013 pirmas) aktyvus.";
    },
    get$cupertinoTabBarHomeTab() {
      return "Pagrindinis";
    },
    get$cupertinoTabBarChatTab() {
      return "Pokalbis";
    },
    get$cupertinoTabBarProfileTab() {
      return "Profilis";
    },
    get$demoCupertinoTextFieldTitle() {
      return "Teksto laukai";
    },
    get$demoCupertinoTextFieldSubtitle() {
      return "\u201eiOS\u201c stiliaus teksto laukai";
    },
    get$demoCupertinoTextFieldDescription() {
      return "Teksto lauke naudotojas gali \u012fvesti tekst\u0105 aparatin\u0117s \u012frangos arba ekrano klaviat\u016bra.";
    },
    get$demoCupertinoTextFieldPIN() {
      return "PIN kodas";
    },
    get$demoCupertinoSearchTextFieldTitle() {
      return "Paie\u0161kos teksto laukas";
    },
    get$demoCupertinoSearchTextFieldSubtitle() {
      return "\u201eiOS\u201c stiliaus paie\u0161kos teksto laukas";
    },
    get$demoCupertinoSearchTextFieldDescription() {
      return "Paie\u0161kos teksto laukas, kuriame naudotojas gali ie\u0161koti vesdamas tekst\u0105 ir gali b\u016bti teikiami bei filtruojami pasi\u016blymai.";
    },
    get$demoCupertinoSearchTextFieldPlaceholder() {
      return "Veskite tekst\u0105";
    },
    get$demoCupertinoScrollbarTitle() {
      return "Slinkties juosta";
    },
    get$demoCupertinoScrollbarSubtitle() {
      return "\u201eiOS\u201c stiliaus slinkties juosta";
    },
    get$demoCupertinoScrollbarDescription() {
      return "Slinkties juosta, apgaubianti nurodyt\u0105 antrin\u012f element\u0105";
    },
    get$demoMotionTitle() {
      return "Jud\u0117jimas";
    },
    get$demoMotionSubtitle() {
      return "Visi i\u0161 anksto nustatyti perk\u0117limo \u0161ablonai";
    },
    get$demoContainerTransformDemoInstructions() {
      return "Kortel\u0117s, s\u0105ra\u0161ai ir SVM";
    },
    get$demoSharedXAxisDemoInstructions() {
      return "Mygtukai \u201eKitas\u201c ir \u201eAtgal\u201c";
    },
    get$demoSharedYAxisDemoInstructions() {
      return "R\u016b\u0161iuoti pagal \u201eNeseniai leista\u201c";
    },
    get$demoSharedZAxisDemoInstructions() {
      return "Nustatym\u0173 piktogramos mygtukas";
    },
    get$demoFadeThroughDemoInstructions() {
      return "Apatin\u0117 nar\u0161ymo juosta";
    },
    get$demoFadeScaleDemoInstructions() {
      return "Modulis ir SVM";
    },
    get$demoContainerTransformTitle() {
      return "Sud\u0117tinio rodinio transformavimas";
    },
    get$demoContainerTransformDescription() {
      return "Sud\u0117tinio rodinio transformavimo \u0161ablonas skirtas NS elementams, apimantiems sud\u0117tin\u012f rodin\u012f, perkelti. Naudojant \u0161\u012f \u0161ablon\u0105 sukuriamas matomas dviej\u0173 NS element\u0173 ry\u0161ys";
    },
    get$demoContainerTransformModalBottomSheetTitle() {
      return "I\u0161blukimo re\u017eimas";
    },
    get$demoContainerTransformTypeFade() {
      return "I\u0160BLUKIMAS";
    },
    get$demoContainerTransformTypeFadeThrough() {
      return "I\u0160BLUKIMAS";
    },
    get$demoMotionPlaceholderTitle() {
      return "Pavadinimas";
    },
    get$demoMotionPlaceholderSubtitle() {
      return "Antrinis tekstas";
    },
    get$demoMotionSmallPlaceholderSubtitle() {
      return "Antrinis";
    },
    get$demoMotionDetailsPageTitle() {
      return "Puslapis \u201eI\u0161sami informacija\u201c";
    },
    get$demoMotionListTileTitle() {
      return "S\u0105ra\u0161o elementas";
    },
    get$demoSharedAxisDescription() {
      return "Bendrinamos a\u0161ies \u0161ablonas naudojamas NS elementams, susietiems erdviniais ar nar\u0161ymo ry\u0161iais, perkelti. \u0160is \u0161ablonas naudoja bendrinam\u0105 transformavim\u0105 x, y arba z a\u0161yje element\u0173 ry\u0161iui sustiprinti.";
    },
    get$demoSharedXAxisTitle() {
      return "Bendrinama x a\u0161is";
    },
    get$demoSharedXAxisBackButtonText() {
      return "ATGAL";
    },
    get$demoSharedXAxisNextButtonText() {
      return "KITAS";
    },
    get$demoSharedXAxisCoursePageTitle() {
      return "Supaprastinti kursai";
    },
    get$demoSharedXAxisCoursePageSubtitle() {
      return "Kategorij\u0173 rinkiniai rodomi kaip grup\u0117s j\u016bs\u0173 sklaidos kanale. V\u0117liau bet kada gal\u0117site tai pakeisti.";
    },
    get$demoSharedXAxisArtsAndCraftsCourseTitle() {
      return "Menai ir amatai";
    },
    get$demoSharedXAxisBusinessCourseTitle() {
      return "Verslas";
    },
    get$demoSharedXAxisIllustrationCourseTitle() {
      return "Iliustracija";
    },
    get$demoSharedXAxisDesignCourseTitle() {
      return "Dizainas";
    },
    get$demoSharedXAxisCulinaryCourseTitle() {
      return "Kulinarija";
    },
    get$demoSharedXAxisBundledCourseSubtitle() {
      return "Sugrupuota";
    },
    get$demoSharedXAxisIndividualCourseSubtitle() {
      return "Rodoma atskirai";
    },
    get$demoSharedXAxisSignInWelcomeText() {
      return "Sveiki, David Park";
    },
    get$demoSharedXAxisSignInSubtitleText() {
      return "Prisijunkite prie paskyros";
    },
    get$demoSharedXAxisSignInTextFieldLabel() {
      return "El. pa\u0161to adresas arba telefono numeris";
    },
    get$demoSharedXAxisForgotEmailButtonText() {
      return "PAMIR\u0160OTE EL. PA\u0160TO ADRES\u0104?";
    },
    get$demoSharedXAxisCreateAccountButtonText() {
      return "SUKURTI PASKYR\u0104";
    },
    get$demoSharedYAxisTitle() {
      return "Bendrinama y a\u0161is";
    },
    get$demoSharedYAxisAlbumCount() {
      return "268 albumai";
    },
    get$demoSharedYAxisAlphabeticalSortTitle() {
      return "A\u2013\u017d";
    },
    get$demoSharedYAxisRecentSortTitle() {
      return "Neseniai leista";
    },
    get$demoSharedYAxisAlbumTileTitle() {
      return "Albumas";
    },
    get$demoSharedYAxisAlbumTileSubtitle() {
      return "Atlik\u0117jas";
    },
    get$demoSharedYAxisAlbumTileDurationUnit() {
      return "min.";
    },
    get$demoSharedZAxisTitle() {
      return "Bendrinama z a\u0161is";
    },
    get$demoSharedZAxisSettingsPageTitle() {
      return "Nustatymai";
    },
    get$demoSharedZAxisBurgerRecipeTitle() {
      return "M\u0117sainis";
    },
    get$demoSharedZAxisBurgerRecipeDescription() {
      return "M\u0117sainio receptas";
    },
    get$demoSharedZAxisSandwichRecipeTitle() {
      return "Sumu\u0161tinis";
    },
    get$demoSharedZAxisSandwichRecipeDescription() {
      return "Sumu\u0161tinio receptas";
    },
    get$demoSharedZAxisDessertRecipeTitle() {
      return "Desertas";
    },
    get$demoSharedZAxisDessertRecipeDescription() {
      return "Deserto receptas";
    },
    get$demoSharedZAxisShrimpPlateRecipeTitle() {
      return "Krevet\u0117";
    },
    get$demoSharedZAxisShrimpPlateRecipeDescription() {
      return "Kreve\u010di\u0173 patiekalo receptas";
    },
    get$demoSharedZAxisCrabPlateRecipeTitle() {
      return "Krabas";
    },
    get$demoSharedZAxisCrabPlateRecipeDescription() {
      return "Krab\u0173 patiekalo receptas";
    },
    get$demoSharedZAxisBeefSandwichRecipeTitle() {
      return "Sumu\u0161tinis su jautiena";
    },
    get$demoSharedZAxisBeefSandwichRecipeDescription() {
      return "Sumu\u0161tinio su jautiena receptas";
    },
    get$demoSharedZAxisSavedRecipesListTitle() {
      return "I\u0161saugoti receptai";
    },
    get$demoSharedZAxisProfileSettingLabel() {
      return "Profilis";
    },
    get$demoSharedZAxisNotificationSettingLabel() {
      return "Prane\u0161imai";
    },
    get$demoSharedZAxisPrivacySettingLabel() {
      return "Privatumas";
    },
    get$demoSharedZAxisHelpSettingLabel() {
      return "Pagalba";
    },
    get$demoFadeThroughTitle() {
      return "I\u0161blukimas";
    },
    get$demoFadeThroughDescription() {
      return "I\u0161blukimo \u0161ablonas naudojamas NS elementams, kurie n\u0117ra susieti tvirtais ry\u0161iais, perkelti.";
    },
    get$demoFadeThroughAlbumsDestination() {
      return "Albumai";
    },
    get$demoFadeThroughPhotosDestination() {
      return "Nuotraukos";
    },
    get$demoFadeThroughSearchDestination() {
      return "Ie\u0161koti";
    },
    get$demoFadeThroughTextPlaceholder() {
      return "123 nuotraukos";
    },
    get$demoFadeScaleTitle() {
      return "I\u0161blukimas";
    },
    get$demoFadeScaleDescription() {
      return "I\u0161blukimo \u0161ablonas naudojamas NS elementams, kurie patenka \u012f ekrano ribas ar u\u017e j\u0173, pvz., dialogo langui, kuris i\u0161blunka ekrano centre.";
    },
    get$demoFadeScaleShowAlertDialogButton() {
      return "RODYTI MODALIN\u012e";
    },
    get$demoFadeScaleShowFabButton() {
      return "RODYTI \u201eFAB\u201c";
    },
    get$demoFadeScaleHideFabButton() {
      return "SL\u0116PTI \u201eFAB\u201c";
    },
    get$demoFadeScaleAlertDialogHeader() {
      return "\u012esp\u0117jimo dialogo langas";
    },
    get$demoFadeScaleAlertDialogCancelButton() {
      return "AT\u0160AUKTI";
    },
    get$demoFadeScaleAlertDialogDiscardButton() {
      return "ATMESTI";
    },
    get$demoColorsTitle() {
      return "Spalvos";
    },
    get$demoColorsSubtitle() {
      return "Visos i\u0161 anksto nustatytos spalvos";
    },
    get$demoColorsDescription() {
      return "Spalv\u0173 ir spalv\u0173 pavyzd\u017eio konstantos, nurodan\u010dios trima\u010di\u0173 objekt\u0173 dizaino spalv\u0173 gam\u0105.";
    },
    get$demoTypographyTitle() {
      return "Spausdinimas";
    },
    get$demoTypographySubtitle() {
      return "Visi i\u0161 anksto nustatyti teksto stiliai";
    },
    get$demoTypographyDescription() {
      return "\u012evairi\u0173 tipografini\u0173 stili\u0173 apibr\u0117\u017etys prie trima\u010di\u0173 objekt\u0173 dizaino.";
    },
    get$demo2dTransformationsTitle() {
      return "2D transformacijos";
    },
    get$demo2dTransformationsSubtitle() {
      return "Stumdymas, mastelio keitimas, pasukimas";
    },
    get$demo2dTransformationsDescription() {
      return "Palieskite, kad redaguotum\u0117te i\u0161klotin\u0117s elementus, ir naudokite gestus, kad gal\u0117tum\u0117te jud\u0117ti. Vilkite, kad pastumtum\u0117te, suimkite, kad pakeistum\u0117te mastel\u012f, pasukite dviem pir\u0161tais. Paspauskite nustatymo i\u0161 naujo mygtuk\u0105, kad gr\u012f\u017etum\u0117te \u012f pradin\u0119 orientacij\u0105.";
    },
    get$buttonText() {
      return "MYGTUKAS";
    },
    get$demoBottomSheetTitle() {
      return "Apatinio lapo mygtukas";
    },
    get$demoBottomSheetSubtitle() {
      return "Nuolatinis ir modalinis apatinio lapo mygtukai";
    },
    get$demoBottomSheetPersistentTitle() {
      return "Nuolatinis apatinio lapo mygtukas";
    },
    get$demoBottomSheetPersistentDescription() {
      return "Nuolatiniu apatinio lapo mygtuku pateikiama informacija, papildanti pagrindin\u012f programos turin\u012f. Nuolatinis apatinio lapo mygtukas i\u0161lieka matomas net asmeniui naudojant kitas programos dalis.";
    },
    get$demoBottomSheetModalTitle() {
      return "Modalinis apatinio lapo mygtukas";
    },
    get$demoBottomSheetModalDescription() {
      return "Modalinis apatinio lapo mygtukas naudojamas vietoj meniu ar dialogo lango, kad naudotojui nereik\u0117t\u0173 naudoti kit\u0173 programos lang\u0173.";
    },
    get$demoBottomSheetAddLabel() {
      return "Prid\u0117ti";
    },
    get$demoBottomSheetButtonText() {
      return "RODYTI APATINIO LAPO MYGTUK\u0104";
    },
    get$demoBottomSheetHeader() {
      return "Antra\u0161t\u0117";
    },
    demoBottomSheetItem$1(value) {
      return "Prek\u0117 " + value;
    },
    get$demoListsTitle() {
      return "S\u0105ra\u0161ai";
    },
    get$demoListsSubtitle() {
      return "Slenkamojo s\u0105ra\u0161o i\u0161d\u0117stymai";
    },
    get$demoListsDescription() {
      return "Viena fiksuoto auk\u0161\u010dio eilut\u0117, kurioje paprastai yra teksto bei piktograma prad\u017eioje ar pabaigoje.";
    },
    get$demoOneLineListsTitle() {
      return "Viena eilut\u0117";
    },
    get$demoTwoLineListsTitle() {
      return "Dvi eilut\u0117s";
    },
    get$demoListsSecondary() {
      return "Antrinis tekstas";
    },
    get$demoProgressIndicatorTitle() {
      return "Eigos indikatoriai";
    },
    get$demoProgressIndicatorSubtitle() {
      return "Linijinis, apskritas, neapibr\u0117\u017etas";
    },
    get$demoCircularProgressIndicatorTitle() {
      return "Apskritas eigos indikatorius";
    },
    get$demoCircularProgressIndicatorDescription() {
      return "Trima\u010di\u0173 objekt\u0173 dizaino apskritas eigos indikatorius, kuris sukasi nurodydamas, kad programa u\u017eimta.";
    },
    get$demoLinearProgressIndicatorTitle() {
      return "Linijinis eigos indikatorius";
    },
    get$demoLinearProgressIndicatorDescription() {
      return "Trima\u010di\u0173 objekt\u0173 dizaino linijinis eigos indikatorius, taip pat vadinamas eigos juosta.";
    },
    get$demoPickersTitle() {
      return "Rinkikliai";
    },
    get$demoPickersSubtitle() {
      return "Datos ir laiko pasirinkimas";
    },
    get$demoDatePickerTitle() {
      return "Datos rinkiklis";
    },
    get$demoDatePickerDescription() {
      return string$.Rodoma;
    },
    get$demoTimePickerTitle() {
      return "Laiko rinkiklis";
    },
    get$demoTimePickerDescription() {
      return "Rodomas dialogo langas, kuriame pateikiamas trima\u010di\u0173 objekt\u0173 dizaino laiko rinkiklis.";
    },
    get$demoDateRangePickerTitle() {
      return "Dien\u0173 sekos rinkiklis";
    },
    get$demoDateRangePickerDescription() {
      return string$.Rodoma;
    },
    get$demoPickersShowPicker() {
      return "RODYTI RINKIKL\u012e";
    },
    get$demoTabsTitle() {
      return "Skirtukai";
    },
    get$demoTabsScrollingTitle() {
      return "Slenkama";
    },
    get$demoTabsNonScrollingTitle() {
      return "Neslenkama";
    },
    get$demoTabsSubtitle() {
      return "Skirtukai su atskirai slenkamais rodiniais";
    },
    get$demoTabsDescription() {
      return "Naudojant skirtukus tvarkomas turinys skirtinguose ekranuose, duomen\u0173 rinkiniuose ir naudojant kitas s\u0105veikas.";
    },
    get$demoSnackbarsTitle() {
      return "Laikinos juostos";
    },
    get$demoSnackbarsSubtitle() {
      return "Laikinose juostose ekrano apa\u010dioje rodomi prane\u0161imai";
    },
    get$demoSnackbarsDescription() {
      return "Laikinos juostos informuoja naudotojus apie programos eig\u0105: kas jau yra ir dar bus atlikta. Jos rodomos laikinai ekrano apa\u010dioje. Juostos negali trukdyti naudotojo funkcijoms ir naudotojui nereikia atlikti joki\u0173 veiksm\u0173, kad jos dingt\u0173.";
    },
    get$demoSnackbarsButtonLabel() {
      return "RODYTI LAIKIN\u0104 JUOST\u0104";
    },
    get$demoSnackbarsText() {
      return "Tai yra laikina juosta.";
    },
    get$demoSnackbarsActionButtonLabel() {
      return "VEIKSMAS";
    },
    get$demoSnackbarsAction() {
      return "Paspaud\u0117te laikinos juostos veiksmo mygtuk\u0105.";
    },
    get$demoSelectionControlsTitle() {
      return "Pasirinkimo valdikliai";
    },
    get$demoSelectionControlsSubtitle() {
      return "\u017dymimieji laukeliai, akut\u0117s ir jungikliai";
    },
    get$demoSelectionControlsCheckboxTitle() {
      return "\u017dymimasis laukelis";
    },
    get$demoSelectionControlsCheckboxDescription() {
      return "Naudotojas \u017eymimaisiais laukeliais gali pasirinkti kelias parinktis i\u0161 rinkinio. \u012eprasto \u017eymimojo laukelio vert\u0117 yra \u201etrue\u201c (tiesa) arba \u201efalse\u201c (netiesa), o trij\u0173 parink\u010di\u0173 \u017eymimojo laukelio vert\u0117 b\u0117 min\u0117t\u0173j\u0173 gali b\u016bti ir nulis.";
    },
    get$demoSelectionControlsRadioTitle() {
      return "Akut\u0117";
    },
    get$demoSelectionControlsRadioDescription() {
      return "Naudotojas akut\u0117mis gali pasirinkti vien\u0105 parinkt\u012f i\u0161 rinkinio. Naudokite akutes i\u0161skirtiniams pasirinkimams, jei manote, kad naudotojui reikia per\u017ei\u016br\u0117ti visas galimas parinktis kartu.";
    },
    get$demoSelectionControlsSwitchTitle() {
      return "Perjungti";
    },
    get$demoSelectionControlsSwitchDescription() {
      return "\u012ejungimo ir i\u0161jungimo jungikliais galima keisti kiekvienos nustatym\u0173 parinkties b\u016bsen\u0105. Jungiklio valdoma parinktis ir nustatyta b\u016bsena turi b\u016bti ai\u0161kios be \u012fterptos etiket\u0117s.";
    },
    get$demoTextFieldTitle() {
      return "Teksto laukai";
    },
    get$demoTextFieldSubtitle() {
      return "Viena redaguojamo teksto ar skai\u010di\u0173 eilut\u0117";
    },
    get$demoTextFieldDescription() {
      return "Naudotojas gali \u012fvesti tekst\u0105 \u012f NS per teksto laukus. Jie paprastai naudojami formose ir dialogo languose.";
    },
    get$demoTextFieldShowPasswordLabel() {
      return "Rodyti slapta\u017eod\u012f";
    },
    get$demoTextFieldHidePasswordLabel() {
      return "Sl\u0117pti slapta\u017eod\u012f";
    },
    get$demoTextFieldFormErrors() {
      return "Prie\u0161 pateikdami i\u0161taisykite raudonai pa\u017eym\u0117tas klaidas.";
    },
    get$demoTextFieldNameRequired() {
      return "B\u016btina nurodyti vard\u0105 ir pavard\u0119.";
    },
    get$demoTextFieldOnlyAlphabeticalChars() {
      return "\u012eveskite tik raides.";
    },
    get$demoTextFieldEnterUSPhoneNumber() {
      return "(###) ###-#### \u2013 \u012fveskite JAV telefono numer\u012f.";
    },
    get$demoTextFieldEnterPassword() {
      return "\u012eveskite slapta\u017eod\u012f.";
    },
    get$demoTextFieldPasswordsDoNotMatch() {
      return "Slapta\u017eod\u017eiai nesutampa";
    },
    get$demoTextFieldWhatDoPeopleCallYou() {
      return "Kaip \u017emon\u0117s kreipiasi \u012f jus?";
    },
    get$demoTextFieldNameField() {
      return "Vardas*";
    },
    get$demoTextFieldWhereCanWeReachYou() {
      return "Kaip galime su jumis susisiekti?";
    },
    get$demoTextFieldPhoneNumber() {
      return "Telefono numeris*";
    },
    get$demoTextFieldYourEmailAddress() {
      return "J\u016bs\u0173 el. pa\u0161to adresas";
    },
    get$demoTextFieldEmail() {
      return "El. pa\u0161tas";
    },
    get$demoTextFieldTellUsAboutYourself() {
      return "Papasakokite apie save (pvz., para\u0161ykite, k\u0105 veikiate ar kokie j\u016bs\u0173 pom\u0117giai)";
    },
    get$demoTextFieldKeepItShort() {
      return "Ra\u0161ykite trumpai, tai tik demonstracin\u0117 versija.";
    },
    get$demoTextFieldLifeStory() {
      return "Gyvenimo istorija";
    },
    get$demoTextFieldSalary() {
      return "Atlyginimas";
    },
    get$demoTextFieldUSD() {
      return "USD";
    },
    get$demoTextFieldNoMoreThan() {
      return "Ne daugiau nei 8 simboliai.";
    },
    get$demoTextFieldPassword() {
      return "Slapta\u017eodis*";
    },
    get$demoTextFieldRetypePassword() {
      return "I\u0161 naujo \u012fveskite slapta\u017eod\u012f*";
    },
    get$demoTextFieldSubmit() {
      return "PATEIKTI";
    },
    demoTextFieldNameHasPhoneNumber$2($name, phoneNumber) {
      return $name + " telefono numeris: " + phoneNumber;
    },
    get$demoTextFieldRequiredField() {
      return "* nurodo b\u016btin\u0105 lauk\u0105";
    },
    get$demoTooltipTitle() {
      return "Patarimai";
    },
    get$demoTooltipSubtitle() {
      return "Trumpas prane\u0161imas, pateikiamas ilgai paspaudus arba u\u017evedus pel\u0117s \u017eymekl\u012f";
    },
    get$demoTooltipDescription() {
      return "Patarimuose teikiamos teksto etiket\u0117s, padedan\u010dios paai\u0161kinti mygtuko ar kito naudotojo s\u0105sajos veiksmo funkcij\u0105. Patarimuose pateikiama informatyvaus teksto, naudotojams u\u017evedus pel\u0117s \u017eymekl\u012f vir\u0161 elemento, pary\u0161kinus j\u012f ar ilgai paspaudus.";
    },
    get$demoTooltipInstructions() {
      return "Ilgai paspauskite arba u\u017eveskite pel\u0117s \u017eymekl\u012f, kad b\u016bt\u0173 pateiktas patarimas.";
    },
    get$bottomNavigationCommentsTab() {
      return "Komentarai";
    },
    get$bottomNavigationCalendarTab() {
      return "Kalendorius";
    },
    get$bottomNavigationAccountTab() {
      return "Paskyra";
    },
    get$bottomNavigationAlarmTab() {
      return "\u012esp\u0117jimas";
    },
    get$bottomNavigationCameraTab() {
      return "Fotoaparatas";
    },
    bottomNavigationContentPlaceholder$1(title) {
      return "Skirtuko " + title + " rezervuota vieta";
    },
    get$buttonTextCreate() {
      return "Kurti";
    },
    dialogSelectedOption$1(value) {
      return 'Pasirinkote: "' + value + '"';
    },
    get$chipTurnOnLights() {
      return "\u012ejungti \u0161vies\u0105";
    },
    get$chipSmall() {
      return "Ma\u017eas";
    },
    get$chipMedium() {
      return "Vidutinis";
    },
    get$chipLarge() {
      return "Didelis";
    },
    get$chipElevator() {
      return "Liftas";
    },
    get$chipWasher() {
      return "Skalbykl\u0117";
    },
    get$chipFireplace() {
      return "\u017didinys";
    },
    get$chipBiking() {
      return "Va\u017ein\u0117jimas dvira\u010diu";
    },
    get$demo() {
      return "Demonstracin\u0117 versija";
    },
    get$bottomAppBar() {
      return "Apatin\u0117 program\u0173 juosta";
    },
    get$loading() {
      return "\u012ekeliama";
    },
    get$dialogDiscardTitle() {
      return "Atmesti juodra\u0161t\u012f?";
    },
    get$dialogLocationTitle() {
      return "Naudoti \u201eGoogle\u201c vietov\u0117s paslaug\u0105?";
    },
    get$dialogLocationDescription() {
      return "Leisti \u201eGoogle\u201c pad\u0117ti programoms nustatyti vietov\u0119. Tai rei\u0161kia anonimini\u0173 vietov\u0117s duomen\u0173 siuntim\u0105 \u201eGoogle\u201c, net kai nevykdomos jokios programos.";
    },
    get$dialogCancel() {
      return "AT\u0160AUKTI";
    },
    get$dialogDiscard() {
      return "ATMESTI";
    },
    get$dialogDisagree() {
      return "NESUTINKU";
    },
    get$dialogAgree() {
      return "SUTINKU";
    },
    get$dialogSetBackup() {
      return "Atsargin\u0117s kopijos paskyros nustatymas";
    },
    get$dialogAddAccount() {
      return "Prid\u0117ti paskyr\u0105";
    },
    get$dialogShow() {
      return "RODYTI DIALOGO LANG\u0104";
    },
    get$dialogFullscreenTitle() {
      return "Viso ekrano dialogo langas";
    },
    get$dialogFullscreenSave() {
      return "I\u0160SAUGOTI";
    },
    get$dialogFullscreenDescription() {
      return "Viso ekrano dialogo lango demonstracin\u0117 versija";
    },
    get$cupertinoButton() {
      return "Mygtukas";
    },
    get$cupertinoButtonWithBackground() {
      return "Su fonu";
    },
    get$cupertinoAlertCancel() {
      return "At\u0161aukti";
    },
    get$cupertinoAlertDiscard() {
      return "Atmesti";
    },
    get$cupertinoAlertLocationTitle() {
      return "Leisti \u017dem\u0117lapiams pasiekti vietov\u0119 jums naudojant program\u0105?";
    },
    get$cupertinoAlertLocationDescription() {
      return "J\u016bs\u0173 dabartin\u0117 vietov\u0117 bus pateikta \u017eem\u0117lapyje ir naudojama nuorodoms, paie\u0161kos rezultatams netoliese ir apskai\u010diuotam kelion\u0117s laikui rodyti.";
    },
    get$cupertinoAlertAllow() {
      return "Leisti";
    },
    get$cupertinoAlertDontAllow() {
      return "Neleisti";
    },
    get$cupertinoAlertFavoriteDessert() {
      return "M\u0117gstamiausio deserto pasirinkimas";
    },
    get$cupertinoAlertDessertDescription() {
      return "Pasirinkite savo m\u0117gstamiausi\u0105 desert\u0105 i\u0161 toliau pateikto s\u0105ra\u0161o. Pagal pasirinkim\u0105 bus tinkinamas si\u016blomas valgykl\u0173 j\u016bs\u0173 regione s\u0105ra\u0161as.";
    },
    get$cupertinoAlertCheesecake() {
      return "S\u016brio pyragas";
    },
    get$cupertinoAlertTiramisu() {
      return "Tiramisu";
    },
    get$cupertinoAlertApplePie() {
      return "Obuoli\u0173 pyragas";
    },
    get$cupertinoAlertChocolateBrownie() {
      return "\u0160okoladinis pyragas";
    },
    get$cupertinoShowAlert() {
      return "Rodyti \u012fsp\u0117jim\u0105";
    },
    get$colorsRed() {
      return "RAUDONA";
    },
    get$colorsPink() {
      return "RO\u017dIN\u0116";
    },
    get$colorsPurple() {
      return "PURPURIN\u0116";
    },
    get$colorsDeepPurple() {
      return "SODRI PURPURIN\u0116";
    },
    get$colorsIndigo() {
      return "INDIGO";
    },
    get$colorsBlue() {
      return "M\u0116LYNA";
    },
    get$colorsLightBlue() {
      return "\u0160VIESIAI M\u0116LYNA";
    },
    get$colorsCyan() {
      return "\u017dYDRA";
    },
    get$colorsTeal() {
      return "TAMSIAI \u017dYDRA";
    },
    get$colorsGreen() {
      return "\u017dALIA";
    },
    get$colorsLightGreen() {
      return "\u0160VIESIAI \u017dALIA";
    },
    get$colorsLime() {
      return "\u017dALI\u0172J\u0172 CITRIN\u0172";
    },
    get$colorsYellow() {
      return "GELTONA";
    },
    get$colorsAmber() {
      return "GINTARO";
    },
    get$colorsOrange() {
      return "ORAN\u017dIN\u0116";
    },
    get$colorsDeepOrange() {
      return "SODRI ORAN\u017dIN\u0116";
    },
    get$colorsBrown() {
      return "RUDA";
    },
    get$colorsGrey() {
      return "PILKA";
    },
    get$colorsBlueGrey() {
      return "MELSVAI PILKA";
    },
    get$placeChennai() {
      return "\u010cenajus";
    },
    get$placeTanjore() {
      return "Tand\u017eav\u016bras";
    },
    get$placeChettinad() {
      return "\u010cetinadas";
    },
    get$placePondicherry() {
      return "Pudu\u010deris";
    },
    get$placeFlowerMarket() {
      return "G\u0117li\u0173 turgus";
    },
    get$placeBronzeWorks() {
      return "Bronzos liejykla";
    },
    get$placeMarket() {
      return "Prekyviet\u0117";
    },
    get$placeThanjavurTemple() {
      return "Tand\u017eav\u016bro \u0161ventykla";
    },
    get$placeSaltFarm() {
      return "Druskos \u016bkis";
    },
    get$placeScooters() {
      return "Va\u017eiuojantys paspirtukais";
    },
    get$placeSilkMaker() {
      return "\u0160ilko gamintojas";
    },
    get$placeLunchPrep() {
      return "Prie\u0161pie\u010di\u0173 ruo\u0161imas";
    },
    get$placeBeach() {
      return "Papl\u016bdimys";
    },
    get$placeFisherman() {
      return "\u017dvejys";
    },
    get$starterAppTitle() {
      return "Pradedan\u010di\u0173j\u0173 programa";
    },
    get$starterAppDescription() {
      return "Interaktyvus pradedan\u010di\u0173j\u0173 programos i\u0161d\u0117stymas";
    },
    get$starterAppGenericButton() {
      return "MYGTUKAS";
    },
    get$starterAppTooltipAdd() {
      return "Prid\u0117ti";
    },
    get$starterAppTooltipFavorite() {
      return "M\u0117gstamiausi";
    },
    get$starterAppTooltipShare() {
      return "Bendrinti";
    },
    get$starterAppTooltipSearch() {
      return "Ie\u0161koti";
    },
    get$starterAppGenericTitle() {
      return "Pavadinimas";
    },
    get$starterAppGenericSubtitle() {
      return "Paantra\u0161t\u0117";
    },
    get$starterAppGenericHeadline() {
      return "Antra\u0161t\u0117";
    },
    get$starterAppGenericBody() {
      return "Pagrindin\u0117 dalis";
    },
    starterAppDrawerItem$1(value) {
      return "Prek\u0117 " + value;
    },
    get$shrineMenuCaption() {
      return "MENIU";
    },
    get$shrineCategoryNameAll() {
      return "VISKAS";
    },
    get$shrineCategoryNameAccessories() {
      return "PRIEDAI";
    },
    get$shrineCategoryNameClothing() {
      return "APRANGA";
    },
    get$shrineCategoryNameHome() {
      return "Namai";
    },
    get$shrineLogoutButtonCaption() {
      return "ATSIJUNGTI";
    },
    get$shrineLoginUsernameLabel() {
      return "Naudotojo vardas";
    },
    get$shrineLoginPasswordLabel() {
      return "Slapta\u017eodis";
    },
    get$shrineCancelButtonCaption() {
      return "AT\u0160AUKTI";
    },
    get$shrineNextButtonCaption() {
      return "KITAS";
    },
    get$shrineCartPageCaption() {
      return "KREP\u0160ELIS";
    },
    shrineProductQuantity$1(quantity) {
      return "Kiekis: " + quantity;
    },
    shrineProductPrice$1(price) {
      return "po " + price;
    },
    shrineCartItemCount$1(quantity) {
      var t1 = "" + quantity;
      return A.Intl_pluralLogic(quantity, t1 + " ELEMENTAI", this.localeName, t1 + " ELEMENTO", "1 ELEMENTAS", t1 + " ELEMENT\u0172", null, "N\u0116RA JOKI\u0172 ELEMENT\u0172", type$.String);
    },
    get$shrineCartClearButtonCaption() {
      return "I\u0160VALYTI KREP\u0160EL\u012e";
    },
    get$shrineCartTotalCaption() {
      return "I\u0160 VISO";
    },
    get$shrineCartSubtotalCaption() {
      return "Tarpin\u0117 suma:";
    },
    get$shrineCartShippingCaption() {
      return "Pristatymas:";
    },
    get$shrineCartTaxCaption() {
      return "Mokestis:";
    },
    get$shrineProductVagabondSack() {
      return "\u201eVagabond\u201c krep\u0161ys";
    },
    get$shrineProductStellaSunglasses() {
      return "Stellos McCartney akiniai nuo saul\u0117s";
    },
    get$shrineProductWhitneyBelt() {
      return "\u201eWhitney\u201c dir\u017eas";
    },
    get$shrineProductGardenStrand() {
      return "\u201eGarden\u201c v\u0117rinys";
    },
    get$shrineProductStrutEarrings() {
      return "\u201eStrut\u201c auskarai";
    },
    get$shrineProductVarsitySocks() {
      return "\u201eVarsity\u201c kojin\u0117s";
    },
    get$shrineProductWeaveKeyring() {
      return "Rakt\u0173 pakabukas";
    },
    get$shrineProductGatsbyHat() {
      return "Getsbio skryb\u0117l\u0117";
    },
    get$shrineProductShrugBag() {
      return "Ant peties ne\u0161iojama rankin\u0117";
    },
    get$shrineProductGiltDeskTrio() {
      return "Trij\u0173 paauksuot\u0173 stal\u0173 rinkinys";
    },
    get$shrineProductCopperWireRack() {
      return "Vario laid\u0173 lentyna";
    },
    get$shrineProductSootheCeramicSet() {
      return "\u201eSoothe\u201c keramikos rinkinys";
    },
    get$shrineProductHurrahsTeaSet() {
      return "\u201eHurrahs\u201c arbatos servizas";
    },
    get$shrineProductBlueStoneMug() {
      return "M\u0117lynas keraminis puodelis";
    },
    get$shrineProductRainwaterTray() {
      return "Lietvamzdis";
    },
    get$shrineProductChambrayNapkins() {
      return "D\u017einso imitacijos servet\u0117l\u0117s";
    },
    get$shrineProductSucculentPlanters() {
      return "Sukulento sodinukai";
    },
    get$shrineProductQuartetTable() {
      return "Keturi\u0173 dali\u0173 stalas";
    },
    get$shrineProductKitchenQuattro() {
      return "Keturi\u0173 dali\u0173 virtuv\u0117s komplektas";
    },
    get$shrineProductClaySweater() {
      return "\u201eWillow & Clay\u201c megztinis";
    },
    get$shrineProductSeaTunic() {
      return "Papl\u016bdimio tunika";
    },
    get$shrineProductPlasterTunic() {
      return "Lengvo audinio tunika";
    },
    get$shrineProductWhitePinstripeShirt() {
      return "Balti dry\u017euoti mar\u0161kiniai";
    },
    get$shrineProductChambrayShirt() {
      return "D\u017einso imitacijos mar\u0161kiniai";
    },
    get$shrineProductSeabreezeSweater() {
      return "Megztinis \u201eSeabreeze\u201c";
    },
    get$shrineProductGentryJacket() {
      return "\u201eGentry\u201c \u0161varkelis";
    },
    get$shrineProductNavyTrousers() {
      return "Tamsiai m\u0117lynos keln\u0117s";
    },
    get$shrineProductWalterHenleyWhite() {
      return "\u201eWalter\u201c prasegami mar\u0161kin\u0117liai (balti)";
    },
    get$shrineProductSurfAndPerfShirt() {
      return "Sportiniai ir kiti mar\u0161kin\u0117liai";
    },
    get$shrineProductGingerScarf() {
      return "Rusvai gelsvas \u0161alik\u0117lis";
    },
    get$shrineProductRamonaCrossover() {
      return "\u201eRamona\u201c rankin\u0117 per pet\u012f";
    },
    get$shrineProductClassicWhiteCollar() {
      return "Klasikinis kvalifikuotas darbas";
    },
    get$shrineProductCeriseScallopTee() {
      return "Ciklameno spalvos mar\u0161kin\u0117liai ovalia apa\u010dia";
    },
    get$shrineProductShoulderRollsTee() {
      return "Pe\u010dius apnuoginantys mar\u0161kin\u0117liai";
    },
    get$shrineProductGreySlouchTank() {
      return "Pilki mar\u0161kin\u0117liai be rankovi\u0173";
    },
    get$shrineProductSunshirtDress() {
      return "Vasariniai drabu\u017eiai";
    },
    get$shrineProductFineLinesTee() {
      return "Mar\u0161kin\u0117liai su juostel\u0117mis";
    },
    get$shrineTooltipSearch() {
      return "Ie\u0161koti";
    },
    get$shrineTooltipSettings() {
      return "Nustatymai";
    },
    get$shrineTooltipOpenMenu() {
      return "Atidaryti meniu";
    },
    get$shrineTooltipCloseMenu() {
      return "U\u017edaryti meniu";
    },
    get$shrineTooltipCloseCart() {
      return "U\u017edaryti krep\u0161el\u012f";
    },
    shrineScreenReaderCart$1(quantity) {
      var t1 = "Pirkini\u0173 krep\u0161elis, " + quantity,
        t2 = t1 + " prek\u0117s";
      return A.Intl_pluralLogic(quantity, t2, this.localeName, t2, "Pirkini\u0173 krep\u0161elis, 1 prek\u0117", t1 + " preki\u0173", null, "Pirkini\u0173 krep\u0161elis, n\u0117ra joki\u0173 preki\u0173", type$.String);
    },
    get$shrineScreenReaderProductAddToCart() {
      return "Prid\u0117ti \u012f krep\u0161el\u012f";
    },
    shrineScreenReaderRemoveProductButton$1(product) {
      return "Pa\u0161alinti produkt\u0105: " + product;
    },
    get$shrineTooltipRemoveItem() {
      return "Pa\u0161alinti element\u0105";
    },
    get$craneFormDiners() {
      return "U\u017ekandin\u0117s";
    },
    get$craneFormDate() {
      return "Pasirinkite dat\u0105";
    },
    get$craneFormTime() {
      return "Pasirinkite laik\u0105";
    },
    get$craneFormLocation() {
      return "Pasirinkite viet\u0105";
    },
    get$craneFormTravelers() {
      return "Keliautojai";
    },
    get$craneFormOrigin() {
      return "Pasirinkite i\u0161vykimo viet\u0105";
    },
    get$craneFormDestination() {
      return "Pasirinkite kelion\u0117s tiksl\u0105";
    },
    get$craneFormDates() {
      return "Pasirinkite datas";
    },
    craneHours$1(hours) {
      var t1 = "" + hours + " h";
      return A.Intl_pluralLogic(hours, t1, this.localeName, t1, "1 h", t1, null, null, type$.String);
    },
    craneMinutes$1(minutes) {
      var t1 = "" + minutes + " min";
      return A.Intl_pluralLogic(minutes, t1, this.localeName, t1, "1 min", t1, null, null, type$.String);
    },
    craneFlightDuration$2(hoursShortForm, minutesShortForm) {
      return hoursShortForm + " " + minutesShortForm;
    },
    get$craneFly() {
      return "SKRYDIS";
    },
    get$craneSleep() {
      return "NAKVYN\u0116";
    },
    get$craneEat() {
      return "MAISTAS";
    },
    get$craneFlySubhead() {
      return "Ie\u0161kokite skryd\u017ei\u0173 pagal kelion\u0117s tiksl\u0105";
    },
    get$craneSleepSubhead() {
      return "Ie\u0161kokite nuomojam\u0173 patalp\u0173 pagal kelion\u0117s tiksl\u0105";
    },
    get$craneEatSubhead() {
      return "Ie\u0161kokite restoran\u0173 pagal kelion\u0117s tiksl\u0105";
    },
    craneFlyStops$1(numberOfStops) {
      var t1 = "" + numberOfStops;
      return A.Intl_pluralLogic(numberOfStops, t1 + " sustojimai", this.localeName, t1 + " sustojimo", "1 sustojimas", t1 + " sustojim\u0173", null, "Tiesioginis", type$.String);
    },
    craneSleepProperties$1(totalProperties) {
      var t1 = "" + totalProperties,
        t2 = t1 + " pasiekiamos nuosavyb\u0117s";
      return A.Intl_pluralLogic(totalProperties, t2, this.localeName, t2, "1 pasiekiama nuosavyb\u0117", t1 + " pasiekiam\u0173 nuosavybi\u0173", null, "N\u0117ra pasiekiam\u0173 nuosavybi\u0173", type$.String);
    },
    craneEatRestaurants$1(totalRestaurants) {
      var t1 = "" + totalRestaurants;
      return A.Intl_pluralLogic(totalRestaurants, t1 + " restoranai", this.localeName, t1 + " restorano", "1 restoranas", t1 + " restoran\u0173", null, "Restoran\u0173 n\u0117ra", type$.String);
    },
    get$craneFly0() {
      return "Aspenas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneFly1() {
      return "Big Sur, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneFly2() {
      return "Kumbu sl\u0117nis, Nepalas";
    },
    get$craneFly3() {
      return "Ma\u010du Pik\u010du, Peru";
    },
    get$craneFly4() {
      return "Mal\u0117, Maldyvai";
    },
    get$craneFly5() {
      return "Vicnau, \u0160veicarija";
    },
    get$craneFly6() {
      return "Meksikas, Meksika";
    },
    get$craneFly7() {
      return "Ra\u0161moro Kalnas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneFly8() {
      return "Singap\u016bras";
    },
    get$craneFly9() {
      return "Havana, Kuba";
    },
    get$craneFly10() {
      return "Kairas, Egiptas";
    },
    get$craneFly11() {
      return "Lisabona, Portugalija";
    },
    get$craneFly12() {
      return "Napa, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneFly13() {
      return "Balis, Indonezija";
    },
    get$craneSleep0() {
      return "Mal\u0117, Maldyvai";
    },
    get$craneSleep1() {
      return "Aspenas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneSleep2() {
      return "Ma\u010du Pik\u010du, Peru";
    },
    get$craneSleep3() {
      return "Havana, Kuba";
    },
    get$craneSleep4() {
      return "Vicnau, \u0160veicarija";
    },
    get$craneSleep5() {
      return "Big Sur, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneSleep6() {
      return "Napa, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneSleep7() {
      return "Portas, Portugalija";
    },
    get$craneSleep8() {
      return "Tulumas, Meksika";
    },
    get$craneSleep9() {
      return "Lisabona, Portugalija";
    },
    get$craneSleep10() {
      return "Kairas, Egiptas";
    },
    get$craneSleep11() {
      return "Taip\u0117jus, Taivanas";
    },
    get$craneEat0() {
      return "Neapolis, Italija";
    },
    get$craneEat1() {
      return "Dalasas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneEat2() {
      return "Kordoba, Argentina";
    },
    get$craneEat3() {
      return "Portlandas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneEat4() {
      return "Pary\u017eius, Pranc\u016bzija";
    },
    get$craneEat5() {
      return "Seulas 06236, Piet\u0173 Kor\u0117ja";
    },
    get$craneEat6() {
      return "Siatlas, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneEat7() {
      return "Na\u0161vilis, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneEat8() {
      return "Atlanta, Jungtin\u0117s Amerikos Valstijos";
    },
    get$craneEat9() {
      return "Madridas, Ispanija";
    },
    get$craneEat10() {
      return "Lisabona, Portugalija";
    },
    get$craneFly0SemanticLabel() {
      return string$.Trobel;
    },
    get$craneFly1SemanticLabel() {
      return "Palapin\u0117 lauke";
    },
    get$craneFly2SemanticLabel() {
      return "Maldos v\u0117liav\u0117l\u0117s apsnigto kalno fone";
    },
    get$craneFly3SemanticLabel() {
      return "Ma\u010du Pik\u010du tvirtov\u0117";
    },
    get$craneFly4SemanticLabel() {
      return "Vilos ant vandens";
    },
    get$craneFly5SemanticLabel() {
      return "Vie\u0161butis e\u017eero pakrant\u0117je su kalnais";
    },
    get$craneFly6SemanticLabel() {
      return "Meksiko vaizduojamojo meno r\u016bm\u0173 vaizdas i\u0161 vir\u0161aus";
    },
    get$craneFly7SemanticLabel() {
      return "Ra\u0161moro kalnas";
    },
    get$craneFly8SemanticLabel() {
      return "Supermed\u017ei\u0173 girait\u0117";
    },
    get$craneFly9SemanticLabel() {
      return string$._mogus;
    },
    get$craneFly10SemanticLabel() {
      return "Al Azharo me\u010det\u0117s bok\u0161tai per saul\u0117lyd\u012f";
    },
    get$craneFly11SemanticLabel() {
      return "M\u016brinis \u0161vyturys j\u016broje";
    },
    get$craneFly12SemanticLabel() {
      return "Baseinas su palm\u0117mis";
    },
    get$craneFly13SemanticLabel() {
      return "Papl\u016bdimio baseinas su palm\u0117mis";
    },
    get$craneSleep0SemanticLabel() {
      return "Vilos ant vandens";
    },
    get$craneSleep1SemanticLabel() {
      return string$.Trobel;
    },
    get$craneSleep2SemanticLabel() {
      return "Ma\u010du Pik\u010du tvirtov\u0117";
    },
    get$craneSleep3SemanticLabel() {
      return string$._mogus;
    },
    get$craneSleep4SemanticLabel() {
      return "Vie\u0161butis e\u017eero pakrant\u0117je su kalnais";
    },
    get$craneSleep5SemanticLabel() {
      return "Palapin\u0117 lauke";
    },
    get$craneSleep6SemanticLabel() {
      return "Baseinas su palm\u0117mis";
    },
    get$craneSleep7SemanticLabel() {
      return "Spalvingi apartamentai Ribeiro aik\u0161t\u0117je";
    },
    get$craneSleep8SemanticLabel() {
      return "Maj\u0173 griuv\u0117siai papl\u016bdimyje ant uolos";
    },
    get$craneSleep9SemanticLabel() {
      return "M\u016brinis \u0161vyturys j\u016broje";
    },
    get$craneSleep10SemanticLabel() {
      return "Al Azharo me\u010det\u0117s bok\u0161tai per saul\u0117lyd\u012f";
    },
    get$craneSleep11SemanticLabel() {
      return "Taip\u0117jaus dangorai\u017eis 101";
    },
    get$craneEat0SemanticLabel() {
      return "Pica malkin\u0117je krosnyje";
    },
    get$craneEat1SemanticLabel() {
      return "Tu\u0161\u010dias baras su auk\u0161tomis baro k\u0117d\u0117mis";
    },
    get$craneEat2SemanticLabel() {
      return "M\u0117sainis";
    },
    get$craneEat3SemanticLabel() {
      return "Kor\u0117jieti\u0161kas tako";
    },
    get$craneEat4SemanticLabel() {
      return "\u0160okoladinis desertas";
    },
    get$craneEat5SemanticLabel() {
      return "Vieta prie stalo meni\u0161kame restorane";
    },
    get$craneEat6SemanticLabel() {
      return "Indas kreve\u010di\u0173";
    },
    get$craneEat7SemanticLabel() {
      return "\u012e\u0117jimas \u012f kepykl\u0105";
    },
    get$craneEat8SemanticLabel() {
      return "V\u0117\u017ei\u0173 l\u0117k\u0161t\u0117";
    },
    get$craneEat9SemanticLabel() {
      return "Kavin\u0117s vitrina su kepiniais";
    },
    get$craneEat10SemanticLabel() {
      return "Moteris, laikanti didel\u012f su jautiena";
    },
    get$fortnightlyMenuFrontPage() {
      return "Pradinis puslapis";
    },
    get$fortnightlyMenuWorld() {
      return "Pasaulis";
    },
    get$fortnightlyMenuUS() {
      return "JAV";
    },
    get$fortnightlyMenuPolitics() {
      return "Politika";
    },
    get$fortnightlyMenuBusiness() {
      return "Verslas";
    },
    get$fortnightlyMenuTech() {
      return "Technologijos";
    },
    get$fortnightlyMenuScience() {
      return "Mokslas";
    },
    get$fortnightlyMenuSports() {
      return "Sportas";
    },
    get$fortnightlyMenuTravel() {
      return "Kelion\u0117s";
    },
    get$fortnightlyMenuCulture() {
      return "Kult\u016bra";
    },
    get$fortnightlyTrendingTechDesign() {
      return "Technologij\u0173 dizainas";
    },
    get$fortnightlyTrendingReform() {
      return "Reforma";
    },
    get$fortnightlyTrendingHealthcareRevolution() {
      return "Sveikatos prie\u017ei\u016bros perversmas";
    },
    get$fortnightlyTrendingGreenArmy() {
      return "\u017dalioji armija";
    },
    get$fortnightlyTrendingStocks() {
      return "Akcijos";
    },
    get$fortnightlyLatestUpdates() {
      return "Kar\u0161\u010diausios naujienos";
    },
    get$fortnightlyHeadlineHealthcare() {
      return "Tylus, bet galingas sveikatos prie\u017ei\u016bros perversmas";
    },
    get$fortnightlyHeadlineWar() {
      return "Padalyt\u0173 amerikie\u010di\u0173 gyvenimas per kar\u0105";
    },
    get$fortnightlyHeadlineGasoline() {
      return "Benzino ateitis";
    },
    get$fortnightlyHeadlineArmy() {
      return "\u017daliosios armijos reformavimas i\u0161 vidaus";
    },
    get$fortnightlyHeadlineStocks() {
      return "\u012evykus akcij\u0173 stagnacijai dauguma griebiasi valiutos";
    },
    get$fortnightlyHeadlineFabrics() {
      return "Dizaineriai kuria futuristinius audinius pasitelk\u0119 technologijas";
    },
    get$fortnightlyHeadlineFeminists() {
      return "Feministai lieka \u0161ali\u0161ki";
    },
    get$fortnightlyHeadlineBees() {
      return "Bi\u010di\u0173 \u016bkiams tr\u016bksta i\u0161tekli\u0173";
    },
    get$replyInboxLabel() {
      return "Gautieji";
    },
    get$replyStarredLabel() {
      return "Pa\u017eym\u0117ta \u017evaig\u017edute";
    },
    get$replySentLabel() {
      return "I\u0161si\u0173sta";
    },
    get$replyTrashLabel() {
      return "\u0160iuk\u0161liad\u0117\u017e\u0117";
    },
    get$replySpamLabel() {
      return "\u0160lam\u0161tas";
    },
    get$replyDraftsLabel() {
      return "Juodra\u0161\u010diai";
    },
    get$demoTwoPaneFoldableLabel() {
      return "Lankstomasis";
    },
    get$demoTwoPaneFoldableDescription() {
      return "Tai nurodo, kaip \u201eTwoPane\u201c veikia naudojant lankstom\u0105j\u012f \u012frengin\u012f.";
    },
    get$demoTwoPaneSmallScreenLabel() {
      return "Ma\u017eas ekranas";
    },
    get$demoTwoPaneSmallScreenDescription() {
      return "Tai nurodo, kaip \u201eTwoPane\u201c veikia naudojant ma\u017eo ekrano \u012frengin\u012f.";
    },
    get$demoTwoPaneTabletLabel() {
      return "Plan\u0161etiniai ir staliniai kompiuteriai";
    },
    get$demoTwoPaneTabletDescription() {
      return "Tai nurodo, kaip \u201eTwoPane\u201c veikia didesniame ekrane, pvz., naudojant plan\u0161etin\u012f ar stalin\u012f kompiuter\u012f.";
    },
    get$demoTwoPaneTitle() {
      return "TwoPane";
    },
    get$demoTwoPaneSubtitle() {
      return "Interaktyvieji i\u0161d\u0117stymai lankstomuosiuose, dideliuose ir ma\u017euose ekranuose";
    },
    get$splashSelectDemo() {
      return "Pasirinkti demonstracin\u0119 versij\u0105";
    },
    get$demoTwoPaneList() {
      return "S\u0105ra\u0161as";
    },
    get$demoTwoPaneDetails() {
      return "I\u0161sami informacija";
    },
    get$demoTwoPaneSelectItem() {
      return "Pasirinkti element\u0105";
    },
    demoTwoPaneItem$1(value) {
      return "Elementas " + value;
    },
    demoTwoPaneItemDetails$1(value) {
      return "I\u0161sami elemento " + value + " informacija";
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.GalleryLocalizationsLt, C.GalleryLocalizations);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"GalleryLocalizationsLt":{"GalleryLocalizations":[]}}'));
  var string$ = {
    Rodoma: "Rodomas dialogo langas, kuriame pateikiamas trima\u010di\u0173 objekt\u0173 dizaino datos rinkiklis.",
    Trobel: "Trobel\u0117 sniegynuose su vis\u017ealiais med\u017eiais",
    _mogus: "\u017dmogus, palink\u0119s prie senovinio m\u0117lyno automobilio"
  };
  var type$ = {
    String: A.findType("String")
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_500", e: "endPart", h: h});
})($__dart_deferred_initializers__, "HcMspL7gLWp7dvSw76+/EK/foww=");
;