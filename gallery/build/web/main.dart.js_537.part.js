// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.0-167.0.dev.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_537", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    GalleryLocalizationsSl$() {
      return new B.GalleryLocalizationsSl(A.canonicalizedLocale("sl"));
    },
    GalleryLocalizationsSl: function GalleryLocalizationsSl(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[111];
  B = hunkHelpers.updateHolder(holdersList[66], B);
  B.GalleryLocalizationsSl.prototype = {
    githubRepo$1(repoName) {
      return "shrambo " + repoName + " v GitHubu";
    },
    aboutDialogDescription$1(repoLink) {
      return "\u010ce si \u017eelite ogledati izvorno kodo za to aplikacijo, odprite " + repoLink + ".";
    },
    get$deselect() {
      return "Po\u010disti izbiro";
    },
    get$notSelected() {
      return "Ni izbrano";
    },
    get$select(_) {
      return "Izberi";
    },
    get$selectable() {
      return "Omogo\u010da izbiro (dolg pritisk)";
    },
    get$selected(_) {
      return "Izbrano";
    },
    get$signIn() {
      return "PRIJAVA";
    },
    get$bannerDemoText() {
      return "Geslo je bilo posodobljeno v drugi napravi. Prijavite se znova.";
    },
    get$bannerDemoResetText() {
      return "Ponastavitev pasice";
    },
    get$bannerDemoMultipleText() {
      return "Ve\u010d dejanj";
    },
    get$bannerDemoLeadingText() {
      return "Ikona na za\u010detku";
    },
    get$dismiss() {
      return "OPUSTI";
    },
    get$backToGallery() {
      return "Nazaj v galerijo";
    },
    get$cardsDemoExplore() {
      return "Razi\u0161\u010dite";
    },
    cardsDemoExploreSemantics$1(destinationName) {
      return "Raziskovanje " + destinationName;
    },
    cardsDemoShareSemantics$1(destinationName) {
      return "Deljenje z drugimi " + destinationName;
    },
    get$cardsDemoTappable() {
      return "Omogo\u010da dotike";
    },
    get$cardsDemoTravelDestinationTitle1() {
      return "10 najbolj priljubljenih mest za obisk v indijski zvezni dr\u017eavi Tamil Nadu";
    },
    get$cardsDemoTravelDestinationDescription1() {
      return "\u0160tevilka 10";
    },
    get$cardsDemoTravelDestinationCity1() {
      return "Thanjavur";
    },
    get$cardsDemoTravelDestinationLocation1() {
      return "Thanjavur, Tamil Nadu";
    },
    get$cardsDemoTravelDestinationTitle2() {
      return "Rokodelci ju\u017ene Indije";
    },
    get$cardsDemoTravelDestinationDescription2() {
      return "Svilarji";
    },
    get$cardsDemoTravelDestinationCity2() {
      return "Chettinad";
    },
    get$cardsDemoTravelDestinationLocation2() {
      return "Sivaganga, Tamil Nadu";
    },
    get$cardsDemoTravelDestinationTitle3() {
      return "Tempelj Brihadisvara";
    },
    get$cardsDemoTravelDestinationDescription3() {
      return "Templji";
    },
    get$homeHeaderGallery() {
      return "Galerija";
    },
    get$homeHeaderCategories() {
      return "Kategorije";
    },
    get$shrineDescription() {
      return "Modna aplikacija za nakupovanje";
    },
    get$fortnightlyDescription() {
      return "Aplikacija za novice s poudarkom na vsebini";
    },
    get$rallyDescription() {
      return "Aplikacija za osebne finance";
    },
    get$replyDescription() {
      return "U\u010dinkovita, osredoto\u010dena aplikacija za e-po\u0161to.";
    },
    get$rallyAccountDataChecking() {
      return "Preverjanje";
    },
    get$rallyAccountDataHomeSavings() {
      return "Doma\u010di prihranki";
    },
    get$rallyAccountDataCarSavings() {
      return "Prihranki pri avtomobilu";
    },
    get$rallyAccountDataVacation() {
      return "Po\u010ditnice";
    },
    get$rallyAccountDetailDataAnnualPercentageYield() {
      return "Letni donos v odstotkih";
    },
    get$rallyAccountDetailDataInterestRate() {
      return "Obrestna mera";
    },
    get$rallyAccountDetailDataInterestYtd() {
      return "Obresti od za\u010detka leta do danes";
    },
    get$rallyAccountDetailDataInterestPaidLastYear() {
      return "Lani pla\u010dane obresti";
    },
    get$rallyAccountDetailDataNextStatement() {
      return "Naslednji izpisek";
    },
    get$rallyAccountDetailDataAccountOwner() {
      return "Lastnik ra\u010duna";
    },
    get$rallyBillDetailTotalAmount() {
      return "Skupni znesek";
    },
    get$rallyBillDetailAmountPaid() {
      return "Pla\u010dani znesek";
    },
    get$rallyBillDetailAmountDue() {
      return "Nepla\u010dan znesek";
    },
    get$rallyBudgetCategoryCoffeeShops() {
      return "Kavarne";
    },
    get$rallyBudgetCategoryGroceries() {
      return "\u017divila";
    },
    get$rallyBudgetCategoryRestaurants() {
      return "Restavracije";
    },
    get$rallyBudgetCategoryClothing() {
      return "Obla\u010dila";
    },
    get$rallyBudgetDetailTotalCap() {
      return "Skupna omejitev";
    },
    get$rallyBudgetDetailAmountUsed() {
      return "Porabljeni znesek";
    },
    get$rallyBudgetDetailAmountLeft() {
      return "Preostali znesek";
    },
    get$rallySettingsManageAccounts() {
      return "Upravljanje ra\u010dunov";
    },
    get$rallySettingsTaxDocuments() {
      return "Dav\u010dni dokumenti";
    },
    get$rallySettingsPasscodeAndTouchId() {
      return "Geslo in Touch ID";
    },
    get$rallySettingsNotifications() {
      return "Obvestila";
    },
    get$rallySettingsPersonalInformation() {
      return "Osebni podatki";
    },
    get$rallySettingsPaperlessSettings() {
      return "Nastavitev brez papirja";
    },
    get$rallySettingsFindAtms() {
      return "Iskanje bankomatov";
    },
    get$rallySettingsHelp() {
      return "Pomo\u010d";
    },
    get$rallySettingsSignOut() {
      return "Odjava";
    },
    get$rallyAccountTotal() {
      return "Skupno";
    },
    get$rallyBillsDue() {
      return "Rok";
    },
    get$rallyBudgetLeft() {
      return "preostalih sredstev";
    },
    get$rallyAccounts() {
      return "Ra\u010duni";
    },
    get$rallyBills() {
      return "Polo\u017enice";
    },
    get$rallyBudgets() {
      return "Prora\u010duni";
    },
    get$rallyAlerts() {
      return "Opozorila";
    },
    get$rallySeeAll() {
      return "PRIKA\u017dI VSE";
    },
    get$rallyFinanceLeft() {
      return "PREOSTALIH SREDSTEV";
    },
    get$rallyTitleOverview() {
      return "PREGLED";
    },
    get$rallyTitleAccounts() {
      return "RA\u010cUNI";
    },
    get$rallyTitleBills() {
      return "POLO\u017dNICE";
    },
    get$rallyTitleBudgets() {
      return "PRORA\u010cUNI";
    },
    get$rallyTitleSettings() {
      return "NASTAVITVE";
    },
    get$rallyLoginLoginToRally() {
      return "Prijava v aplikacijo Rally";
    },
    get$rallyLoginNoAccount() {
      return "Nimate ra\u010duna?";
    },
    get$rallyLoginSignUp() {
      return "REGISTRACIJA";
    },
    get$rallyLoginUsername() {
      return "Uporabni\u0161ko ime";
    },
    get$rallyLoginPassword() {
      return "Geslo";
    },
    get$rallyLoginLabelLogin() {
      return "Prijava";
    },
    get$rallyLoginRememberMe() {
      return "Zapomni si me";
    },
    get$rallyLoginButtonLogin() {
      return "PRIJAVA";
    },
    rallyAlertsMessageHeadsUpShopping$1(percent) {
      return "Pozor, porabili ste " + percent + " prora\u010duna za nakupovanje za ta mesec.";
    },
    rallyAlertsMessageSpentOnRestaurants$1(amount) {
      return "Ta teden ste porabili " + amount + " za restavracije.";
    },
    rallyAlertsMessageATMFees$1(amount) {
      return "Ta mesec ste porabili " + amount + " za provizije na bankomatih.";
    },
    rallyAlertsMessageCheckingAccount$1(percent) {
      return "Bravo. Stanje na transakcijskem ra\u010dunu je " + percent + " vi\u0161je kot prej\u0161nji mesec.";
    },
    rallyAlertsMessageUnassignedTransactions$1(count) {
      var t1 = "Pove\u010dajte morebitno dav\u010dno olaj\u0161avo. Dodelite kategorije " + count,
        t2 = t1 + " transakcijam brez dodelitev.";
      return A.Intl_pluralLogic(count, t2, this.localeName, null, "Pove\u010dajte morebitno dav\u010dno olaj\u0161avo. Dodelite kategorije eni transakciji brez dodelitev.", t2, t1 + " transakcijama brez dodelitev.", null, type$.String);
    },
    get$rallySeeAllAccounts() {
      return "Ogled vseh ra\u010dunov";
    },
    get$rallySeeAllBills() {
      return "Ogled vseh polo\u017enic";
    },
    get$rallySeeAllBudgets() {
      return "Ogled vseh prora\u010dunov";
    },
    rallyAccountAmount$3(accountName, accountNumber, amount) {
      return amount + " na ra\u010dun \xbb" + accountName + "\xab s \u0161tevilko " + accountNumber + ".";
    },
    rallyBillAmount$3(billName, date, amount) {
      return "Rok za pla\u010dilo polo\u017enice \xbb" + billName + "\xab z zneskom " + amount + " je " + date + ".";
    },
    rallyBudgetAmount$4(budgetName, amountUsed, amountTotal, amountLeft) {
      return "Prora\u010dun " + budgetName + " s porabljenimi sredstvi v vi\u0161ini " + A.S(amountUsed) + " od " + amountTotal + ", na voljo \u0161e " + amountLeft;
    },
    get$craneDescription() {
      return "Individualno prilagojena aplikacija za potovanja";
    },
    get$homeCategoryReference() {
      return "SLOGI IN DRUGO";
    },
    get$demoInvalidURL() {
      return "URL-ja ni bilo mogo\u010de prikazati:";
    },
    get$demoOptionsTooltip() {
      return "Mo\u017enosti";
    },
    get$demoInfoTooltip() {
      return "Informacije";
    },
    get$demoCodeTooltip() {
      return "Predstavitvena koda";
    },
    get$demoDocumentationTooltip() {
      return "Dokumentacija za API";
    },
    get$demoFullscreenTooltip() {
      return "Celozaslonski na\u010din";
    },
    get$demoCodeViewerCopyAll() {
      return "KOPIRAJ VSE";
    },
    get$demoCodeViewerCopiedToClipboardMessage() {
      return "Kopirano v odlo\u017ei\u0161\u010de.";
    },
    demoCodeViewerFailedToCopyToClipboardMessage$1(error) {
      return "Kopiranje v odlo\u017ei\u0161\u010de ni uspelo: " + A.S(error);
    },
    get$demoOptionsFeatureTitle() {
      return "Ogled mo\u017enosti";
    },
    get$demoOptionsFeatureDescription() {
      return "Dotaknite se tukaj, \u010de si \u017eelite ogledati razpolo\u017eljive mo\u017enosti za to predstavitev.";
    },
    get$settingsTitle() {
      return "Nastavitve";
    },
    get$settingsButtonLabel() {
      return "Nastavitve";
    },
    get$settingsButtonCloseLabel() {
      return "Zapiranje nastavitev";
    },
    get$settingsSystemDefault() {
      return "Sistemsko";
    },
    get$settingsTextScaling() {
      return "Prilagajanje besedila";
    },
    get$settingsTextScalingSmall() {
      return "Majhna";
    },
    get$settingsTextScalingNormal() {
      return "Navadna";
    },
    get$settingsTextScalingLarge() {
      return "Velika";
    },
    get$settingsTextScalingHuge() {
      return "Zelo velika";
    },
    get$settingsTextDirection() {
      return "Smer besedila";
    },
    get$settingsTextDirectionLocaleBased() {
      return "Na podlagi jezika";
    },
    get$settingsTextDirectionLTR() {
      return "OD LEVE PROTI DESNI";
    },
    get$settingsTextDirectionRTL() {
      return "OD DESNE PROTI LEVI";
    },
    get$settingsLocale() {
      return "Jezik";
    },
    get$settingsPlatformMechanics() {
      return "Mehanika okolja";
    },
    get$settingsTheme() {
      return "Tema";
    },
    get$settingsDarkTheme() {
      return "Temna";
    },
    get$settingsLightTheme() {
      return "Svetla";
    },
    get$settingsSlowMotion() {
      return "Po\u010dasni posnetek";
    },
    get$settingsAbout() {
      return "O aplikaciji Flutter Gallery";
    },
    get$settingsFeedback() {
      return "Po\u0161iljanje povratnih informacij";
    },
    get$settingsAttribution() {
      return "Oblikovali pri podjetju TOASTER v Londonu";
    },
    get$demoAppBarTitle() {
      return "Vrstica aplikacije";
    },
    get$demoAppBarSubtitle() {
      return "Prikazuje podatke in dejanja, povezane s trenutnim zaslonom.";
    },
    get$demoAppBarDescription() {
      return "Vrstica aplikacije navaja vsebino in dejanja, povezane s trenutnim zaslonom. Uporablja se za ozna\u010devanje blagovne znamke, naslove zaslonov, premikanje in dejanja.";
    },
    get$demoBottomAppBarTitle() {
      return "Spodnja vrstica aplikacije";
    },
    get$demoBottomAppBarSubtitle() {
      return "Prika\u017ee krmarjenje in dejanja na dnu";
    },
    get$demoBottomAppBarDescription() {
      return "Spodnje vrstice aplikacije omogo\u010dajo dostop do spodnjega predala za krmarjenje in do \u0161tirih dejanj, vklju\u010dno s plavajo\u010dim interaktivnim gumbom.";
    },
    get$bottomAppBarNotch() {
      return "Izrez";
    },
    get$bottomAppBarPosition() {
      return "Polo\u017eaj plavajo\u010dega interaktivnega gumba";
    },
    get$bottomAppBarPositionDockedEnd() {
      return "Zasidrano \u2013 na koncu";
    },
    get$bottomAppBarPositionDockedCenter() {
      return "Zasidrano \u2013 v sredini";
    },
    get$bottomAppBarPositionFloatingEnd() {
      return "Plavajo\u010de \u2013 na koncu";
    },
    get$bottomAppBarPositionFloatingCenter() {
      return "Plavajo\u010de \u2013 na sredini";
    },
    get$demoBannerTitle() {
      return "Pasica";
    },
    get$demoBannerSubtitle() {
      return "Prikaz pasice na seznamu";
    },
    get$demoBannerDescription() {
      return "Pasica prika\u017ee pomembno, jedrnato sporo\u010dilo in uporabnikom omogo\u010da dejanja za uporabo ali opustitev pasice. Opustitev pasice terja ukrepanje uporabnika.";
    },
    get$demoBottomNavigationTitle() {
      return "Krmarjenju na dnu zaslona";
    },
    get$demoBottomNavigationSubtitle() {
      return "Krmarjenje na dnu zaslona, ki se postopno prikazuje in izginja";
    },
    get$demoBottomNavigationPersistentLabels() {
      return "Trajne oznake";
    },
    get$demoBottomNavigationSelectedLabel() {
      return "Izbrana oznaka";
    },
    get$demoBottomNavigationDescription() {
      return "Spodnje vrstice za krmarjenje na dnu zaslona prikazujejo od tri do pet ciljev. Vsak cilj predstavljata ikona in izbirna besedilna oznaka. Ko se uporabnik dotakne ikone za krmarjenje na dnu zaslona, se odpre cilj krmarjenja najvi\u0161je ravni, povezan s to ikono.";
    },
    get$demoButtonTitle() {
      return "Gumbi";
    },
    get$demoButtonSubtitle() {
      return "Besedilo, dvignjeno, orisano in drugo.";
    },
    get$demoTextButtonTitle() {
      return "Gumb za besedilo";
    },
    get$demoTextButtonDescription() {
      return "Gumb za besedilo prikazuje pljusk \u010drnila ob pritisku, vendar se ne dvigne. Gumbe za besedilo uporabljajte v orodnih vrsticah, v pogovornih oknih in v vrstici z odmikom.";
    },
    get$demoElevatedButtonTitle() {
      return "Dvignjen gumb";
    },
    get$demoElevatedButtonDescription() {
      return "Dvignjeni gumbi dodajo razse\u017enosti ve\u010dinoma ravnim postavitvam. Poudarijo funkcije na mestih z veliko elementi ali \u0161irokih mestih.";
    },
    get$demoOutlinedButtonTitle() {
      return "Orisan gumb";
    },
    get$demoOutlinedButtonDescription() {
      return "Orisani gumbi ob pritisku postanejo prosojni in dvignjeni. Pogosto so zdru\u017eeni z dvignjenimi gumbi in ozna\u010dujejo nadomestno, sekundarno dejanje.";
    },
    get$demoToggleButtonTitle() {
      return "Preklopni gumbi";
    },
    get$demoToggleButtonDescription() {
      return "Preklopne gumbe je mogo\u010de uporabiti za zdru\u017eevanje sorodnih mo\u017enosti. \u010ce \u017eelite poudariti skupine sorodnih preklopnih gumbov, mora imeti skupina skupni vsebnik";
    },
    get$demoFloatingButtonTitle() {
      return "Plavajo\u010di interaktivni gumb";
    },
    get$demoFloatingButtonDescription() {
      return "Plavajo\u010di interaktivni gumb je gumb z okroglo ikono, ki se prika\u017ee nad vsebino in ozna\u010duje primarno dejanje v aplikaciji.";
    },
    get$demoCardTitle() {
      return "Kartice";
    },
    get$demoCardSubtitle() {
      return "Kartice za osnovno vrstico z zaobljenimi robovi";
    },
    get$demoChipTitle() {
      return "Elementi";
    },
    get$demoCardDescription() {
      return "Kartica je list materiala, uporabljenega za ponazoritev povezanih podatkov, na primer albuma, zemljepisne lokacije, obroka, podatkov za stik ipd.";
    },
    get$demoChipSubtitle() {
      return "Kompaktni elementi, ki predstavljajo vnos, atribut ali dejanje";
    },
    get$demoActionChipTitle() {
      return "Element za dejanja";
    },
    get$demoActionChipDescription() {
      return "Elementi za dejanja so niz mo\u017enosti, ki spro\u017eijo dejanje, povezano z glavno vsebino. Elementi za dejanja se morajo v uporabni\u0161kem vmesniku pojavljati dinami\u010dno in kontekstualno.";
    },
    get$demoChoiceChipTitle() {
      return "Element za izbiro";
    },
    get$demoChoiceChipDescription() {
      return "Elementi za izbiro predstavljajo posamezno izbiro v nizu. Elementi za izbiro vsebujejo povezano opisno besedilo ali kategorije.";
    },
    get$demoFilterChipTitle() {
      return "Element za filtre";
    },
    get$demoFilterChipDescription() {
      return "Elementi za filtre uporabljajo oznake ali opisne besede za filtriranje vsebine.";
    },
    get$demoInputChipTitle() {
      return "Element za vnos";
    },
    get$demoInputChipDescription() {
      return "Elementi za vnos predstavljajo zapletene podatke, na primer o subjektu (osebi, mestu ali predmetu) ali pogovornem besedilu, v zgo\u0161\u010deni obliki.";
    },
    get$demoDataTableTitle() {
      return "Podatkovne tabele";
    },
    get$demoDataTableSubtitle() {
      return "Vrstice in stolpci s podatki";
    },
    get$demoDataTableDescription() {
      return "V podatkovnih tabelah so prikazani podatki v vrsticah in stolpcih v obliki mre\u017ee. Podatki so razvr\u0161\u010deni na na\u010din, ki omogo\u010da preprosto pregledovanje, tako da lahko uporabniki i\u0161\u010dejo vzorce in podrobne informacije.";
    },
    get$dataTableHeader() {
      return "Prehrana";
    },
    get$dataTableColumnDessert() {
      return "Posladek (1 porcija)";
    },
    get$dataTableColumnCalories() {
      return "Kalorije";
    },
    get$dataTableColumnFat() {
      return "Ma\u0161\u010dobe (g)";
    },
    get$dataTableColumnCarbs() {
      return "Ogljikovi hidrati (g)";
    },
    get$dataTableColumnProtein() {
      return "Beljakovine (g)";
    },
    get$dataTableColumnSodium() {
      return "Sol (mg)";
    },
    get$dataTableColumnCalcium() {
      return "Kalcij (%)";
    },
    get$dataTableColumnIron() {
      return "\u017delezo (%)";
    },
    get$dataTableRowFrozenYogurt() {
      return "Frozen yogurt";
    },
    get$dataTableRowIceCreamSandwich() {
      return "Ice Cream Sandwich";
    },
    get$dataTableRowEclair() {
      return "Eclair";
    },
    get$dataTableRowCupcake() {
      return "Cupcake";
    },
    get$dataTableRowGingerbread() {
      return "Gingerbread";
    },
    get$dataTableRowJellyBean() {
      return "Jelly bean";
    },
    get$dataTableRowLollipop() {
      return "Lollipop";
    },
    get$dataTableRowHoneycomb() {
      return "Honeycomb";
    },
    get$dataTableRowDonut() {
      return "Donut";
    },
    get$dataTableRowApplePie() {
      return "Apple pie";
    },
    dataTableRowWithSugar$1(value) {
      return value + " s sladkorjem";
    },
    dataTableRowWithHoney$1(value) {
      return value + " z medom";
    },
    get$demoDialogTitle() {
      return "Pogovorna okna";
    },
    get$demoDialogSubtitle() {
      return "Preprosto, opozorila in celozaslonsko";
    },
    get$demoAlertDialogTitle() {
      return "Opozorilo";
    },
    get$demoAlertDialogDescription() {
      return "Opozorilno pogovorno okno obve\u0161\u010da uporabnika o primerih, v katerih se zahteva potrditev. Opozorilno pogovorno okno ima izbirni naslov in izbirni seznam dejanj.";
    },
    get$demoAlertTitleDialogTitle() {
      return "Opozorilo z naslovom";
    },
    get$demoSimpleDialogTitle() {
      return "Preprosto";
    },
    get$demoSimpleDialogDescription() {
      return "Preprosto pogovorno okno omogo\u010da uporabniku izbiro med ve\u010d mo\u017enostmi. Preprosto pogovorno okno ima izbirni naslov, ki je prikazan nad izbirami.";
    },
    get$demoDividerTitle() {
      return "Razdelilna \u010drta";
    },
    get$demoDividerSubtitle() {
      return "Razdelilna \u010drta je tanka \u010drta, ki zdru\u017euje vsebino v seznamih in postavitvah.";
    },
    get$demoDividerDescription() {
      return "Razdelilne \u010drte je mogo\u010de uporabljati za sezname, predale in drugje za lo\u010devanje vsebine.";
    },
    get$demoVerticalDividerTitle() {
      return "Navpi\u010dna razdelilna \u010drta";
    },
    get$demoGridListsTitle() {
      return "Mre\u017eni seznami";
    },
    get$demoGridListsSubtitle() {
      return "Postavitev z vrsticami in stolpci";
    },
    get$demoGridListsDescription() {
      return "Mre\u017eni seznami so najbolj primerni za predstavljanje homogenih podatkov, in sicer obi\u010dajno slik. Posameznemu elementu na mre\u017enem seznamu pravimo plo\u0161\u010dica.";
    },
    get$demoGridListsImageOnlyTitle() {
      return "Samo slika";
    },
    get$demoGridListsHeaderTitle() {
      return "Z glavo";
    },
    get$demoGridListsFooterTitle() {
      return "Z nogo";
    },
    get$demoSlidersTitle() {
      return "Drsniki";
    },
    get$demoSlidersSubtitle() {
      return "Pripomo\u010dki za izbiranje vrednosti z vle\u010denjem";
    },
    get$demoSlidersDescription() {
      return "Drsniki odra\u017eajo niz vrednosti vzdol\u017e vrstice, izmed katerih lahko uporabniki izberejo posamezno vrednost. Kot nala\u0161\u010d so za prilagajanje nastavitev, kot je glasnost ali svetlost, ali uveljavljanje filtrov za slike.";
    },
    get$demoRangeSlidersTitle() {
      return "Drsniki za obseg";
    },
    get$demoRangeSlidersDescription() {
      return "Drsniki odra\u017eajo niz vrednosti vzdol\u017e vrstice. Na obeh koncih vrstice imajo lahko ikoni, ki odra\u017eata obseg vrednosti. Kot nala\u0161\u010d so za prilagajanje nastavitev, kot je glasnost ali svetlost, ali uveljavljanje filtrov za slike.";
    },
    get$demoCustomSlidersTitle() {
      return "Drsniki po meri";
    },
    get$demoCustomSlidersDescription() {
      return "Drsniki odra\u017eajo niz vrednosti vzdol\u017e vrstice, izmed katerih lahko uporabniki izberejo posamezno vrednost ali obseg vrednosti. Drsnikom je mogo\u010de dolo\u010diti temo in jih prilagoditi.";
    },
    get$demoSlidersContinuousWithEditableNumericalValue() {
      return "Neprekinjeno s \u0161tevilsko vrednostjo, ki jo je mogo\u010de urediti";
    },
    get$demoSlidersDiscrete() {
      return "Diskretno";
    },
    get$demoSlidersDiscreteSliderWithCustomTheme() {
      return "Diskretni drsnik s temo po meri";
    },
    get$demoSlidersContinuousRangeSliderWithCustomTheme() {
      return "Drsnik z neprekinjenim obsegom in temo po meri";
    },
    get$demoSlidersContinuous() {
      return "Neprekinjeno";
    },
    get$demoSlidersEditableNumericalValue() {
      return "\u0160tevilska vrednost, ki jo je mogo\u010de urediti";
    },
    get$demoMenuTitle() {
      return "Meni";
    },
    get$demoContextMenuTitle() {
      return "Kontekstni meni";
    },
    get$demoSectionedMenuTitle() {
      return "Meni z razdelki";
    },
    get$demoSimpleMenuTitle() {
      return "Preprosti meni";
    },
    get$demoChecklistMenuTitle() {
      return "Meni s kontrolnim seznamom";
    },
    get$demoMenuSubtitle() {
      return "Menijski gumbi in preprosti meniji";
    },
    get$demoMenuDescription() {
      return "Meni prika\u017ee seznam izbir na za\u010dasni povr\u0161ini. Prika\u017eejo se, ko uporabniki uporabijo gumb, dejanje ali drug kontrolnik.";
    },
    get$demoMenuItemValueOne() {
      return "Prvi menijski element";
    },
    get$demoMenuItemValueTwo() {
      return "Drugi menijski element";
    },
    get$demoMenuItemValueThree() {
      return "Tretji menijski element";
    },
    get$demoMenuOne() {
      return "Ena";
    },
    get$demoMenuTwo() {
      return "Dve";
    },
    get$demoMenuThree() {
      return "Tri";
    },
    get$demoMenuFour() {
      return "\u0160tiri";
    },
    get$demoMenuAnItemWithAContextMenuButton() {
      return "Element s kontekstnim menijem";
    },
    get$demoMenuContextMenuItemOne() {
      return "Prvi element kontekstnega menija";
    },
    get$demoMenuADisabledMenuItem() {
      return "Onemogo\u010den menijski element";
    },
    get$demoMenuContextMenuItemThree() {
      return "Tretji element kontekstnega menija";
    },
    get$demoMenuAnItemWithASectionedMenu() {
      return "Element z menijem z razdelki";
    },
    get$demoMenuPreview() {
      return "Predogled";
    },
    get$demoMenuShare() {
      return "Deli";
    },
    get$demoMenuGetLink() {
      return "Pridobi povezavo";
    },
    get$demoMenuRemove() {
      return "Odstrani";
    },
    demoMenuSelected$1(value) {
      return "Izbrano: " + value;
    },
    demoMenuChecked$1(value) {
      return "Potrjeno: " + value.toString$0(0);
    },
    get$demoNavigationDrawerTitle() {
      return "Predal za krmarjenje";
    },
    get$demoNavigationDrawerSubtitle() {
      return "Prikazuje predal v vrstici z aplikacijami.";
    },
    get$demoNavigationDrawerDescription() {
      return "Podokno materialnega oblikovanja, ki v aplikaciji pridrsa vodoravno z roba zaslona in prika\u017ee povezave za krmarjenje.";
    },
    get$demoNavigationDrawerUserName() {
      return "Uporabni\u0161ko ime";
    },
    get$demoNavigationDrawerUserEmail() {
      return "uporabni\u0161ko.ime@primer.si";
    },
    get$demoNavigationDrawerToPageOne() {
      return "Element ena";
    },
    get$demoNavigationDrawerToPageTwo() {
      return "Element dve";
    },
    get$demoNavigationDrawerText() {
      return "Povlecite z roba ali se dotaknite ikone v spodnjem levem kotu, \u010de \u017eelite prikazati predal.";
    },
    get$demoNavigationRailTitle() {
      return "\u010crta za krmarjenje";
    },
    get$demoNavigationRailSubtitle() {
      return "Prikaz \u010drte za krmarjenje v aplikaciji.";
    },
    get$demoNavigationRailDescription() {
      return "Pripomo\u010dek materialnega oblikovanja, ki naj bi bil prikazan levo ali desno od aplikacije in naj bi omogo\u010dal krmarjenje med manj\u0161im \u0161tevilom pogledom \u2013 obi\u010dajno med tremi in petimi.";
    },
    get$demoNavigationRailFirst() {
      return "1.";
    },
    get$demoNavigationRailSecond() {
      return "2.";
    },
    get$demoNavigationRailThird() {
      return "3.";
    },
    get$demoMenuAnItemWithASimpleMenu() {
      return "Element s preprostim menijem";
    },
    get$demoMenuAnItemWithAChecklistMenu() {
      return "Element z menijem s kontrolnim seznamom";
    },
    get$demoFullscreenDialogTitle() {
      return "Celozaslonsko";
    },
    get$demoFullscreenDialogDescription() {
      return "Element fullscreenDialog dolo\u010da, ali je dohodna stran celozaslonsko pogovorno okno";
    },
    get$demoCupertinoActivityIndicatorTitle() {
      return "Indikator dejavnosti";
    },
    get$demoCupertinoActivityIndicatorSubtitle() {
      return "Indikatorji dejavnosti v slogu iOSa";
    },
    get$demoCupertinoActivityIndicatorDescription() {
      return "Indikator dejavnosti v slogu iOSa, ki se vrti v desno.";
    },
    get$demoCupertinoButtonsTitle() {
      return "Gumbi";
    },
    get$demoCupertinoButtonsSubtitle() {
      return "Gumbi v slogu iOSa";
    },
    get$demoCupertinoButtonsDescription() {
      return "Gumb v slogu iOSa. Vsebuje besedilo in/ali ikono, ki se zatemni ali odtemni ob dotiku. Lahko ima tudi ozadje.";
    },
    get$demoCupertinoContextMenuTitle() {
      return "Kontekstni meni";
    },
    get$demoCupertinoContextMenuSubtitle() {
      return "Kontekstni meni v slogu iOSa";
    },
    get$demoCupertinoContextMenuDescription() {
      return "Celozaslonski kontekstni meni v slogu iOSa, ki se pojavi po dolgem pritisku elementa.";
    },
    get$demoCupertinoContextMenuActionOne() {
      return "Prvo dejanje";
    },
    get$demoCupertinoContextMenuActionTwo() {
      return "Drugo dejanje";
    },
    get$demoCupertinoContextMenuActionText() {
      return "Pridr\u017eite logotip za Flutter, \u010de si \u017eelite ogledati kontekstni meni.";
    },
    get$demoCupertinoAlertsTitle() {
      return "Opozorila";
    },
    get$demoCupertinoAlertsSubtitle() {
      return "Opozorilna pogovorna okna v slogu iOSa";
    },
    get$demoCupertinoAlertTitle() {
      return "Opozorilo";
    },
    get$demoCupertinoAlertDescription() {
      return "Opozorilno pogovorno okno obve\u0161\u010da uporabnika o primerih, v katerih se zahteva potrditev. Opozorilno pogovorno okno ima izbirni naslov, izbirno vsebino in izbirni seznam dejanj. Naslov je prikazan nad vsebino in dejanja so prikazana pod vsebino.";
    },
    get$demoCupertinoAlertWithTitleTitle() {
      return "Opozorilo z naslovom";
    },
    get$demoCupertinoAlertButtonsTitle() {
      return "Opozorilo z gumbi";
    },
    get$demoCupertinoAlertButtonsOnlyTitle() {
      return "Samo opozorilni gumbi";
    },
    get$demoCupertinoActionSheetTitle() {
      return "Preglednica z dejanji";
    },
    get$demoCupertinoActionSheetDescription() {
      return "Preglednica z dejanji je dolo\u010den slog opozorila, ki uporabniku omogo\u010da najmanj dve mo\u017enosti glede trenutnega konteksta. Preglednica z dejanji ima lahko naslov, dodatno sporo\u010dilo in seznam dejanj.";
    },
    get$demoCupertinoNavigationBarTitle() {
      return "Vrstica za krmarjenje";
    },
    get$demoCupertinoNavigationBarSubtitle() {
      return "Vrstica za krmarjenje v slogu iOSa";
    },
    get$demoCupertinoNavigationBarDescription() {
      return "Vrstica za krmarjenje v slogu iOSa. Vrstica za krmarjenje je orodna vrstica, ki jo sestavlja najmanj naslov strani na sredini orodne vrstice.";
    },
    get$demoCupertinoPickerTitle() {
      return "Izbirniki";
    },
    get$demoCupertinoPickerSubtitle() {
      return "Izbirniki v slogu iOSa";
    },
    get$demoCupertinoPickerDescription() {
      return "Pripomo\u010dek z izbirnikom v slogu iOSa, s katerim je mogo\u010de izbirati nize, datume, ure ali datum in uro.";
    },
    get$demoCupertinoPickerTimer() {
      return "\u010casovnik";
    },
    get$demoCupertinoPicker() {
      return "Izbirnik";
    },
    get$demoCupertinoPickerDate() {
      return "Datum";
    },
    get$demoCupertinoPickerTime() {
      return "Ura";
    },
    get$demoCupertinoPickerDateTime() {
      return "Datum in ura";
    },
    get$demoCupertinoSegmentedControlTitle() {
      return "Segmentirano upravljanje";
    },
    get$demoCupertinoSegmentedControlSubtitle() {
      return "Segmentirano upravljanje v slogu iOSa";
    },
    get$demoCupertinoSegmentedControlDescription() {
      return "Uporablja se za izbiro med ve\u010d mo\u017enostmi, ki se medsebojno izklju\u010dujejo. \u010ce je izbrana ena mo\u017enost segmentiranega upravljanja, druge mo\u017enosti segmentiranega upravljanja niso ve\u010d izbrane.";
    },
    get$demoCupertinoSliderTitle() {
      return "Drsnik";
    },
    get$demoCupertinoSliderSubtitle() {
      return "Drsnik v slogu iOSa";
    },
    get$demoCupertinoSliderDescription() {
      return "Drsnik je mogo\u010de uporabiti za izbiro neprekinjenih ali diskretnih nizov vrednosti.";
    },
    demoCupertinoSliderContinuous$1(value) {
      return "Neprekinjeno: " + value;
    },
    demoCupertinoSliderDiscrete$1(value) {
      return "Diskretno: " + value;
    },
    get$demoCupertinoSwitchSubtitle() {
      return "Stikalo v slogu iOSa";
    },
    get$demoCupertinoSwitchDescription() {
      return "Stikalo se uporablja za preklop stanja vklop/izklop posamezne nastavitve.";
    },
    get$demoCupertinoTabBarTitle() {
      return "Vrstica z zavihki";
    },
    get$demoCupertinoTabBarSubtitle() {
      return "Spodnja vrstica z zavihki v slogu iOSa";
    },
    get$demoCupertinoTabBarDescription() {
      return "Spodnja vrstica za krmarjenje z zavihki v slogu iOSa. Prikazuje ve\u010d zavihkov z enim aktivnim zavihkov \u2013 privzeto je to prvi zavihek.";
    },
    get$cupertinoTabBarHomeTab() {
      return "Za\u010detek";
    },
    get$cupertinoTabBarChatTab() {
      return "Klepet";
    },
    get$cupertinoTabBarProfileTab() {
      return "Profil";
    },
    get$demoCupertinoTextFieldTitle() {
      return "Besedilna polja";
    },
    get$demoCupertinoTextFieldSubtitle() {
      return "Besedilna polja v slogu iOSa";
    },
    get$demoCupertinoTextFieldDescription() {
      return "Besedilno polje uporabniku omogo\u010da vnos besedila \u2013 ali s strojno tipkovnico ali z zaslonsko tipkovnico.";
    },
    get$demoCupertinoTextFieldPIN() {
      return "PIN";
    },
    get$demoCupertinoSearchTextFieldTitle() {
      return "Besedilno polje za iskanje";
    },
    get$demoCupertinoSearchTextFieldSubtitle() {
      return "Besedilno polje za iskanje v slogu iOSa.";
    },
    get$demoCupertinoSearchTextFieldDescription() {
      return "Besedilno polje za iskanje, ki uporabniku omogo\u010da iskanje z vnosom besedila, prav tako pa lahko ponudi in filtrira predloge.";
    },
    get$demoCupertinoSearchTextFieldPlaceholder() {
      return "Vnesite nekaj besedila";
    },
    get$demoCupertinoScrollbarTitle() {
      return "Drsna vrstica";
    },
    get$demoCupertinoScrollbarSubtitle() {
      return "Drsna vrstica v slogu iOSa.";
    },
    get$demoCupertinoScrollbarDescription() {
      return "Drsna vrstica, ki zdru\u017ei izbrane podrejene elemente.";
    },
    get$demoMotionTitle() {
      return "Gibanje";
    },
    get$demoMotionSubtitle() {
      return "Vsi vnaprej dolo\u010deni vzorci prehodov";
    },
    get$demoContainerTransformDemoInstructions() {
      return "Kartice, seznami in plavajo\u010di gumb";
    },
    get$demoSharedXAxisDemoInstructions() {
      return "Gumba za naprej in nazaj";
    },
    get$demoSharedYAxisDemoInstructions() {
      return "Razvr\u0161\u010danje glede na \xbbNedavno predvajano\xab";
    },
    get$demoSharedZAxisDemoInstructions() {
      return "Ikona gumba za nastavitve";
    },
    get$demoFadeThroughDemoInstructions() {
      return "Krmarjenju na dnu zaslona";
    },
    get$demoFadeScaleDemoInstructions() {
      return "Modalno okno in plavajo\u010di gumb";
    },
    get$demoContainerTransformTitle() {
      return "Pretvorba vsebnika";
    },
    get$demoContainerTransformDescription() {
      return "Vzorec pretvorbe vsebnika je zasnovan za prehode med elementi uporabni\u0161kega vmesnika, ki vklju\u010dujejo vsebnik. Ta vzorec ustvari vidno povezavo med dvema elementoma uporabni\u0161kega vmesnika.";
    },
    get$demoContainerTransformModalBottomSheetTitle() {
      return "Na\u010din pojemanja";
    },
    get$demoContainerTransformTypeFade() {
      return "POJEMANJE";
    },
    get$demoContainerTransformTypeFadeThrough() {
      return "POSTOPNO POJEMANJE";
    },
    get$demoMotionPlaceholderTitle() {
      return "Naslov";
    },
    get$demoMotionPlaceholderSubtitle() {
      return "Sekundarno besedilo";
    },
    get$demoMotionSmallPlaceholderSubtitle() {
      return "Sekundarno";
    },
    get$demoMotionDetailsPageTitle() {
      return "Stran s podrobnostmi";
    },
    get$demoMotionListTileTitle() {
      return "Element seznama";
    },
    get$demoSharedAxisDescription() {
      return "Vzorec skupne osi se uporablja za prehode med elementi uporabni\u0161kega vmesnika, ki so v prostorskem ali navigacijskem razmerju. Ta vzorec uporablja skupno spremembo na osi x, y ali z, da okrepi razmerje med elementi.";
    },
    get$demoSharedXAxisTitle() {
      return "Skupna os x";
    },
    get$demoSharedXAxisBackButtonText() {
      return "NAZAJ";
    },
    get$demoSharedXAxisNextButtonText() {
      return "NAPREJ";
    },
    get$demoSharedXAxisCoursePageTitle() {
      return "Izbolj\u0161ajte te\u010daje";
    },
    get$demoSharedXAxisCoursePageSubtitle() {
      return "Zdru\u017eene kategorije so prikazane kot skupine v va\u0161em viru. To lahko pozneje kadar koli spremenite.";
    },
    get$demoSharedXAxisArtsAndCraftsCourseTitle() {
      return "Ro\u010dna obrt";
    },
    get$demoSharedXAxisBusinessCourseTitle() {
      return "Posel";
    },
    get$demoSharedXAxisIllustrationCourseTitle() {
      return "Ilustracije";
    },
    get$demoSharedXAxisDesignCourseTitle() {
      return "Oblikovanje";
    },
    get$demoSharedXAxisCulinaryCourseTitle() {
      return "Kulinarika";
    },
    get$demoSharedXAxisBundledCourseSubtitle() {
      return "Zdru\u017eeno";
    },
    get$demoSharedXAxisIndividualCourseSubtitle() {
      return "Prikazano posamezno";
    },
    get$demoSharedXAxisSignInWelcomeText() {
      return "Pozdravljeni, David Park";
    },
    get$demoSharedXAxisSignInSubtitleText() {
      return "Prijavite se s svojim ra\u010dunom";
    },
    get$demoSharedXAxisSignInTextFieldLabel() {
      return "E-po\u0161tni naslov ali telefonska \u0161tevilka";
    },
    get$demoSharedXAxisForgotEmailButtonText() {
      return "STE POZABILI E-PO\u0160TNI NASLOV?";
    },
    get$demoSharedXAxisCreateAccountButtonText() {
      return "USTVARI RA\u010cUN";
    },
    get$demoSharedYAxisTitle() {
      return "Skupna os y";
    },
    get$demoSharedYAxisAlbumCount() {
      return "268 albumov";
    },
    get$demoSharedYAxisAlphabeticalSortTitle() {
      return "A\u2013\u017d";
    },
    get$demoSharedYAxisRecentSortTitle() {
      return "Nedavno predvajano";
    },
    get$demoSharedYAxisAlbumTileTitle() {
      return "Album";
    },
    get$demoSharedYAxisAlbumTileSubtitle() {
      return "Izvajalec";
    },
    get$demoSharedYAxisAlbumTileDurationUnit() {
      return "min";
    },
    get$demoSharedZAxisTitle() {
      return "Skupna os z";
    },
    get$demoSharedZAxisSettingsPageTitle() {
      return "Nastavitve";
    },
    get$demoSharedZAxisBurgerRecipeTitle() {
      return "Burger";
    },
    get$demoSharedZAxisBurgerRecipeDescription() {
      return "Recept za burger";
    },
    get$demoSharedZAxisSandwichRecipeTitle() {
      return "Sendvi\u010d";
    },
    get$demoSharedZAxisSandwichRecipeDescription() {
      return "Recept za sendvi\u010d";
    },
    get$demoSharedZAxisDessertRecipeTitle() {
      return "Sladica";
    },
    get$demoSharedZAxisDessertRecipeDescription() {
      return "Recept za sladico";
    },
    get$demoSharedZAxisShrimpPlateRecipeTitle() {
      return "Morski rakec";
    },
    get$demoSharedZAxisShrimpPlateRecipeDescription() {
      return "Recept za jed z rakci";
    },
    get$demoSharedZAxisCrabPlateRecipeTitle() {
      return "Rak";
    },
    get$demoSharedZAxisCrabPlateRecipeDescription() {
      return "Recept za jed z raki";
    },
    get$demoSharedZAxisBeefSandwichRecipeTitle() {
      return "Sendvi\u010d z govedino";
    },
    get$demoSharedZAxisBeefSandwichRecipeDescription() {
      return "Recept za sendvi\u010d z govedino";
    },
    get$demoSharedZAxisSavedRecipesListTitle() {
      return "Shranjeni recepti";
    },
    get$demoSharedZAxisProfileSettingLabel() {
      return "Profil";
    },
    get$demoSharedZAxisNotificationSettingLabel() {
      return "Obvestila";
    },
    get$demoSharedZAxisPrivacySettingLabel() {
      return "Zasebnost";
    },
    get$demoSharedZAxisHelpSettingLabel() {
      return "Pomo\u010d";
    },
    get$demoFadeThroughTitle() {
      return "Postopno pojemanje";
    },
    get$demoFadeThroughDescription() {
      return "Vzorec postopnega pojemanja se uporablja za prehode med elementi uporabni\u0161kega vmesnika, ki niso v mo\u010dnem medsebojnem razmerju.";
    },
    get$demoFadeThroughAlbumsDestination() {
      return "Albumi";
    },
    get$demoFadeThroughPhotosDestination() {
      return "Fotografije";
    },
    get$demoFadeThroughSearchDestination() {
      return "Iskanje";
    },
    get$demoFadeThroughTextPlaceholder() {
      return "123 fotografij";
    },
    get$demoFadeScaleTitle() {
      return "Pojemanje";
    },
    get$demoFadeScaleDescription() {
      return "Vzorec pojemanja se uporablja za elemente uporabni\u0161kega vmesnika, ki se prikazujejo ali izginjajo znotraj meja zaslona, kot je pogovorno okno, ki pojenja na sredini zaslona.";
    },
    get$demoFadeScaleShowAlertDialogButton() {
      return "PRIKA\u017dI MODALNO OKNO";
    },
    get$demoFadeScaleShowFabButton() {
      return "PRIKA\u017dI PLAVAJO\u010cI GUMB";
    },
    get$demoFadeScaleHideFabButton() {
      return "SKRIJ PLAVAJO\u010cI GUMB";
    },
    get$demoFadeScaleAlertDialogHeader() {
      return "Opozorilno pogovorno okno";
    },
    get$demoFadeScaleAlertDialogCancelButton() {
      return "PREKLI\u010cI";
    },
    get$demoFadeScaleAlertDialogDiscardButton() {
      return "ZAVRZI";
    },
    get$demoColorsTitle() {
      return "Barve";
    },
    get$demoColorsSubtitle() {
      return "Vse vnaprej dolo\u010dene barve";
    },
    get$demoColorsDescription() {
      return "Barvne konstante in konstante barvnih vzorcev, ki predstavljajo barvno paleto materialnega oblikovanja.";
    },
    get$demoTypographyTitle() {
      return "Tipografija";
    },
    get$demoTypographySubtitle() {
      return "Vsi vnaprej dolo\u010deni besedilni slogi";
    },
    get$demoTypographyDescription() {
      return "Definicije raznih tipografskih slogov v materialnem oblikovanju.";
    },
    get$demo2dTransformationsTitle() {
      return "2D-preoblikovanja";
    },
    get$demo2dTransformationsSubtitle() {
      return "Premikanje, pove\u010dava/pomanj\u0161ava, sukanje";
    },
    get$demo2dTransformationsDescription() {
      return "Dotaknite se, \u010de \u017eelite urejati plo\u0161\u010dice in uporabljati kretnje za pomikanje po prizoru. Vlecite, \u010de se \u017eelite premikati, povlecite s prsti skupaj oz. narazen, \u010de \u017eelite pomanj\u0161ati oziroma pove\u010dati, in sukajte z dvema prstoma. Pritisnite gumb za ponastavitev, \u010de se \u017eelite vrniti v za\u010detni polo\u017eaj.";
    },
    get$buttonText() {
      return "GUMB";
    },
    get$demoBottomSheetTitle() {
      return "List na dnu zaslona";
    },
    get$demoBottomSheetSubtitle() {
      return "Trajni in modalni listi na dnu zaslona";
    },
    get$demoBottomSheetPersistentTitle() {
      return "Trajni list na dnu zaslona";
    },
    get$demoBottomSheetPersistentDescription() {
      return "Trajni list na dnu zaslona prikazuje podatke, ki dopolnjujejo glavno vsebino aplikacije. Trajni list na dnu zaslona ostaja viden, tudi ko uporabnik uporablja druge dele aplikacije.";
    },
    get$demoBottomSheetModalTitle() {
      return "Modalni list na dnu zaslona";
    },
    get$demoBottomSheetModalDescription() {
      return "Modalni list na dnu zaslona je nadomestna mo\u017enost za meni ali pogovorno okno in uporabniku prepre\u010duje uporabo preostanka aplikacije.";
    },
    get$demoBottomSheetAddLabel() {
      return "Dodajanje";
    },
    get$demoBottomSheetButtonText() {
      return "POKA\u017dI LIST NA DNU ZASLONA";
    },
    get$demoBottomSheetHeader() {
      return "Glava";
    },
    demoBottomSheetItem$1(value) {
      return "Element " + value;
    },
    get$demoListsTitle() {
      return "Seznami";
    },
    get$demoListsSubtitle() {
      return "Postavitve seznama, ki omogo\u010da pomikanje";
    },
    get$demoListsDescription() {
      return "Ena vrstica s fiksno vi\u0161ino, ki obi\u010dajno vsebuje besedilo in ikono na za\u010detku ali koncu.";
    },
    get$demoOneLineListsTitle() {
      return "Ena vrstica";
    },
    get$demoTwoLineListsTitle() {
      return "Dve vrstici";
    },
    get$demoListsSecondary() {
      return "Sekundarno besedilo";
    },
    get$demoProgressIndicatorTitle() {
      return "Indikatorji napredovanja";
    },
    get$demoProgressIndicatorSubtitle() {
      return "Linearno, okroglo, nedolo\u010deno";
    },
    get$demoCircularProgressIndicatorTitle() {
      return "Okrogli indikator napredovanja";
    },
    get$demoCircularProgressIndicatorDescription() {
      return "Okrogli indikator napredovanja z materialnim oblikovanjem, ki z vrtenjem nakazuje, da je aplikacija zasedena.";
    },
    get$demoLinearProgressIndicatorTitle() {
      return "Linearni indikator napredovanja";
    },
    get$demoLinearProgressIndicatorDescription() {
      return "Linearni indikator napredovanja z materialnim oblikovanjem, znan tudi kot vrstica napredovanja.";
    },
    get$demoPickersTitle() {
      return "Izbirniki";
    },
    get$demoPickersSubtitle() {
      return "Izbira datuma in ure";
    },
    get$demoDatePickerTitle() {
      return "Izbirnik datuma";
    },
    get$demoDatePickerDescription() {
      return "Prika\u017ee pogovorno okno z izbirnikom datuma v slogu materialnega oblikovanja.";
    },
    get$demoTimePickerTitle() {
      return "Izbirnik ure";
    },
    get$demoTimePickerDescription() {
      return "Prika\u017ee pogovorno okno z izbirnikom ure v slogu materialnega oblikovanja.";
    },
    get$demoDateRangePickerTitle() {
      return "Izbirnik \u010dasovnega obdobja";
    },
    get$demoDateRangePickerDescription() {
      return "Prika\u017ee pogovorno okno z izbirnikom \u010dasovnega obdobja v slogu materialnega oblikovanja.";
    },
    get$demoPickersShowPicker() {
      return "POKA\u017dI IZBIRNIK";
    },
    get$demoTabsTitle() {
      return "Zavihki";
    },
    get$demoTabsScrollingTitle() {
      return "Omogo\u010da pomikanje";
    },
    get$demoTabsNonScrollingTitle() {
      return "Ne omogo\u010da pomikanja";
    },
    get$demoTabsSubtitle() {
      return "Zavihki s pogledi, ki omogo\u010dajo neodvisno pomikanje";
    },
    get$demoTabsDescription() {
      return "Na zavihkih je vsebina organizirana na ve\u010d zaslonih, po naborih podatkov in glede na druge uporabe.";
    },
    get$demoSnackbarsTitle() {
      return "Spodnje obvestilne vrstice";
    },
    get$demoSnackbarsSubtitle() {
      return "Spodnje obvestilne vrstice prikazujejo sporo\u010dila na dnu zaslona";
    },
    get$demoSnackbarsDescription() {
      return "Spodnje obvestilne vrstice uporabnike obve\u0161\u010dajo o procesu, ki ga aplikacija je ali ga bo izvedla. Prikazane so za\u010dasno, in sicer blizu dna zaslona. Ne smejo motiti uporabni\u0161ke izku\u0161nje in uporabniku ni treba ukrepati, da izginejo.";
    },
    get$demoSnackbarsButtonLabel() {
      return "PRIKA\u017dI SPODNJO OBVESTILNO VRSTICO";
    },
    get$demoSnackbarsText() {
      return "To je spodnja obvestilna vrstica.";
    },
    get$demoSnackbarsActionButtonLabel() {
      return "DEJANJE";
    },
    get$demoSnackbarsAction() {
      return "Pritisnili ste dejanje spodnje obvestilne vrstice.";
    },
    get$demoSelectionControlsTitle() {
      return "Kontrolniki za izbiro";
    },
    get$demoSelectionControlsSubtitle() {
      return "Potrditvena polja, izbirni gumbi in stikala";
    },
    get$demoSelectionControlsCheckboxTitle() {
      return "Potrditveno polje";
    },
    get$demoSelectionControlsCheckboxDescription() {
      return "Potrditvena polja omogo\u010dajo uporabniku izbiro ve\u010d mo\u017enosti iz nabora. Obi\u010dajna vrednost potrditvenega polja je True ali False. Vrednost potrditvenega polja za tri stanja je lahko tudi ni\u010delna.";
    },
    get$demoSelectionControlsRadioTitle() {
      return "Izbirni gumb";
    },
    get$demoSelectionControlsRadioDescription() {
      return "Z izbirnimi gumbi lahko uporabnik izbere eno mo\u017enost iz nabora. Izbirne gumbe uporabite za izklju\u010dno izbiro, \u010de menite, da mora uporabnik videti vse razpolo\u017eljive mo\u017enosti drugo ob drugi.";
    },
    get$demoSelectionControlsSwitchTitle() {
      return "Stikalo";
    },
    get$demoSelectionControlsSwitchDescription() {
      return "Stikala za vklop/izklop spremenijo stanje posamezne mo\u017enosti nastavitev. Z ustrezno oznako v besedilu mora biti jasno, katero mo\u017enost stikalo upravlja in kak\u0161no je njegovo stanje.";
    },
    get$demoTextFieldTitle() {
      return "Besedilna polja";
    },
    get$demoTextFieldSubtitle() {
      return "Vrstica besedila in \u0161tevilk, ki omogo\u010dajo urejanje";
    },
    get$demoTextFieldDescription() {
      return "Besedilna polja uporabnikom omogo\u010dajo vna\u0161anje besedila v uporabni\u0161ki vmesnik. Obi\u010dajno se pojavilo v obrazcih in pogovornih oknih.";
    },
    get$demoTextFieldShowPasswordLabel() {
      return "Poka\u017ei geslo";
    },
    get$demoTextFieldHidePasswordLabel() {
      return "Skrij geslo";
    },
    get$demoTextFieldFormErrors() {
      return "Pred po\u0161iljanjem popravite rde\u010de obarvane napake.";
    },
    get$demoTextFieldNameRequired() {
      return "Ime je obvezno.";
    },
    get$demoTextFieldOnlyAlphabeticalChars() {
      return "Vnesite samo abecedne znake.";
    },
    get$demoTextFieldEnterUSPhoneNumber() {
      return "(###) ###-#### \u2013 Vnesite telefonsko \u0161tevilko v Zdru\u017eenih dr\u017eavah.";
    },
    get$demoTextFieldEnterPassword() {
      return "Vnesite geslo.";
    },
    get$demoTextFieldPasswordsDoNotMatch() {
      return "Gesli se ne ujemata";
    },
    get$demoTextFieldWhatDoPeopleCallYou() {
      return "Kako vas ljudje kli\u010dejo?";
    },
    get$demoTextFieldNameField() {
      return "Ime*";
    },
    get$demoTextFieldWhereCanWeReachYou() {
      return "Na kateri \u0161tevilki ste dosegljivi?";
    },
    get$demoTextFieldPhoneNumber() {
      return "Telefonska \u0161tevilka*";
    },
    get$demoTextFieldYourEmailAddress() {
      return "Va\u0161 e-po\u0161tni naslov";
    },
    get$demoTextFieldEmail() {
      return "E-po\u0161tni naslov";
    },
    get$demoTextFieldTellUsAboutYourself() {
      return "Povejte nam ve\u010d o sebi (napi\u0161ite na primer, s \u010dim se ukvarjate ali katere konji\u010dke imate)";
    },
    get$demoTextFieldKeepItShort() {
      return "Bodite jedrnati, to je zgolj predstavitev.";
    },
    get$demoTextFieldLifeStory() {
      return "\u017divljenjska zgodba";
    },
    get$demoTextFieldSalary() {
      return "Pla\u010da";
    },
    get$demoTextFieldUSD() {
      return "USD";
    },
    get$demoTextFieldNoMoreThan() {
      return "Najve\u010d 8 znakov.";
    },
    get$demoTextFieldPassword() {
      return "Geslo*";
    },
    get$demoTextFieldRetypePassword() {
      return "Znova vnesite geslo*";
    },
    get$demoTextFieldSubmit() {
      return "PO\u0160LJI";
    },
    demoTextFieldNameHasPhoneNumber$2($name, phoneNumber) {
      return "Telefonska \u0161tevilka osebe " + $name + " je " + phoneNumber;
    },
    get$demoTextFieldRequiredField() {
      return "* ozna\u010duje obvezno polje";
    },
    get$demoTooltipTitle() {
      return "Opisi orodja";
    },
    get$demoTooltipSubtitle() {
      return "Kratko sporo\u010dilo, prikazano ob dolgem pritisku ali premiku mi\u0161kinega kazalca na element";
    },
    get$demoTooltipDescription() {
      return "Opisi orodja zagotavljajo besedilne oznake, ki pomagajo pojasniti funkcijo gumba ali drugega dejanja uporabni\u0161kega vmesnika. Opisi orodja prikazujejo informativno besedilo, kadar uporabniki premaknejo mi\u0161kin kazalec na element, izberejo element ali za dalj \u010dasa pritisnejo element.";
    },
    get$demoTooltipInstructions() {
      return "Za dalj \u010dasa pritisnite element ali premaknite mi\u0161kin kazalec nanj, \u010de \u017eelite prikazati opis orodja.";
    },
    get$bottomNavigationCommentsTab() {
      return "Komentarji";
    },
    get$bottomNavigationCalendarTab() {
      return "Koledar";
    },
    get$bottomNavigationAccountTab() {
      return "Ra\u010dun";
    },
    get$bottomNavigationAlarmTab() {
      return "Alarm";
    },
    get$bottomNavigationCameraTab() {
      return "Fotoaparat";
    },
    bottomNavigationContentPlaceholder$1(title) {
      return "Nadomestni znak za zavihek " + title;
    },
    get$buttonTextCreate() {
      return "Ustvari";
    },
    dialogSelectedOption$1(value) {
      return "Izbrali ste: \xbb" + value + "\xab";
    },
    get$chipTurnOnLights() {
      return "Vklop lu\u010di";
    },
    get$chipSmall() {
      return "Majhna";
    },
    get$chipMedium() {
      return "Srednja";
    },
    get$chipLarge() {
      return "Velika";
    },
    get$chipElevator() {
      return "Dvigalo";
    },
    get$chipWasher() {
      return "Pralni stroj";
    },
    get$chipFireplace() {
      return "Kamin";
    },
    get$chipBiking() {
      return "Kolesarjenje";
    },
    get$demo() {
      return "Predstavitvena razli\u010dica";
    },
    get$bottomAppBar() {
      return "Spodnja vrstica aplikacije";
    },
    get$loading() {
      return "Nalaganje";
    },
    get$dialogDiscardTitle() {
      return "\u017delite zavre\u010di osnutek?";
    },
    get$dialogLocationTitle() {
      return "\u017delite uporabljati Googlovo lokacijsko storitev?";
    },
    get$dialogLocationDescription() {
      return "Naj Google pomaga aplikacijam dolo\u010diti lokacijo. S tem se bodo Googlu po\u0161iljali anonimni podatki o lokaciji, tudi ko se ne izvaja nobena aplikacija.";
    },
    get$dialogCancel() {
      return "PREKLI\u010cI";
    },
    get$dialogDiscard() {
      return "ZAVRZI";
    },
    get$dialogDisagree() {
      return "NE STRINJAM SE";
    },
    get$dialogAgree() {
      return "STRINJAM SE";
    },
    get$dialogSetBackup() {
      return "Nastavite ra\u010dun za varnostno kopiranje";
    },
    get$dialogAddAccount() {
      return "Dodaj ra\u010dun";
    },
    get$dialogShow() {
      return "PRIKA\u017dI POGOVORNO OKNO";
    },
    get$dialogFullscreenTitle() {
      return "Celozaslonsko pogovorno okno";
    },
    get$dialogFullscreenSave() {
      return "SHRANI";
    },
    get$dialogFullscreenDescription() {
      return "Predstavitev celozaslonskega pogovornega okna";
    },
    get$cupertinoButton() {
      return "Gumb";
    },
    get$cupertinoButtonWithBackground() {
      return "Z ozadjem";
    },
    get$cupertinoAlertCancel() {
      return "Prekli\u010di";
    },
    get$cupertinoAlertDiscard() {
      return "Zavrzi";
    },
    get$cupertinoAlertLocationTitle() {
      return "Ali \u017eelite Zemljevidom omogo\u010diti dostop do lokacije, ko uporabljate aplikacijo?";
    },
    get$cupertinoAlertLocationDescription() {
      return "Va\u0161a trenutna lokacija bo prikazana na zemljevidu in se bo uporabljala za navodila za pot, rezultate iskanja v bli\u017eini in ocenjen \u010das potovanja.";
    },
    get$cupertinoAlertAllow() {
      return "Dovoli";
    },
    get$cupertinoAlertDontAllow() {
      return "Ne dovoli";
    },
    get$cupertinoAlertFavoriteDessert() {
      return "Izbira priljubljenega posladka";
    },
    get$cupertinoAlertDessertDescription() {
      return "Na spodnjem seznamu izberite priljubljeno vrsto posladka. Na podlagi va\u0161e izbire bomo prilagodili predlagani seznam okrep\u010devalnic na va\u0161em obmo\u010dju.";
    },
    get$cupertinoAlertCheesecake() {
      return "Skutina torta";
    },
    get$cupertinoAlertTiramisu() {
      return "Tiramisu";
    },
    get$cupertinoAlertApplePie() {
      return "Jabol\u010dna pita";
    },
    get$cupertinoAlertChocolateBrownie() {
      return "\u010cokoladni brownie";
    },
    get$cupertinoShowAlert() {
      return "Prika\u017ei opozorilo";
    },
    get$colorsRed() {
      return "RDE\u010cA";
    },
    get$colorsPink() {
      return "RO\u017dNATA";
    },
    get$colorsPurple() {
      return "VIJOLI\u010cNA";
    },
    get$colorsDeepPurple() {
      return "MO\u010cNO VIJOLI\u010cNA";
    },
    get$colorsIndigo() {
      return "INDIGO";
    },
    get$colorsBlue() {
      return "MODRA";
    },
    get$colorsLightBlue() {
      return "SVETLOMODRA";
    },
    get$colorsCyan() {
      return "CIJAN";
    },
    get$colorsTeal() {
      return "ZELENOMODRA";
    },
    get$colorsGreen() {
      return "ZELENA";
    },
    get$colorsLightGreen() {
      return "SVETLO ZELENA";
    },
    get$colorsLime() {
      return "RUMENOZELENA";
    },
    get$colorsYellow() {
      return "RUMENA";
    },
    get$colorsAmber() {
      return "JANTARNA";
    },
    get$colorsOrange() {
      return "ORAN\u017dNA";
    },
    get$colorsDeepOrange() {
      return "MO\u010cNO ORAN\u017dNA";
    },
    get$colorsBrown() {
      return "RJAVA";
    },
    get$colorsGrey() {
      return "SIVA";
    },
    get$colorsBlueGrey() {
      return "MODROSIVA";
    },
    get$placeChennai() {
      return "\u010cenaj";
    },
    get$placeTanjore() {
      return "Thanjavur";
    },
    get$placeChettinad() {
      return "Chettinad";
    },
    get$placePondicherry() {
      return "Pondicherry";
    },
    get$placeFlowerMarket() {
      return "Tr\u017enica s cvetjem";
    },
    get$placeBronzeWorks() {
      return "Bronaste umetnine";
    },
    get$placeMarket() {
      return "Tr\u017enica";
    },
    get$placeThanjavurTemple() {
      return "Tempelj v Thanjavurju";
    },
    get$placeSaltFarm() {
      return "Soline";
    },
    get$placeScooters() {
      return "Skiroji";
    },
    get$placeSilkMaker() {
      return "Svilar";
    },
    get$placeLunchPrep() {
      return "Priprava kosila";
    },
    get$placeBeach() {
      return "Pla\u017ea";
    },
    get$placeFisherman() {
      return "Ribi\u010d";
    },
    get$starterAppTitle() {
      return "Aplikacija za za\u010detek";
    },
    get$starterAppDescription() {
      return "Odzivna za\u010detna postavitev";
    },
    get$starterAppGenericButton() {
      return "GUMB";
    },
    get$starterAppTooltipAdd() {
      return "Dodajanje";
    },
    get$starterAppTooltipFavorite() {
      return "Priljubljeno";
    },
    get$starterAppTooltipShare() {
      return "Deljenje z drugimi";
    },
    get$starterAppTooltipSearch() {
      return "Iskanje";
    },
    get$starterAppGenericTitle() {
      return "Naslov";
    },
    get$starterAppGenericSubtitle() {
      return "Podnaslov";
    },
    get$starterAppGenericHeadline() {
      return "Naslov";
    },
    get$starterAppGenericBody() {
      return "Telo";
    },
    starterAppDrawerItem$1(value) {
      return "Element " + value;
    },
    get$shrineMenuCaption() {
      return "MENI";
    },
    get$shrineCategoryNameAll() {
      return "VSE";
    },
    get$shrineCategoryNameAccessories() {
      return "DODATKI";
    },
    get$shrineCategoryNameClothing() {
      return "OBLA\u010cILA";
    },
    get$shrineCategoryNameHome() {
      return "DOM";
    },
    get$shrineLogoutButtonCaption() {
      return "ODJAVA";
    },
    get$shrineLoginUsernameLabel() {
      return "Uporabni\u0161ko ime";
    },
    get$shrineLoginPasswordLabel() {
      return "Geslo";
    },
    get$shrineCancelButtonCaption() {
      return "PREKLI\u010cI";
    },
    get$shrineNextButtonCaption() {
      return "NAPREJ";
    },
    get$shrineCartPageCaption() {
      return "VOZI\u010cEK";
    },
    shrineProductQuantity$1(quantity) {
      return "Koli\u010dina: " + quantity;
    },
    shrineProductPrice$1(price) {
      return "x " + price;
    },
    shrineCartItemCount$1(quantity) {
      var t1 = "" + quantity;
      return A.Intl_pluralLogic(quantity, t1 + " IZDELKI", this.localeName, null, "1 IZDELEK", t1 + " IZDELKOV", t1 + " IZDELKA", "NI IZDELKOV", type$.String);
    },
    get$shrineCartClearButtonCaption() {
      return "PO\u010cISTI VOZI\u010cEK";
    },
    get$shrineCartTotalCaption() {
      return "SKUPNO";
    },
    get$shrineCartSubtotalCaption() {
      return "Delna vsota:";
    },
    get$shrineCartShippingCaption() {
      return "Po\u0161iljanje:";
    },
    get$shrineCartTaxCaption() {
      return "Davek:";
    },
    get$shrineProductVagabondSack() {
      return "Torba Vagabond";
    },
    get$shrineProductStellaSunglasses() {
      return "O\u010dala Stella";
    },
    get$shrineProductWhitneyBelt() {
      return "Pas Whitney";
    },
    get$shrineProductGardenStrand() {
      return "Vrtni okraski na vrvici";
    },
    get$shrineProductStrutEarrings() {
      return "Uhani Strut";
    },
    get$shrineProductVarsitySocks() {
      return "Nogavice z univerzitetnim vzorcem";
    },
    get$shrineProductWeaveKeyring() {
      return "Pleteni obesek za klju\u010de";
    },
    get$shrineProductGatsbyHat() {
      return "\u010cepica";
    },
    get$shrineProductShrugBag() {
      return "Enoramna torba";
    },
    get$shrineProductGiltDeskTrio() {
      return "Tri pozla\u010dene mizice";
    },
    get$shrineProductCopperWireRack() {
      return "Bakrena \u017ei\u010dnata stala\u017ea";
    },
    get$shrineProductSootheCeramicSet() {
      return "Kerami\u010dni komplet za pomirjanje";
    },
    get$shrineProductHurrahsTeaSet() {
      return "\u010cajni komplet Hurrahs";
    },
    get$shrineProductBlueStoneMug() {
      return "Lon\u010dek v slogu modrega kamna";
    },
    get$shrineProductRainwaterTray() {
      return "Posoda za de\u017eevnico";
    },
    get$shrineProductChambrayNapkins() {
      return "Prti\u010dki iz kamrika";
    },
    get$shrineProductSucculentPlanters() {
      return "Okrasni lonci za debelolistnice";
    },
    get$shrineProductQuartetTable() {
      return "Miza za \u0161tiri";
    },
    get$shrineProductKitchenQuattro() {
      return "Kuhinjski pomo\u010dnik";
    },
    get$shrineProductClaySweater() {
      return "Pulover ope\u010dnate barve";
    },
    get$shrineProductSeaTunic() {
      return "Tunika z morskim vzorcem";
    },
    get$shrineProductPlasterTunic() {
      return "Umazano bela tunika";
    },
    get$shrineProductWhitePinstripeShirt() {
      return "Bela \u010drtasta srajca";
    },
    get$shrineProductChambrayShirt() {
      return "Majica iz kamrika";
    },
    get$shrineProductSeabreezeSweater() {
      return "Pulover z vzorcem morskih valov";
    },
    get$shrineProductGentryJacket() {
      return "Jakna gentry";
    },
    get$shrineProductNavyTrousers() {
      return "Mornarsko modre hla\u010de";
    },
    get$shrineProductWalterHenleyWhite() {
      return "Majica z V-izrezom (bela)";
    },
    get$shrineProductSurfAndPerfShirt() {
      return "Surferska majica";
    },
    get$shrineProductGingerScarf() {
      return "Rde\u010dkasti \u0161al";
    },
    get$shrineProductRamonaCrossover() {
      return "Crossover izdelek Ramona";
    },
    get$shrineProductClassicWhiteCollar() {
      return "Klasi\u010dna bela srajca";
    },
    get$shrineProductCeriseScallopTee() {
      return "Svetlorde\u010da majica z volan\u010dki";
    },
    get$shrineProductShoulderRollsTee() {
      return "Majica z izrezom na ramah";
    },
    get$shrineProductGreySlouchTank() {
      return "Sivi ohlapni zgornji del";
    },
    get$shrineProductSunshirtDress() {
      return "Tunika za na pla\u017eo";
    },
    get$shrineProductFineLinesTee() {
      return "Majica s \u010drtami";
    },
    get$shrineTooltipSearch() {
      return "Iskanje";
    },
    get$shrineTooltipSettings() {
      return "Nastavitve";
    },
    get$shrineTooltipOpenMenu() {
      return "Odpiranje menija";
    },
    get$shrineTooltipCloseMenu() {
      return "Zapiranje menija";
    },
    get$shrineTooltipCloseCart() {
      return "Zapiranje vozi\u010dka";
    },
    shrineScreenReaderCart$1(quantity) {
      var t1 = "Nakupovalni vozi\u010dek, " + quantity;
      return A.Intl_pluralLogic(quantity, t1 + " izdelki", this.localeName, null, "Nakupovalni vozi\u010dek, 1 izdelek", t1 + " izdelkov", t1 + " izdelka", "Nakupovalni vozi\u010dek, ni izdelkov", type$.String);
    },
    get$shrineScreenReaderProductAddToCart() {
      return "Dodaj v ko\u0161arico";
    },
    shrineScreenReaderRemoveProductButton$1(product) {
      return "Odstranitev izdelka " + product;
    },
    get$shrineTooltipRemoveItem() {
      return "Odstranitev elementa";
    },
    get$craneFormDiners() {
      return "Okrep\u010devalnice";
    },
    get$craneFormDate() {
      return "Izberite datum";
    },
    get$craneFormTime() {
      return "Izberite \u010das";
    },
    get$craneFormLocation() {
      return "Izberite lokacijo";
    },
    get$craneFormTravelers() {
      return "Popotniki";
    },
    get$craneFormOrigin() {
      return "Izberite izhodi\u0161\u010de";
    },
    get$craneFormDestination() {
      return "Izberite cilj";
    },
    get$craneFormDates() {
      return "Izberite datume";
    },
    craneHours$1(hours) {
      var t1 = "" + hours + " h";
      return A.Intl_pluralLogic(hours, t1, this.localeName, null, "1 h", t1, t1, null, type$.String);
    },
    craneMinutes$1(minutes) {
      var t1 = "" + minutes + " min";
      return A.Intl_pluralLogic(minutes, t1, this.localeName, null, "1 min", t1, t1, null, type$.String);
    },
    craneFlightDuration$2(hoursShortForm, minutesShortForm) {
      return hoursShortForm + " " + minutesShortForm;
    },
    get$craneFly() {
      return "LETENJE";
    },
    get$craneSleep() {
      return "SPANJE";
    },
    get$craneEat() {
      return "HRANA";
    },
    get$craneFlySubhead() {
      return "Raziskovanje letov glede na cilj";
    },
    get$craneSleepSubhead() {
      return "Raziskovanje kapacitet glede na cilj";
    },
    get$craneEatSubhead() {
      return "Raziskovanje restavracij glede na cilj";
    },
    craneFlyStops$1(numberOfStops) {
      var t1 = "" + numberOfStops;
      return A.Intl_pluralLogic(numberOfStops, t1 + " postanki", this.localeName, null, "1 postanek", t1 + " postankov", t1 + " postanka", "Direktni let", type$.String);
    },
    craneSleepProperties$1(totalProperties) {
      var t1 = "" + totalProperties;
      return A.Intl_pluralLogic(totalProperties, t1 + " razpolo\u017eljive kapacitete", this.localeName, null, "Ena razpolo\u017eljiva kapaciteta", t1 + " razpolo\u017eljivih kapacitet", t1 + " razpolo\u017eljivi kapaciteti", "Ni razpolo\u017eljivih kapacitet", type$.String);
    },
    craneEatRestaurants$1(totalRestaurants) {
      var t1 = "" + totalRestaurants;
      return A.Intl_pluralLogic(totalRestaurants, t1 + " restavracije", this.localeName, null, "Ena restavracija", t1 + " restavracij", t1 + " restavraciji", "Ni restavracij", type$.String);
    },
    get$craneFly0() {
      return "Aspen, Zdru\u017eene dr\u017eave";
    },
    get$craneFly1() {
      return "Big Sur, Zdru\u017eene dr\u017eave";
    },
    get$craneFly2() {
      return "Dolina Khumbu, Nepal";
    },
    get$craneFly3() {
      return "Machu Picchu, Peru";
    },
    get$craneFly4() {
      return "Mal\xe9, Maldivi";
    },
    get$craneFly5() {
      return "Vitznau, \u0160vica";
    },
    get$craneFly6() {
      return "Ciudad de Mexico, Mehika";
    },
    get$craneFly7() {
      return "Gora Rushmore, Zdru\u017eene dr\u017eave";
    },
    get$craneFly8() {
      return "Singapur";
    },
    get$craneFly9() {
      return "Havana, Kuba";
    },
    get$craneFly10() {
      return "Kairo, Egipt";
    },
    get$craneFly11() {
      return "Lizbona, Portugalska";
    },
    get$craneFly12() {
      return "Napa, Zdru\u017eene dr\u017eave";
    },
    get$craneFly13() {
      return "Bali, Indonezija";
    },
    get$craneSleep0() {
      return "Mal\xe9, Maldivi";
    },
    get$craneSleep1() {
      return "Aspen, Zdru\u017eene dr\u017eave";
    },
    get$craneSleep2() {
      return "Machu Picchu, Peru";
    },
    get$craneSleep3() {
      return "Havana, Kuba";
    },
    get$craneSleep4() {
      return "Vitznau, \u0160vica";
    },
    get$craneSleep5() {
      return "Big Sur, Zdru\u017eene dr\u017eave";
    },
    get$craneSleep6() {
      return "Napa, Zdru\u017eene dr\u017eave";
    },
    get$craneSleep7() {
      return "Porto, Portugalska";
    },
    get$craneSleep8() {
      return "Tulum, Mehika";
    },
    get$craneSleep9() {
      return "Lizbona, Portugalska";
    },
    get$craneSleep10() {
      return "Kairo, Egipt";
    },
    get$craneSleep11() {
      return "Tajpej, Tajska";
    },
    get$craneEat0() {
      return "Neapelj, Italija";
    },
    get$craneEat1() {
      return "Dallas, Zdru\u017eene dr\u017eave";
    },
    get$craneEat2() {
      return "C\xf3rdoba, Argentina";
    },
    get$craneEat3() {
      return "Portland, Zdru\u017eene dr\u017eave";
    },
    get$craneEat4() {
      return "Pariz, Francija";
    },
    get$craneEat5() {
      return "Seul, Ju\u017ena Koreja";
    },
    get$craneEat6() {
      return "Seattle, Zdru\u017eene dr\u017eave";
    },
    get$craneEat7() {
      return "Nashville, Zdru\u017eene dr\u017eave";
    },
    get$craneEat8() {
      return "Atlanta, Zdru\u017eene dr\u017eave";
    },
    get$craneEat9() {
      return "Madrid, \u0160panija";
    },
    get$craneEat10() {
      return "Lizbona, Portugalska";
    },
    get$craneFly0SemanticLabel() {
      return string$.Planin;
    },
    get$craneFly1SemanticLabel() {
      return "\u0160otor na polju";
    },
    get$craneFly2SemanticLabel() {
      return "Molilne zastavice z zasne\u017eeno goro v ozadju";
    },
    get$craneFly3SemanticLabel() {
      return "Trdnjava Machu Picchu";
    },
    get$craneFly4SemanticLabel() {
      return "Bungalovi nad vodo";
    },
    get$craneFly5SemanticLabel() {
      return "Hotel ob jezeru z gorami v ozadju";
    },
    get$craneFly6SemanticLabel() {
      return "Pogled iz zraka na Palacio de Bellas Artes";
    },
    get$craneFly7SemanticLabel() {
      return "Gora Rushmore";
    },
    get$craneFly8SemanticLabel() {
      return "Supertree Grove";
    },
    get$craneFly9SemanticLabel() {
      return string$.Mo_ki_;
    },
    get$craneFly10SemanticLabel() {
      return "Stolpi mo\u0161eje al-Azhar ob son\u010dnem zahodu";
    },
    get$craneFly11SemanticLabel() {
      return "Ope\u010dnat svetilnik na morju";
    },
    get$craneFly12SemanticLabel() {
      return "Bazen s palmami";
    },
    get$craneFly13SemanticLabel() {
      return "Obmorski bazen s palmami";
    },
    get$craneSleep0SemanticLabel() {
      return "Bungalovi nad vodo";
    },
    get$craneSleep1SemanticLabel() {
      return string$.Planin;
    },
    get$craneSleep2SemanticLabel() {
      return "Trdnjava Machu Picchu";
    },
    get$craneSleep3SemanticLabel() {
      return string$.Mo_ki_;
    },
    get$craneSleep4SemanticLabel() {
      return "Hotel ob jezeru z gorami v ozadju";
    },
    get$craneSleep5SemanticLabel() {
      return "\u0160otor na polju";
    },
    get$craneSleep6SemanticLabel() {
      return "Bazen s palmami";
    },
    get$craneSleep7SemanticLabel() {
      return "Barvita stanovanja na trgu Ribeira";
    },
    get$craneSleep8SemanticLabel() {
      return "Majevske razvaline na pe\u010dini nad obalo";
    },
    get$craneSleep9SemanticLabel() {
      return "Ope\u010dnat svetilnik na morju";
    },
    get$craneSleep10SemanticLabel() {
      return "Stolpi mo\u0161eje al-Azhar ob son\u010dnem zahodu";
    },
    get$craneSleep11SemanticLabel() {
      return "Neboti\u010dnik Taipei 101";
    },
    get$craneEat0SemanticLabel() {
      return "Pica v kru\u0161ni pe\u010di";
    },
    get$craneEat1SemanticLabel() {
      return "Prazen bar s stoli v slogu okrep\u010devalnice";
    },
    get$craneEat2SemanticLabel() {
      return "Burger";
    },
    get$craneEat3SemanticLabel() {
      return "Korejski taco";
    },
    get$craneEat4SemanticLabel() {
      return "\u010cokoladni posladek";
    },
    get$craneEat5SemanticLabel() {
      return "Prostor za sedenje v restavraciji z umetni\u0161kim vzdu\u0161jem";
    },
    get$craneEat6SemanticLabel() {
      return "Jed z rakci";
    },
    get$craneEat7SemanticLabel() {
      return "Vhod v pekarno";
    },
    get$craneEat8SemanticLabel() {
      return "Porcija sladkovodnega raka";
    },
    get$craneEat9SemanticLabel() {
      return "Kavarni\u0161ki pult s pecivom";
    },
    get$craneEat10SemanticLabel() {
      return "\u017denska, ki dr\u017ei ogromen sendvi\u010d s pastramijem";
    },
    get$fortnightlyMenuFrontPage() {
      return "Prva stran";
    },
    get$fortnightlyMenuWorld() {
      return "Svet";
    },
    get$fortnightlyMenuUS() {
      return "Zdru\u017eene dr\u017eave";
    },
    get$fortnightlyMenuPolitics() {
      return "Politika";
    },
    get$fortnightlyMenuBusiness() {
      return "Posel";
    },
    get$fortnightlyMenuTech() {
      return "Tehnologija";
    },
    get$fortnightlyMenuScience() {
      return "Znanost";
    },
    get$fortnightlyMenuSports() {
      return "\u0160port";
    },
    get$fortnightlyMenuTravel() {
      return "Potovanja";
    },
    get$fortnightlyMenuCulture() {
      return "Kultura";
    },
    get$fortnightlyTrendingTechDesign() {
      return "Tehnolo\u0161ko oblikovanje";
    },
    get$fortnightlyTrendingReform() {
      return "Reforme";
    },
    get$fortnightlyTrendingHealthcareRevolution() {
      return "Revolucija v zdravstvu";
    },
    get$fortnightlyTrendingGreenArmy() {
      return "Zelena vojska";
    },
    get$fortnightlyTrendingStocks() {
      return "Delnice";
    },
    get$fortnightlyLatestUpdates() {
      return "Zadnje novice";
    },
    get$fortnightlyHeadlineHealthcare() {
      return "Tiha, vendar krepka revolucija v zdravstvu";
    },
    get$fortnightlyHeadlineWar() {
      return "Lo\u010dena ameri\u0161ka \u017eivljenja med vojno";
    },
    get$fortnightlyHeadlineGasoline() {
      return "Prihodnost bencina";
    },
    get$fortnightlyHeadlineArmy() {
      return "Reformiranje zelene vojske od znotraj";
    },
    get$fortnightlyHeadlineStocks() {
      return "Ob stagnaciji delnic se \u0161tevilni ozirajo k valutam";
    },
    get$fortnightlyHeadlineFabrics() {
      return "Oblikovalci si s tehnologijo pomagajo do tkanin prihodnosti";
    },
    get$fortnightlyHeadlineFeminists() {
      return "Feministke nad strankarstvo";
    },
    get$fortnightlyHeadlineBees() {
      return "Primanjkljaj \u010debel na de\u017eeli";
    },
    get$replyInboxLabel() {
      return "Prejeto";
    },
    get$replyStarredLabel() {
      return "Z zvezdico";
    },
    get$replySentLabel() {
      return "Poslano";
    },
    get$replyTrashLabel() {
      return "Smetnjak";
    },
    get$replySpamLabel() {
      return "Vsiljena po\u0161ta";
    },
    get$replyDraftsLabel() {
      return "Osnutki";
    },
    get$demoTwoPaneFoldableLabel() {
      return "Pregibne";
    },
    get$demoTwoPaneFoldableDescription() {
      return "Tako TwoPane deluje v pregibni napravi.";
    },
    get$demoTwoPaneSmallScreenLabel() {
      return "Majhen zaslon";
    },
    get$demoTwoPaneSmallScreenDescription() {
      return "Tako TwoPane deluje v napravi z majhnim zaslonom.";
    },
    get$demoTwoPaneTabletLabel() {
      return "Tabli\u010dni/namizni ra\u010dunalniki";
    },
    get$demoTwoPaneTabletDescription() {
      return "Tako TwoPane deluje v napravi z ve\u010djim zaslonom, kot je tabli\u010dni ali namizni ra\u010dunalnik.";
    },
    get$demoTwoPaneTitle() {
      return "TwoPane";
    },
    get$demoTwoPaneSubtitle() {
      return "Odzivne postavitve na pregibnih, velikih in majhnih zaslonih";
    },
    get$splashSelectDemo() {
      return "Izberite predstavitev";
    },
    get$demoTwoPaneList() {
      return "Seznam";
    },
    get$demoTwoPaneDetails() {
      return "Podrobnosti";
    },
    get$demoTwoPaneSelectItem() {
      return "Izberite element";
    },
    demoTwoPaneItem$1(value) {
      return "Element " + value;
    },
    demoTwoPaneItemDetails$1(value) {
      return "Podrobnosti elementa " + value;
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.GalleryLocalizationsSl, C.GalleryLocalizations);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"GalleryLocalizationsSl":{"GalleryLocalizations":[]}}'));
  var string$ = {
    Mo_ki_: "Mo\u0161ki, naslonjen na starinski modri avtomobil",
    Planin: "Planinska ko\u010da v zasne\u017eeni pokrajini z zimzelenimi drevesi"
  };
  var type$ = {
    String: A.findType("String")
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_537", e: "endPart", h: h});
})($__dart_deferred_initializers__, "/0DQnfYmMM4wyvVqIW32zNdwYyw=");
;