// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.0-167.0.dev.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_577", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, A, C,
  B = {RenderIndexedStack: function RenderIndexedStack(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._stack$_index = t0;
      _._hasVisualOverflow = false;
      _._resolvedAlignmentCache = null;
      _._stack$_alignment = t1;
      _._stack$_textDirection = t2;
      _._fit = t3;
      _._stack$_clipBehavior = t4;
      _._stack$_clipRectLayer = t5;
      _.ContainerRenderObjectMixin__childCount = t6;
      _.ContainerRenderObjectMixin__firstChild = t7;
      _.ContainerRenderObjectMixin__lastChild = t8;
      _._layoutCacheStorage = t9;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t10;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    }, RenderIndexedStack_hitTestChildren_closure: function RenderIndexedStack_hitTestChildren_closure(t0, t1, t2) {
      this.position = t0;
      this.childParentData = t1;
      this.displayedChild = t2;
    },
    IndexedStack$(alignment, children, index) {
      return new B.IndexedStack(alignment, index, children, null);
    },
    IndexedStack: function IndexedStack(t0, t1, t2, t3) {
      var _ = this;
      _.alignment = t0;
      _.index = t1;
      _.children = t2;
      _.key = t3;
    },
    _RawIndexedStack: function _RawIndexedStack(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.index = t0;
      _.alignment = t1;
      _.textDirection = t2;
      _.fit = t3;
      _.clipBehavior = t4;
      _.children = t5;
      _.key = t6;
    },
    _IndexedStackElement: function _IndexedStackElement(t0, t1, t2) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children_A = $;
      _._forgottenChildren = t0;
      _._slot = _._notificationTree = _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._framework$_owner = null;
      _._lifecycleState = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    }
  };
  J = holdersList[1];
  A = holdersList[0];
  C = holdersList[2];
  B = hunkHelpers.updateHolder(holdersList[102], B);
  B.RenderIndexedStack.prototype = {
    visitChildrenForSemantics$1(visitor) {
      var displayedChild;
      type$.void_Function_RenderObject._as(visitor);
      displayedChild = this._childAtIndex$0();
      if (displayedChild != null)
        visitor.call$1(displayedChild);
    },
    _childAtIndex$0() {
      var child, t1, t2, i, t3,
        index = this._stack$_index;
      if (index == null)
        return null;
      child = this.ContainerRenderObjectMixin__firstChild;
      t1 = A._instanceType(this);
      t2 = t1._eval$1("ContainerRenderObjectMixin.0");
      t1 = t1._eval$1("ContainerRenderObjectMixin.1");
      i = 0;
      while (true) {
        if (!(i < index && child != null))
          break;
        t3 = t2._as(child).parentData;
        t3.toString;
        child = t1._as(t3).ContainerParentDataMixin_nextSibling;
        ++i;
      }
      return child;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var displayedChild, t1;
      type$.TextBaseline._as(baseline);
      displayedChild = this._childAtIndex$0();
      if (displayedChild == null)
        return null;
      t1 = displayedChild.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      return A.BaselineOffset__(displayedChild.getDistanceToActualBaseline$1(baseline), t1.offset._dy);
    },
    computeDryBaseline$2(constraints, baseline) {
      var displayedChild, t2, alignment, _this = this,
        t1 = type$.BoxConstraints;
      t1._as(constraints);
      type$.TextBaseline._as(baseline);
      displayedChild = _this._childAtIndex$0();
      if (displayedChild == null)
        return null;
      switch (_this._fit.index) {
        case 0:
          t2 = new A.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight);
          break;
        case 1:
          t2 = A.BoxConstraints$tight(new A.Size(A.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), A.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight)));
          break;
        case 2:
          t2 = constraints;
          break;
        default:
          t2 = null;
      }
      alignment = _this.get$_stack$_resolvedAlignment();
      return A.RenderStack__baselineForChild(displayedChild, _this._computeIntrinsics$2$3(C.C__DryLayout, constraints, _this.get$_computeDryLayout(), t1, type$.Size), t2, alignment, baseline);
    },
    hitTestChildren$2$position(result, position) {
      var t1,
        displayedChild = this._childAtIndex$0();
      if (displayedChild == null)
        return false;
      t1 = displayedChild.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      return result.addWithPaintOffset$3$hitTest$offset$position(new B.RenderIndexedStack_hitTestChildren_closure(position, t1, displayedChild), t1.offset, position);
    },
    paintStack$2(context, offset) {
      var displayedChild, t1;
      type$.PaintingContext._as(context);
      type$.Offset._as(offset);
      displayedChild = this._childAtIndex$0();
      if (displayedChild == null)
        return;
      t1 = displayedChild.parentData;
      t1.toString;
      context.paintChild$2(displayedChild, type$.StackParentData._as(t1).offset.$add(0, offset));
    },
    debugDescribeChildren$0() {
      var t1, i, i0, t2,
        children = A._setArrayType([], type$.JSArray_DiagnosticsNode),
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, i = 0; child != null; i = i0) {
        i0 = i + 1;
        t2 = i !== this._stack$_index ? C.DiagnosticsTreeStyle_2 : null;
        C.JSArray_methods.add$1(children, new A.DiagnosticableTreeNode(child, "child " + i0, true, true, null, t2));
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
      return children;
    }
  };
  B.IndexedStack.prototype = {
    build$1(context) {
      var t2, t3, i,
        t1 = this.children,
        _length = t1.length,
        wrappedChildren = J.JSArray_JSArray$allocateGrowable(_length, type$.Widget);
      for (t2 = this.index, t3 = t1.length, i = 0; i < _length; ++i) {
        if (!(i < t3))
          return A.ioore(t1, i);
        wrappedChildren[i] = new A.Visibility(t1[i], i === t2, true, true, true, true, true, null);
      }
      return new B._RawIndexedStack(t2, this.alignment, null, C.StackFit_0, C.Clip_1, wrappedChildren, null);
    }
  };
  B._RawIndexedStack.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = _this.textDirection;
      if (t1 == null)
        t1 = A.Directionality_maybeOf(context);
      t1 = new B.RenderIndexedStack(_this.index, _this.alignment, t1, _this.fit, _this.clipBehavior, A.LayerHandle$(type$.ClipRectLayer), 0, null, null, new A._LayoutCacheStorage(), A.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderIndexedStack._as(renderObject);
      t1 = _this.index;
      if (renderObject._stack$_index != t1) {
        renderObject._stack$_index = t1;
        renderObject.markNeedsLayout$0();
      }
      renderObject.set$fit(_this.fit);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$alignment(_this.alignment);
      t1 = _this.textDirection;
      renderObject.set$textDirection(t1 == null ? A.Directionality_maybeOf(context) : t1);
    },
    createElement$0(_) {
      return new B._IndexedStackElement(A.HashSet_HashSet(type$.Element), this, C._ElementLifecycle_0);
    }
  };
  B._IndexedStackElement.prototype = {
    get$widget() {
      return type$._RawIndexedStack._as(A.Element.prototype.get$widget.call(this));
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["~(PaintingContext,Offset)"]);
  B.RenderIndexedStack_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.displayedChild.hitTest$2$position(result, transformed);
    },
    $signature: 12
  };
  (function installTearOffs() {
    var _instance_2_u = hunkHelpers._instance_2u;
    _instance_2_u(B.RenderIndexedStack.prototype, "get$paintStack", "paintStack$2", 0);
  })();
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.RenderIndexedStack, A.RenderStack);
    _inherit(B.RenderIndexedStack_hitTestChildren_closure, A.Closure2Args);
    _inherit(B.IndexedStack, A.StatelessWidget);
    _inherit(B._RawIndexedStack, A.Stack);
    _inherit(B._IndexedStackElement, A.MultiChildRenderObjectElement);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"RenderIndexedStack":{"RenderStack":[],"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"StackParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"IndexedStack":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawIndexedStack":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_IndexedStackElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]}}'));
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      BoxConstraints: findType("BoxConstraints"),
      ClipRectLayer: findType("ClipRectLayer"),
      ContainerLayer: findType("ContainerLayer0"),
      Element: findType("Element"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      Offset: findType("Offset"),
      PaintingContext: findType("PaintingContext"),
      RenderIndexedStack: findType("RenderIndexedStack"),
      Size: findType("Size"),
      StackParentData: findType("StackParentData"),
      TextBaseline: findType("TextBaseline"),
      Widget: findType("Widget"),
      _RawIndexedStack: findType("_RawIndexedStack"),
      void_Function_RenderObject: findType("~(RenderObject)")
    };
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_577", e: "endPart", h: h});
})($__dart_deferred_initializers__, "1+qs6BztQR+vxpvBuvEgLciY3Tw=");
;